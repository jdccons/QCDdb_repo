Version =20
VersionRequired =20
Checksum =-356237545
Begin Form
    RecordSelectors = NotDefault
    AutoCenter = NotDefault
    NavigationButtons = NotDefault
    DividingLines = NotDefault
    DefaultView =0
    ScrollBars =0
    ViewsAllowed =1
    TabularFamily =0
    PictureAlignment =2
    DatasheetGridlinesBehavior =3
    GridX =24
    GridY =24
    Width =6480
    DatasheetFontHeight =10
    ItemSuffix =21
    Left =3915
    Top =915
    Right =10155
    Bottom =4440
    DatasheetGridlinesColor =12632256
    RecSrcDt = Begin
        0xbc95af575f87e240
    End
    Caption ="Process EDI Import"
    DatasheetFontName ="Arial"
    PrtMip = Begin
        0xa0050000a0050000a0050000a005000000000000201c0000e010000001000000 ,
        0x010000006801000000000000a10700000100000001000000
    End
    PrtDevMode = Begin
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x01043c079c00d006038f0002010001009a0b3408640001000100580202000100 ,
        0x0000030001004134000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000050524956 ,
        0xe012000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000180000000000102710271027 ,
        0x0000102700000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x000000000000000000000000
    End
    PrtDevNames = Begin
        0x08001b002e000100000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000446f6375436f6d2050444620506f72743a00
    End
    Begin
        Begin Label
            BackStyle =0
            FontName ="Tahoma"
        End
        Begin Rectangle
            SpecialEffect =3
            BackStyle =0
        End
        Begin CommandButton
            FontSize =8
            FontWeight =400
            ForeColor =-2147483630
            FontName ="Tahoma"
        End
        Begin TextBox
            SpecialEffect =2
            OldBorderStyle =0
            FontName ="Tahoma"
        End
        Begin ComboBox
            SpecialEffect =2
            FontName ="Tahoma"
        End
        Begin Section
            Height =3780
            BackColor =-2147483633
            Name ="Detail"
            Begin
                Begin CommandButton
                    OverlapFlags =93
                    Left =180
                    Top =180
                    Width =1320
                    Height =420
                    Name ="cmdFileOpen"
                    Caption ="Select File"
                    OnClick ="[Event Procedure]"
                End
                Begin TextBox
                    OverlapFlags =95
                    Left =1560
                    Top =360
                    Width =4740
                    TabIndex =1
                    Name ="txtFileToProcess"
                    Begin
                        Begin Label
                            OverlapFlags =93
                            Left =1560
                            Top =120
                            Width =1245
                            Height =240
                            Name ="Label2"
                            Caption ="File To Process: "
                        End
                    End
                End
                Begin ComboBox
                    LimitToList = NotDefault
                    OverlapFlags =93
                    ColumnCount =2
                    ListWidth =3600
                    Left =1500
                    Top =1440
                    Width =2340
                    TabIndex =2
                    ColumnInfo ="\"\";\"\";\"\";\"\";\"10\";\"60\""
                    Name ="cboGroups"
                    RowSourceType ="Table/Query"
                    RowSource ="SELECT tblGrp.GROUPid, tblGrp.GRname FROM tblGrp ORDER BY tblGrp.GRname;"
                    ColumnWidths ="0;3600"
                    AfterUpdate ="[Event Procedure]"
                    BaseInfo ="\"SELECT tblGrp.GROUPid, tblGrp.GRname FROM tblGrp ORDER BY tblGrp.GRname;\";\"t"
                        "blGrp\";\"\";\"GROUPid\";\"GRname\";\"PK_tblGrp\""
                    Begin
                        Begin Label
                            OverlapFlags =93
                            Left =420
                            Top =1440
                            Width =1020
                            Height =240
                            Name ="Label4"
                            Caption ="Select Group"
                        End
                    End
                End
                Begin CommandButton
                    OverlapFlags =85
                    Left =180
                    Top =780
                    Width =1320
                    Height =420
                    TabIndex =3
                    Name ="cmdProcess"
                    Caption ="Process File"
                    OnClick ="[Event Procedure]"
                End
                Begin CommandButton
                    OverlapFlags =93
                    Left =420
                    Top =2460
                    Width =2460
                    Height =420
                    TabIndex =4
                    Name ="cmdPrintNewSubscr"
                    Caption ="Print New Subscribers List"
                    OnClick ="[Event Procedure]"
                End
                Begin CommandButton
                    OverlapFlags =93
                    Left =420
                    Top =3060
                    Width =2460
                    Height =420
                    TabIndex =5
                    Name ="cmdAddToDB"
                    Caption ="Add Group to DB"
                    OnClick ="[Event Procedure]"
                End
                Begin TextBox
                    Visible = NotDefault
                    ScrollBars =2
                    OverlapFlags =95
                    Left =4200
                    Top =1500
                    Width =2100
                    Height =2040
                    TabIndex =6
                    Name ="txtEDIContents"
                    Begin
                        Begin Label
                            OverlapFlags =93
                            Left =4200
                            Top =1260
                            Width =1260
                            Height =240
                            Name ="Label9"
                            Caption ="EDI File Contents"
                        End
                    End
                End
                Begin Rectangle
                    OverlapFlags =247
                    Left =120
                    Top =60
                    Width =6240
                    Height =600
                    Name ="Box10"
                End
                Begin TextBox
                    OverlapFlags =85
                    Left =3060
                    Top =840
                    Width =2040
                    TabIndex =7
                    BackColor =16777164
                    Name ="txtGroup"
                    Begin
                        Begin Label
                            OverlapFlags =85
                            Left =1680
                            Top =840
                            Width =1305
                            Height =240
                            Name ="Label12"
                            Caption ="EDI Group Name "
                        End
                    End
                End
                Begin TextBox
                    Visible = NotDefault
                    OverlapFlags =93
                    Left =2760
                    Top =1800
                    Width =1140
                    TabIndex =8
                    BackColor =10092543
                    Name ="txtGrpID"
                End
                Begin TextBox
                    Visible = NotDefault
                    OverlapFlags =93
                    Left =2760
                    Top =2100
                    Width =1140
                    TabIndex =9
                    BackColor =10092543
                    Name ="txtPlanID"
                End
                Begin Rectangle
                    OverlapFlags =255
                    Left =240
                    Top =1260
                    Width =3780
                    Height =2400
                    Name ="Box18"
                End
                Begin CommandButton
                    OverlapFlags =247
                    Left =420
                    Top =1860
                    Width =2460
                    Height =420
                    TabIndex =10
                    Name ="cmdPrepare"
                    Caption ="Prepare Data for Import"
                    OnClick ="[Event Procedure]"
                End
                Begin CommandButton
                    OverlapFlags =247
                    Left =5580
                    Top =3180
                    Width =726
                    Height =486
                    TabIndex =11
                    Name ="cmdClose"
                    Caption ="Command20"
                    OnClick ="[Event Procedure]"
                    PictureData = Begin
                        0x2800000010000000100000000100040000000000800000000000000000000000 ,
                        0x0000000000000000000000000000800000800000008080008000000080008000 ,
                        0x8080000080808000c0c0c0000000ff00c0c0c00000ffff00ff000000c0c0c000 ,
                        0xffff0000ffffff00dadad0dadadadadaadad00adadadadaddad030dadadadada ,
                        0xad0330adadadadad0033300000000adaa03330ff0dadadadd03300ff0adad4da ,
                        0xa03330ff0dad44add03330ff0ad44444a03330ff0d444444d03330ff0ad44444 ,
                        0xa0330fff0dad44add030ffff0adad4daa00fffff0dadadadd00000000adadada ,
                        0xadadadadadadadad000000000000000000000000000000000000000000000000 ,
                        0x0000000000000000000000000000000000000000000000000000000000000000 ,
                        0x0000000000000000000000000000000000000000000000000000000000000000 ,
                        0x0000000000000000000000000000000000000000000000000000000000000000 ,
                        0x0000000000000000000000000000000000000000000000000000000000000000 ,
                        0x0000000000000000000000000000000000000000000000000000000000000000 ,
                        0x0000000000000000000000000000000000000000000000000000000000000000 ,
                        0x0000000000000000000000000000000000000000000000000000000000000000 ,
                        0x0000000000000000000000000000000000000000000000000000000000000000 ,
                        0x00000000000000000000000000000000
                    End
                    ObjectPalette = Begin
                        0x0003100000000000800000000080000080800000000080008000800000808000 ,
                        0x80808000c0c0c000ff000000c0c0c000ffff00000000ff00c0c0c00000ffff00 ,
                        0xffffff0000000000
                    End
                    ControlTipText ="Close Form"
                End
            End
        End
    End
End
CodeBehindForm
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Option Compare Database
Option Explicit

Dim fCheck As Boolean
Dim fReformat As Boolean
Dim fDSSN As Boolean
Dim lngPlace As Long
Dim lngNext As Long
' Subscriber
Dim strSSN As String
Dim strLName As String
Dim strFname As String
Dim strMI As String
Dim strNameSuf As String
Dim strAddr As String
Dim strAddr2 As String
Dim strCity As String
Dim strState As String
Dim strZip As String
Dim strDOB As String
Dim strGen As String
Dim strEligStart As String
Dim strEligEnd As String
' Dependent
Dim strDSSN As String
Dim strDLName As String
Dim strDFName As String
Dim strDMI As String
Dim strDNameSuf As String
Dim strDAddr As String
Dim strDAddr2 As String
Dim strDCity As String
Dim strDState As String
Dim strDZip As String
Dim strDDOB As String
Dim strDGen As String
Dim strDEligStart As String
Dim strDEligEnd As String
Dim strIns As String

Dim strCovr As String
Dim intTier As Integer
Dim strTier As String
Dim intDepCnt As Integer
Dim strDepCode As String
Dim lngLineCntStart As Long
Dim lngLineCntEnd As Long
Dim lngLineTotal As Long
Dim lngTest As Long
Dim lngCnt As Long
Dim intProc As Integer
Dim fLast As Boolean


Private Sub cboGroups_AfterUpdate()
    
    Me.txtGrpID = Me.cboGroups.Column(0)
    Me.txtPlanID = Me.cboGroups.Column(2)
    
End Sub

Private Sub cmdAddToDB_Click()
    
      On Error GoTo Err_cmdAddToDB_Click
    
      Dim intResp As Integer
      Dim strGrp As String
      Dim lngImpS As Long
      Dim lngImpD As Long
      Dim lngCurS As Long
      Dim lngCurD As Long
      Dim strMsg As String
      Dim strGrpID As String
      Dim strSQL As String
      
      Dim db As DAO.Database
      Dim rst As DAO.Recordset
      
      Set db = CurrentDb()
      ' get Import Subscriber count
      strSQL = "SELECT Count(tblEDI_App_Subscr.SUBssn) AS ImpSCnt FROM tblEDI_App_Subscr;"
      Set rst = db.OpenRecordset(strSQL, dbOpenSnapshot)
      If rst.RecordCount > 0 Then
        lngImpS = rst.Fields("ImpSCnt")
        rst.Close
      Else
        lngImpS = 0
      End If
      ' get Import Dependent Count
      strSQL = "SELECT Count(tblEDI_App_Dep.DEPsubID) AS ImpDCnt FROM tblEDI_App_Dep;"
      Set rst = db.OpenRecordset(strSQL, dbOpenSnapshot)
      If rst.RecordCount > 0 Then
        lngImpD = rst.Fields("ImpDCnt")
        rst.Close
      Else
        lngImpD = 0
      End If
      
      ' get Current Subscriber count
      strSQL = "SELECT Count(tblSubscr.SUBssn) AS CurSCnt, tblSubscr.SUBgroupID FROM tblSubscr GROUP BY tblSubscr.SUBgroupID " & _
               "HAVING (((tblSubscr.SUBgroupID)='" & [Forms]![frmEDI].[txtGrpID] & "'));"
      Set rst = db.OpenRecordset(strSQL, dbOpenSnapshot)
      If rst.RecordCount > 0 Then
        lngCurS = rst.Fields("CurSCnt")
        rst.Close
      Else
        lngImpS = 0
      End If
      ' get Current Dependent Count
      strSQL = "SELECT Count(tblDependent.DEPsubID) AS CurDCnt FROM tblSubscr INNER JOIN tblDependent ON tblSubscr.SUBssn = tblDependent.DEPsubID " & _
               "WHERE (((tblSubscr.SUBgroupID)='" & [Forms]![frmEDI].[txtGrpID] & "'));"
      Set rst = db.OpenRecordset(strSQL, dbOpenSnapshot)
      If rst.RecordCount > 0 Then
        lngCurD = rst.Fields("CurDCnt")
        rst.Close
      Else
        lngImpD = 0
      End If
          
      strMsg = "Group: " & Me.cboGroups.Column(1) & vbCrLf & vbCrLf
      strMsg = strMsg & "HIPAA File:" & vbCrLf
      strMsg = strMsg & "Subscribers - " & CStr(lngImpS) & vbCrLf
      strMsg = strMsg & "Dependents - " & CStr(lngImpD) & vbCrLf & vbCrLf
      strMsg = strMsg & "Current Counts: " & vbCrLf
      strMsg = strMsg & "Subscribers - " & CStr(lngCurS) & vbCrLf
      strMsg = strMsg & "Dependents - " & CStr(lngCurD) & vbCrLf & vbCrLf
      strMsg = strMsg & "Are you sure you want to perform this update? " & vbCrLf
      strMsg = strMsg & "This procedure cannot be undone!"
      
      intResp = MsgBox(strMsg, vbQuestion + vbYesNo + vbDefaultButton2, "QCD: Confirm Action")
      If intResp = vbYes Then
        DoCmd.SetWarnings False
        db.Execute ("DELETE tblSubscr.* FROM tblSubscr WHERE (((tblSubscr.SUBgroupID)= '" & [Forms]![frmEDI].[txtGrpID] & "'));")
        db.Execute ("DELETE tblSubscr.* FROM tblSubscr INNER JOIN tblEDI_App_Subscr ON tblSubscr.SUBssn = tblEDI_App_Subscr.SUBssn;")
        Set db = Nothing
        DoCmd.OpenQuery "qappEDI_Subscr_Final"
        DoCmd.OpenQuery "qappEDI_Dep_Final"
        DoCmd.SetWarnings True
        MsgBox "EDI File information imported.", vbExclamation, "QCD: Confirm"
      End If
      
Exit_cmdAddToDB_Click:

    Me.cmdProcess.SetFocus
    Exit Sub

Err_cmdAddToDB_Click:
    MsgBox Err.DESCRIPTION
    Resume Exit_cmdAddToDB_Click
    
End Sub

Private Sub cmdFileOpen_Click()
On Error GoTo Err_cmdOpenFile_Click


  Dim strFileName As String
  Dim strFile As String

  strFile = GetOpenFile_TSB("C:\My Documents", "Select EDI File")
  
    If Not IsNull(strFile) Then
        Me.txtFileToProcess = strFile
        strFileName = strFile
        intProc = 1
    End If

Exit_cmdOpenFile_Click:

    Me.cmdProcess.SetFocus
    Exit Sub

Err_cmdOpenFile_Click:
    MsgBox Err.DESCRIPTION
    Resume Exit_cmdOpenFile_Click

    
End Sub

Private Sub cmdPrepare_Click()
    
    With Me
        If .txtGrpID = "" Or IsNull(.txtGrpID) Then
            MsgBox "Please select a Group to Process", vbExclamation, "QCD: Error"
            Exit Sub
        End If
        If .txtPlanID = "" Or IsNull(.txtPlanID) Then
            MsgBox "Please select a Group to Process", vbExclamation, "QCD: Error"
            Exit Sub
        End If
        
        DoCmd.Hourglass True
        DoCmd.SetWarnings False
        DoCmd.RunSQL "DELETE * FROM tblEDI_App_Subscr"
        DoCmd.RunSQL "DELETE * FROM tblEDI_App_Dep"
        DoCmd.OpenQuery "qappEDI_App_Subscr"
        DoCmd.OpenQuery "qappEDI_App_Dep"
        DoCmd.OpenQuery "qupdEDISubRates"
        DoCmd.SetWarnings True
        DoCmd.Hourglass False
        
        MsgBox "EDI File information ready for import.", vbExclamation, "QCD: Confirm"
    End With
    
End Sub

Private Sub cmdPrintNewSubscr_Click()
    
    DoCmd.SetWarnings False
    DoCmd.RunSQL "DELETE * FROM tmpEDI_rpt"
    DoCmd.OpenQuery "qrpt_EDI_NewSubs"
    DoCmd.OpenQuery "qrpt_EDI_GrpSubs"
    DoCmd.OpenQuery "qrpt_EDI_IndivSubs"
    
    DoCmd.OpenReport "rptEDI_NewSubscribers", acViewPreview
    DoCmd.SetWarnings True
    
End Sub

Private Sub cmdProcess_Click()
On Error GoTo HandleError
    
    Dim objFile As TextFile2
    Dim cLines As Long
    Dim strOut As String
    Dim intCnt As Integer
    
    
    DoCmd.OpenForm "frmProcessing"
    DoEvents
    DoCmd.Hourglass True
    
    With Me
        .txtEDIContents.Visible = True
        .txtEDIContents = ""
    End With
        
    ' Clear the Import tables
    DoCmd.SetWarnings False
    DoCmd.RunSQL "DELETE * FROM tblEDI_Dep_Import"
    DoCmd.RunSQL "DELETE * FROM tblEDI_Subscr_Import"
    DoCmd.SetWarnings True
    
    ' Create new instance of TextFile class
    ' and set the Path property
    Set objFile = New TextFile2
    objFile.path = Me.txtFileToProcess
    
    If objFile.FileOpen() Then
    lngLineTotal = objFile.Lines.Count
        If lngLineTotal = 1 Then
            DoCmd.Hourglass False
            DoCmd.Close acForm, "frmProcessing"
            Dim intResp As Integer
            intResp = MsgBox("This EDI File needs to be reformatted before it can be processed.  This process will take several minutes.  Do you want to reformat now?", vbYesNo + vbQuestion + vbDefaultButton2, "QCD: Notice")
            If intResp = vbNo Then
                objFile.FileClose
                Exit Sub
            Else
              DoCmd.OpenForm "frmProcessing"
              fCheck = ReformatFile
              If fCheck = True Then
                MsgBox "File was successfully reformatted.  Please Process again.", vbInformation, "QCD: Notice"
              End If
            End If
        End If
    
    'Application.Echo False
    ' Open the file and print each line
    ' using the Lines collection
    Dim varLine As Variant
    lngLineCntStart = 1
    lngLineCntEnd = 1200
            
    DoEvents
    Me!txtFileToProcess = CStr(objFile.path)
    
    Do While lngLineCntEnd <= lngLineTotal
        For cLines = lngLineCntStart To lngLineCntEnd
            strOut = strOut & vbCrLf & objFile.Lines.Item(cLines).Text
        Next cLines
        
        If Len(strOut) > Len(vbCrLf) Then
            strOut = Mid(strOut, Len(vbCrLf) + 1)
        End If
        Me!txtEDIContents = strOut
        
   
    
If intProc = 1 Then
' First time through
' Check to make sure this file was sent to QCD
    fCheck = ParseInsurerName
    If fCheck = False Then
      objFile.FileClose
      If fReformat = True Then
          fCheck = ReformatFile
          If fCheck = True Then
            MsgBox "File was successfully reformatted.  Please Process again.", vbInformation, "QCD: Notice"
          End If
      Else
        Exit Sub
      End If
    End If
    
    ' Get the Group Name and Populate the Display
    fCheck = ParseGroupName
' End of Checks
End If
        
        intProc = intProc + 1
        ' Process the File
        fCheck = ProcessEDIImport
        
        strOut = ""
        Me!txtEDIContents = strOut
        lngLineCntStart = lngLineCntEnd - 26
        If lngLineCntStart = lngLineTotal - 26 Then
            Exit Do
        End If
        lngLineCntEnd = lngLineCntEnd + 1200
        If lngLineCntEnd > lngLineTotal Then
            lngLineCntEnd = lngLineTotal
            fLast = True
        End If
    Loop
    End If
    
ExitProc:
    ' Close the file
    objFile.FileClose
    Me.cmdProcess.SetFocus
    Me.txtEDIContents.Visible = False
    Application.Echo True
    DoCmd.Hourglass False
    DoCmd.Close acForm, "frmProcessing"
    Exit Sub
    
HandleError:
    MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation, "cmdFileOpen_Click"
    Resume ExitProc

End Sub


Private Function ProcessEDIImport() As Boolean
    
    Dim X As Long
    Dim xS As Long
    Dim X2 As Long
    Dim Xe As Long
    Dim Xee As Long
    Dim L As Long
    Dim I As Long
    Dim Z As Long
    Dim z1 As Long

    lngCnt = 1

    ' Loop through the file and process each INS Loop
    With Me
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = 0
        Xe = Len(txtEDIContents.Text)
        X2 = Xe
        'Xe = InStrRev(txtEDIContents.Text, "INS*", Len(txtEDIContents.Text), vbTextCompare)
        ' InStrRev does not work in Access 97
        For I = Xe To 1 Step -1
            X = InStr(I, txtEDIContents.Text, "NM1*IL*1*", vbTextCompare)
            If X > 0 Then
                Xe = X2
                Exit For
            End If
            X2 = X2 - 1
        Next I
        For I = X To 1 Step -1
            X = InStr(I, txtEDIContents.Text, "INS*", vbTextCompare)
            If X > 0 Then
                Xe = X2
                Exit For
            End If
            X2 = X2 - 1
        Next I
        
        ' Starting Record
        X = InStr(1, txtEDIContents.Text, "NM1*IL*1*", vbTextCompare)
        xS = X
        For I = X To 1 Step -1
            X = InStr(I, txtEDIContents.Text, "INS*", vbTextCompare)
            If X < xS Then
                Exit For
            End If
            X2 = X2 - 1
        Next I
        lngPlace = X
        ' Find Start of next record
        z1 = lngPlace
            For Z = 1 To 4
                X2 = InStr(z1, txtEDIContents.Text, vbCrLf, vbTextCompare)
                z1 = z1 + (X2 - z1) + 1
            Next Z
        X2 = InStr(z1, txtEDIContents.Text, "INS*", vbTextCompare)
            
        'X2 = InStr(lngPlace + 80, txtEDIContents.Text, "INS*", vbTextCompare)
        lngNext = X2
            
        If X <> 0 Then
         Do While lngPlace <> 0
            txtEDIContents.SelStart = CLng(X) + 2
            txtEDIContents.SelLength = 3
            If txtEDIContents.SelText = "*Y*" Then
                ' Process Subscriber Record
                fCheck = ProcessSubscriber(lngPlace, lngNext)
            ElseIf txtEDIContents.SelText = "*N*" Then
                ' Process Dependent Record
                fCheck = ProcessDependent(lngPlace, lngNext)
            End If
            ' Get Next Record
            X = X2
            lngPlace = X
            ' Find Start of 2nd record
            z1 = lngPlace
            For Z = 1 To 5
                X2 = InStr(z1, txtEDIContents.Text, vbCrLf, vbTextCompare)
                z1 = z1 + (X2 - z1) + 1
            Next Z
            X2 = InStr(z1, txtEDIContents.Text, "INS*", vbTextCompare)
            If X2 > lngPlace And X2 < Xe Then
                lngNext = X2
            Else
                If fLast = True And X2 = Xe Then
                    Xe = Len(txtEDIContents.Text)
                    lngNext = Xe
                ElseIf fLast = True And X <> Xe Then
                    X2 = Len(txtEDIContents.Text)
                    lngNext = Xe
                    fLast = False
                Else
                    Exit Do
                End If
            End If
         Loop
        End If
   End With
    
End Function


Private Function ProcessSubscriber(lngPlace As Long, lngNext As Long) As Boolean
On Error GoTo ProcessSubscriberErr

    Dim X As Long
    Dim X2 As Long
    Dim Xe As Long
    Dim Xp As Long
    Dim L As Long
    Dim I As Long
    Dim Z As Long
    'Find all the Parts of the Subscriber
    
    lngCnt = lngCnt + 1
    
    ' Reset Dependent Count
    intDepCnt = 0
    
    With Me
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = lngPlace
        X = InStr(lngPlace, txtEDIContents.Text, "REF*0F*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 6
            txtEDIContents.SelLength = 9
            strSSN = Trim(txtEDIContents.SelText)
        End If
   'If strSSN = "439902271" Or strSSN = "460474084" Or strSSN = "452446005" Or strSSN = "451908101" Or strSSN = "438020290" Then
   '       Stop
   'End If
            
   If strSSN = "459351146" Then
'          Stop
   End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "NM1*IL*1*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 8
            Xp = Int(X) + 9
            L = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
            txtEDIContents.SelLength = L - Xp
            strLName = Trim(txtEDIContents.SelText)
            Xp = Int(L) + 1
            X2 = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
            txtEDIContents.SelStart = Xp - 1
            txtEDIContents.SelLength = X2 - Xp
            strFname = Trim(txtEDIContents.SelText)
            txtEDIContents.SelStart = X2
            txtEDIContents.SelLength = 1
            strMI = Trim(txtEDIContents.SelText)
            
            X2 = InStr(lngPlace, txtEDIContents.Text, "*34*", vbTextCompare)
            'L = InStrRev(txtEDIContents.Text, "*", X2 - 1, vbTextCompare)
            L = X2
            Xe = X2 - 1
            For I = (X2 - 1) To lngPlace Step -1
                X = InStr(I, txtEDIContents.Text, "*", vbTextCompare)
                If X < L Then
                    L = Xe
                    Exit For
                End If
                Xe = Xe - 1
            Next I
         
            txtEDIContents.SelStart = L
            txtEDIContents.SelLength = X2 - (L + 1)
            If txtEDIContents.SelLength > 0 Then
                strNameSuf = Trim(txtEDIContents.SelText)
            Else
                strNameSuf = ""
            End If
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "N3*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 2
            Xp = Int(X) + 3
            L = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
            X2 = InStr(Xp, txtEDIContents.Text, vbCrLf, vbTextCompare)
            If L < X2 Then
                txtEDIContents.SelLength = L - Xp
                strAddr = Trim(txtEDIContents.SelText)
                txtEDIContents.SelStart = L
                txtEDIContents.SelLength = X2 - (L + 1)
                strAddr2 = Trim(txtEDIContents.SelText)
            Else
                L = InStr(X + 2, txtEDIContents.Text, vbCrLf, vbTextCompare)
                txtEDIContents.SelLength = L - (X + 3)
                strAddr = Trim(txtEDIContents.SelText)
                strAddr2 = ""
            End If
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "N4*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 2
            Xp = X + 3
            L = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
            txtEDIContents.SelLength = L - Xp
            strCity = Trim(txtEDIContents.SelText)
            
            txtEDIContents.SelStart = Int(L)
            txtEDIContents.SelLength = 2
            strState = Trim(txtEDIContents.SelText)
            
            txtEDIContents.SelStart = Int(L) + 3
            txtEDIContents.SelLength = 5
            strZip = Trim(txtEDIContents.SelText)
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "DMG*D8*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 6
            txtEDIContents.SelLength = 8
            strDOB = Trim(txtEDIContents.SelText)
            
            Xp = X + 15
            txtEDIContents.SelStart = Xp
            txtEDIContents.SelLength = 1
            strGen = Trim(txtEDIContents.SelText)
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "DTP*348*D8*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 10
            txtEDIContents.SelLength = 8
            strEligStart = Trim(txtEDIContents.SelText)
        End If
        X = InStr(lngPlace, txtEDIContents.Text, "DTP*349*D8*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 10
            txtEDIContents.SelLength = 8
            strEligEnd = Trim(txtEDIContents.SelText)
        Else
            strEligEnd = ""
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "HD*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            L = InStr(X, txtEDIContents.Text, vbCrLf, vbTextCompare) - 4
            txtEDIContents.SelStart = L
            txtEDIContents.SelLength = 3
            strCovr = Trim(txtEDIContents.SelText)
        End If
        ' Check for Insurer
        X = InStr(lngPlace, txtEDIContents.Text, "HD*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            Xp = X + 3
            For Z = 1 To 3
                X2 = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
                Xp = Xp + (X2 - Xp) + 1
            Next Z
            txtEDIContents.SelStart = X2
            txtEDIContents.SelLength = (L - (X2 + 1))
            strIns = Trim(txtEDIContents.SelText)
        End If
        
        ' If strIns is Blank or QCD then insert else skip insert
        If strIns = "" Or strIns = "QCD" Then
            Call InsertSubscriber
        Else
            'Stop
        End If
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = lngPlace

    End With
    ProcessSubscriber = True
    
ProcessSubscriberExit:
    Exit Function

ProcessSubscriberErr:
    ProcessSubscriber = False
    Select Case Err.Number
        Case Else
            MsgBox "Error " & Err.Number & ": " & Err.DESCRIPTION, vbCritical, "Form_frmEDI.ProcessSubscriber" 'ErrorHandler:$$N=Form_frmOrderInfo.ParseAddress
    End Select
    Resume ProcessSubscriberExit

End Function

Function ProcessDependent(lngPlace As Long, lngNext As Long) As Boolean
On Error GoTo ProcessDependentErr

    Dim X As Long
    Dim X2 As Long
    Dim Xe As Long
    Dim Xp As Long
    Dim L As Long
    Dim I As Long
    'Find all the Parts of the Dependent
    
    lngCnt = lngCnt + 1
    fDSSN = False
    
    With Me
        
        ' Get Subscriber SSN
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = lngPlace
        X = InStr(lngPlace, txtEDIContents.Text, "REF*0F*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 6
            txtEDIContents.SelLength = 9
            strSSN = Trim(txtEDIContents.SelText)
        End If
              
              
If strSSN = "463295976" Then
   ' Stop
End If

              
        strTier = GetSubTierCode(strSSN)
        If strTier = "NOIMPORT" Then
            Exit Function
        Else
            intTier = CInt(strTier)
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "NM1*IL*1*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 8
            Xp = Int(X) + 9
            L = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
            txtEDIContents.SelLength = L - Xp
            strDLName = Trim(txtEDIContents.SelText)
            Xp = Int(L) + 1
            X2 = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
            txtEDIContents.SelStart = Xp - 1
            txtEDIContents.SelLength = X2 - Xp
            strDFName = Trim(txtEDIContents.SelText)
            Xp = Int(X2) + 1
            
            L = InStr(X, txtEDIContents.Text, vbCrLf, vbTextCompare)
            X2 = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
            txtEDIContents.SelStart = Xp - 1
            If X2 < L Then
             If X2 = Xp Then
                txtEDIContents.SelLength = 1
             Else
                txtEDIContents.SelLength = (X2 - 1) - Xp
             End If
            Else
             If Xp < L Then
                txtEDIContents.SelLength = (L - 1) - Xp
             Else
                txtEDIContents.SelLength = 0
             End If
            End If
            strDMI = Trim(txtEDIContents.SelText)
            ' Get the Dependent SSN
            L = InStr(X + 2, txtEDIContents.Text, "*34*", vbTextCompare)
            If L > lngPlace And L < lngNext Then
                txtEDIContents.SelStart = L + 3
                txtEDIContents.SelLength = 9
                strDSSN = Trim(txtEDIContents.SelText)
                fDSSN = True
            Else
                strDSSN = Right("000000000" & lngCnt, 9)
            End If
        If strDSSN = "463353015" Then
           ' Stop
        End If
            
            X2 = InStr(lngPlace, txtEDIContents.Text, "*34*", vbTextCompare)
            If X2 > 0 Then
                L = X2
                Xe = X2 - 1
                For I = (X2 - 1) To lngPlace Step -1
                    X = InStr(I, txtEDIContents.Text, "*", vbTextCompare)
                    If X < L Then
                        L = Xe
                        Exit For
                    End If
                    Xe = Xe - 1
                Next I
                txtEDIContents.SelStart = L
                txtEDIContents.SelLength = X2 - (L + 1)
                If txtEDIContents.SelLength > 0 Then
                    strDNameSuf = Trim(txtEDIContents.SelText)
                Else
                    strDNameSuf = ""
                End If
            Else
                strDNameSuf = ""
            End If
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "DMG*D8*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 6
            txtEDIContents.SelLength = 8
            strDDOB = Trim(txtEDIContents.SelText)
            
            Xp = X + 15
            txtEDIContents.SelStart = Xp
            txtEDIContents.SelLength = 1
            strDGen = Trim(txtEDIContents.SelText)
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "DTP*348*D8*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 10
            txtEDIContents.SelLength = 8
            strDEligStart = Trim(txtEDIContents.SelText)
        End If
        X = InStr(lngPlace, txtEDIContents.Text, "DTP*349*D8*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 10
            txtEDIContents.SelLength = 8
            strDEligEnd = Trim(txtEDIContents.SelText)
        Else
            strDEligEnd = ""
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "INS*N*", vbTextCompare)
        If X = lngPlace Then
            txtEDIContents.SelStart = Int(X) + 5
            Xp = X + 6
            L = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
            txtEDIContents.SelLength = 2
            strDepCode = Trim(txtEDIContents.SelText)
            If strDepCode <> "01" Then
                strDepCode = GetDepCnt(strSSN)
            End If
        End If
        
    Call InsertDependent
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = lngPlace

    End With
    ProcessDependent = True
    
ProcessDependentExit:
    Exit Function

ProcessDependentErr:
    ProcessDependent = False
    Select Case Err.Number
        Case Else
            MsgBox "Error " & Err.Number & ": " & Err.DESCRIPTION, vbCritical, "Form_frmEDI.ProcessDependent" 'ErrorHandler:$$N=Form_frmOrderInfo.ParseAddress
    End Select
    Resume Next
    Resume ProcessDependentExit
End Function

Private Function GetDepCnt(strSSN As String) As String
    Dim dbs As DAO.Database
    Dim rst As DAO.Recordset
    Dim strSQL As String
    Set dbs = CurrentDb()
    
    strSQL = "Select Count(*) AS Cnt FROM tblEDI_Dep_Import Where [Primary SSN] ='" & strSSN & "' AND [Dependent Code] <> '01';"
    Set rst = dbs.OpenRecordset(strSQL, dbOpenSnapshot)
    If rst.RecordCount > 0 Then
        GetDepCnt = "0" & rst.Fields("Cnt") + 2
    End If
    
End Function

Private Function GetSubTierCode(strSSN As String) As String
    
    Dim dbs As DAO.Database
    Dim rst As DAO.Recordset
    Dim strSQL As String
    
    Set dbs = CurrentDb()
    strSQL = "SELECT tblEDI_Subscr_Import.[Primary SSN], tblEDI_Subscr_Import.[Tier Code] " & _
             "FROM tblEDI_Subscr_Import " & _
             "WHERE (((tblEDI_Subscr_Import.[Primary SSN])='" & strSSN & "'));"
    Set rst = dbs.OpenRecordset(strSQL, dbOpenSnapshot)
    If rst.RecordCount > 0 Then
        rst.MoveFirst
        GetSubTierCode = rst.Fields("Tier Code")
        rst.Close
    Else
        GetSubTierCode = "NOIMPORT"
    End If
    
    Set dbs = Nothing
    
End Function
 


Private Function InsertSubscriber() As Boolean
On Error GoTo InsertSubscriberErr
    Dim dbs As DAO.Database
    Dim rst As DAO.Recordset
    Dim strSQL As String
    
    Set dbs = CurrentDb()
    
    Select Case strCovr
    Case "EMP"
        intTier = 1
    Case "ECH"
        intTier = 3
    Case "ESP"
        intTier = 2
    Case "FAM"
        intTier = 4
    End Select
    
    If lngCnt <= 5 Then
        ' check for existing record and update
        strSQL = "Select Count(*) AS Cnt FROM tblEDI_Subscr_Import Where [Primary SSN] ='" & strSSN & "';"
        Set rst = dbs.OpenRecordset(strSQL, dbOpenSnapshot)
        If rst.RecordCount > 0 Then
         If rst.Fields("Cnt") > 0 Then
            strSQL = "UPDATE tblEDI_Subscr_Import Set [Primary SSN] ='" & strSSN & "'"
            strSQL = strSQL & ",[Dependent SSN]= '" & strSSN & "'"
            strSQL = strSQL & ",[Last Name] = '" & Trim(ReplaceChars_TSB(strLName, "'", "' & chr(39) & '") & " " & strNameSuf) & "'"
            strSQL = strSQL & ",[First Name]= '" & ReplaceChars_TSB(strFname, "'", "' & chr(39) & '") & "'"
            If strMI = "*" Or strMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Middle Initial]= '" & ReplaceChars_TSB(strMI, "*", "") & "'"
            End If
            strSQL = strSQL & ",[Address 1]= '" & ReplaceChars_TSB(strAddr, "'", "' & chr(39) & '") & "'"
            If strAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Address 2]= '" & ReplaceChars_TSB(strAddr2, "'", "' & chr(39) & '") & "'"
            End If
            strSQL = strSQL & ",[City]= '" & strCity & "'"
            strSQL = strSQL & ",[ST]= '" & strState & "', [Zip]= '" & strZip & "'"
            strSQL = strSQL & ",[DOB] ='" & strDOB & "',[Gender] ='" & strGen & "'"
            strSQL = strSQL & ",[Elig Start Date] ='" & strEligStart & "', [Elig End Date]= '" & strEligEnd & "'"
            strSQL = strSQL & ",[Tier Code] ='" & intTier & "',[Dependent Code] = '00' "
            strSQL = strSQL & "WHERE [Primary SSN] = '" & strSSN & "';"
            dbs.Execute strSQL, dbSeeChanges
         Else
            strSQL = "INSERT INTO tblEDI_Subscr_Import ([Primary SSN],[Dependent SSN],[Last Name],[First Name]"
            If strMI = "*" Or strMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Middle Initial]"
            End If
            strSQL = strSQL & ",[Address 1]"
            If strAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Address 2]"
            End If
            strSQL = strSQL & ",[City],[ST],[Zip],[DOB],[Gender],[Elig Start Date],[Elig End Date],[Tier Code],[Dependent Code]) VALUES "
            strSQL = strSQL & "('" & strSSN & "','" & strSSN & "','" & Trim(ReplaceChars_TSB(strLName, "'", "' & chr(39) & '") & " " & strNameSuf) & "','" & ReplaceChars_TSB(strFname, "'", "' & chr(39) & '") & "','"
            If strMI = "*" Or strMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ReplaceChars_TSB(strMI, "*", "") & "','"
            End If
            strSQL = strSQL & ReplaceChars_TSB(strAddr, "'", "' & chr(39) & '") & "','"
            If strAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ReplaceChars_TSB(strAddr2, "'", "' & chr(39) & '") & "','"
            End If
            strSQL = strSQL & strCity & "','" & strState & "','" & strZip & "','" & strDOB & "','" & strGen & "','" & strEligStart & "','" & strEligEnd & "','" & intTier & "','00');"
            dbs.Execute strSQL, dbSeeChanges
         End If
        End If
    Else
        strSQL = "INSERT INTO tblEDI_Subscr_Import ([Primary SSN],[Dependent SSN],[Last Name],[First Name]"
            If strMI = "*" Or strMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Middle Initial]"
            End If
            strSQL = strSQL & ",[Address 1]"
            If strAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Address 2]"
            End If
            strSQL = strSQL & ",[City],[ST],[Zip],[DOB],[Gender],[Elig Start Date],[Elig End Date],[Tier Code],[Dependent Code]) VALUES "
            strSQL = strSQL & "('" & strSSN & "','" & strSSN & "','" & Trim(ReplaceChars_TSB(strLName, "'", "' & chr(39) & '") & " " & strNameSuf) & "','" & ReplaceChars_TSB(strFname, "'", "' & chr(39) & '") & "','"
            If strMI = "*" Or strMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ReplaceChars_TSB(strMI, "*", "") & "','"
            End If
            strSQL = strSQL & ReplaceChars_TSB(strAddr, "'", "' & chr(39) & '") & "','"
            If strAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ReplaceChars_TSB(strAddr2, "'", "' & chr(39) & '") & "','"
            End If
            strSQL = strSQL & strCity & "','" & strState & "','" & strZip & "','" & strDOB & "','" & strGen & "','" & strEligStart & "','" & strEligEnd & "','" & intTier & "','00');"
            dbs.Execute strSQL, dbSeeChanges
    End If
    
InsertSubscriberExit:
    ' Clear
    strNameSuf = ""
    strFname = ""
    strMI = ""
    strLName = ""
    strAddr = ""
    strAddr2 = ""
    strCity = ""
    strState = ""
    strZip = ""
    strDOB = ""
    strGen = ""
    strEligStart = ""
    strEligEnd = ""

    Exit Function

InsertSubscriberErr:
    Stop
    Resume InsertSubscriberExit

End Function
Private Function InsertDependent() As Boolean

    Dim dbs As DAO.Database
    Dim rst As DAO.Recordset
    Dim strSQL As String
    
    Set dbs = CurrentDb()
    
    If lngCnt <= 5 Then
        ' check for existing record and update
        If strDMI = "*" Or strDMI = "" Then
          If fDSSN = True Then
           strSQL = "Select Count(*) AS Cnt FROM tblEDI_Dep_Import Where [Dependent SSN] ='" & strDSSN & "' AND [Last Name] ='" & Trim(ReplaceChars_TSB(strDLName, "'", "' & chr(39) & '") & " " & strNameSuf) & "' AND [First Name]= '" & ReplaceChars_TSB(strDFName, "'", "' & chr(39) & '") & "';"
          Else
           strSQL = "Select Count(*) AS Cnt FROM tblEDI_Dep_Import Where [Primary SSN] ='" & strSSN & "' AND [Last Name] ='" & Trim(ReplaceChars_TSB(strDLName, "'", "' & chr(39) & '") & " " & strNameSuf) & "' AND [First Name]= '" & ReplaceChars_TSB(strDFName, "'", "' & chr(39) & '") & "';"
          End If
        Else
          If fDSSN = True Then
           strSQL = "Select Count(*) AS Cnt FROM tblEDI_Dep_Import Where [Dependent SSN] ='" & strDSSN & "' AND [Last Name] ='" & Trim(ReplaceChars_TSB(strDLName, "'", "' & chr(39) & '") & " " & strNameSuf) & "' AND [First Name]= '" & ReplaceChars_TSB(strDFName, "'", "' & chr(39) & '") & "';"
          Else
           strSQL = "Select Count(*) AS Cnt FROM tblEDI_Dep_Import Where [Primary SSN] ='" & strSSN & "' AND [Last Name] ='" & Trim(ReplaceChars_TSB(strDLName, "'", "' & chr(39) & '") & " " & strNameSuf) & "' AND [First Name]= '" & ReplaceChars_TSB(strDFName, "'", "' & chr(39) & '") & "' AND [Middle Initial]= '" & ReplaceChars_TSB(strDMI, "*", "") & "';"
          End If
        End If
        Set rst = dbs.OpenRecordset(strSQL, dbOpenSnapshot)
        If rst.RecordCount > 0 Then
         If rst.Fields("Cnt") > 0 Then
            strSQL = "UPDATE tblEDI_Dep_Import Set [Primary SSN] ='" & strSSN & "'"
            strSQL = strSQL & ",[Dependent SSN]= '" & strDSSN & "'"
            strSQL = strSQL & ",[Last Name] = '" & Trim(ReplaceChars_TSB(strDLName, "'", "' & chr(39) & '") & " " & strNameSuf) & "'"
            strSQL = strSQL & ",[First Name]= '" & ReplaceChars_TSB(strDFName, "'", "' & chr(39) & '") & "'"
            If strDMI = "*" Or strDMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Middle Initial]= '" & ReplaceChars_TSB(strDMI, "*", "") & "'"
            End If
            strSQL = strSQL & ",[Address 1]= '" & ReplaceChars_TSB(strDAddr, "'", "' & chr(39) & '") & "'"
            If strAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Address 2]= '" & ReplaceChars_TSB(strDAddr2, "'", "' & chr(39) & '") & "'"
            End If
            strSQL = strSQL & ",[City]= '" & strDCity & "'"
            strSQL = strSQL & ",[ST]= '" & strDState & "', [Zip]= '" & strDZip & "'"
            strSQL = strSQL & ",[DOB] ='" & strDDOB & "',[Gender] ='" & strDGen & "'"
            strSQL = strSQL & ",[Elig Start Date] ='" & strDEligStart & "', [Elig End Date]= '" & strDEligEnd & "'"
            strSQL = strSQL & ",[Tier Code] ='" & intTier & "',[Dependent Code] = '" & strDepCode & "' " & _
                "WHERE [Dependent SSN] = '" & strDSSN & "';"
            dbs.Execute strSQL, dbSeeChanges
          Else
            strSQL = "INSERT INTO tblEDI_Dep_Import ([Primary SSN],[Dependent SSN],[Last Name],[First Name]"
            If strDMI = "*" Or strDMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Middle Initial]"
            End If
            strSQL = strSQL & ",[Address 1]"
            If strDAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Address 2]"
            End If
            strSQL = strSQL & ",[City],[ST],[Zip],[DOB],[Gender],[Elig Start Date],[Elig End Date],[Tier Code],[Dependent Code]) VALUES "
            strSQL = strSQL & "('" & strSSN & "','" & strDSSN & "','" & Trim(ReplaceChars_TSB(strDLName, "'", "' & chr(39) & '") & " " & strDNameSuf) & "','" & ReplaceChars_TSB(strDFName, "'", "' & chr(39) & '") & "','"
            If strDMI = "*" Or strDMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ReplaceChars_TSB(strDMI, "*", "") & "','"
            End If
            strSQL = strSQL & ReplaceChars_TSB(strDAddr, "'", "' & chr(39) & '") & "','"
            If strDAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ReplaceChars_TSB(strDAddr2, "'", "' & chr(39) & '") & "','"
            End If
            strSQL = strSQL & strDCity & "','" & strDState & "','" & strDZip & "','" & strDDOB & "','" & strDGen & "','" & strDEligStart & "','" & strDEligEnd & "','" & intTier & "','" & strDepCode & "');"
            dbs.Execute strSQL, dbSeeChanges
          End If
        End If
    Else
        strSQL = "INSERT INTO tblEDI_Dep_Import ([Primary SSN],[Dependent SSN],[Last Name],[First Name]"
            If strDMI = "*" Or strDMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Middle Initial]"
            End If
            strSQL = strSQL & ",[Address 1]"
            If strDAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Address 2]"
            End If
            strSQL = strSQL & ",[City],[ST],[Zip],[DOB],[Gender],[Elig Start Date],[Elig End Date],[Tier Code],[Dependent Code]) VALUES "
            strSQL = strSQL & "('" & strSSN & "','" & strDSSN & "','" & Trim(ReplaceChars_TSB(strDLName, "'", "' & chr(39) & '") & " " & strDNameSuf) & "','" & ReplaceChars_TSB(strDFName, "'", "' & chr(39) & '") & "','"
            If strDMI = "*" Or strDMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ReplaceChars_TSB(strDMI, "*", "") & "','"
            End If
            strSQL = strSQL & ReplaceChars_TSB(strDAddr, "'", "' & chr(39) & '") & "','"
            If strDAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ReplaceChars_TSB(strDAddr2, "'", "' & chr(39) & '") & "','"
            End If
            strSQL = strSQL & strDCity & "','" & strDState & "','" & strDZip & "','" & strDDOB & "','" & strDGen & "','" & strDEligStart & "','" & strDEligEnd & "','" & intTier & "','" & strDepCode & "');"
            dbs.Execute strSQL, dbSeeChanges
    End If

    ' Clear
    strDSSN = ""
    strDNameSuf = ""
    strDFName = ""
    strDMI = ""
    strDLName = ""
    strDAddr = ""
    strDAddr2 = ""
    strDCity = ""
    strDState = ""
    strDZip = ""
    strDDOB = ""
    strDGen = ""
    strDEligStart = ""
    strDEligEnd = ""
    
    
End Function

Private Function ParseGroupName() As Boolean
On Error GoTo ParseGroupNameErr

    Dim X As Integer
    Dim L As Integer
    'Find all the Parts of the Address
    'Clear Address First
    Me.txtGroup = ""
    With Me
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = 0
        X = InStr(1, txtEDIContents.Text, "N1*P5*", vbTextCompare)
        If X <> 0 Then
            txtEDIContents.SelStart = Int(X) + 5
            L = InStr(X + 6, txtEDIContents.Text, "*", vbTextCompare) - 2
            txtEDIContents.SelLength = L - (X + 4)
            .txtGroup = Trim(txtEDIContents.SelText)
            X = 0
        End If
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = 0

    End With
    ParseGroupName = True
    
ParseGroupNameExit:
    Exit Function

ParseGroupNameErr:
    ParseGroupName = False
    Select Case Err.Number
        Case Else
            MsgBox "Error " & Err.Number & ": " & Err.DESCRIPTION, vbCritical, "Form_frmEDI.ParseGroupName" 'ErrorHandler:$$N=Form_frmOrderInfo.ParseAddress
    End Select
    Resume ParseGroupNameExit
End Function

Private Function ParseInsurerName() As Boolean
On Error GoTo ParseInsurerNameErr

    Dim X As Integer
    Dim L As Integer
    'Find ParseInsurerName
    With Me
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = 0
        X = InStr(1, txtEDIContents.Text, "~", vbTextCompare)
        If X <> 0 Then
            Application.Echo True
            DoCmd.Hourglass False
            Dim intResp As Integer
            intResp = MsgBox("This EDI File needs to be reformatted before it can be processed.  This process will take several minutes.  Do you want to reformat now?", vbYesNo + vbQuestion + vbDefaultButton2, "QCD: Notice")
            If intResp = vbNo Then
                ' exit the file
                ParseInsurerName = False
                fReformat = False
                Exit Function
            Else
                ' go and reformat the file
                ParseInsurerName = False
                fReformat = True
                Exit Function
            End If
        End If
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = 0
        X = InStr(1, txtEDIContents.Text, "N1*IN*", vbTextCompare)
        If X <> 0 Then
            txtEDIContents.SelStart = Int(X) + 5
            L = InStr(X + 6, txtEDIContents.Text, "*", vbTextCompare) - 2
            txtEDIContents.SelLength = 3 'l - (X + 4)
            If Trim(txtEDIContents.SelText) <> "QCD" Then
                MsgBox "This EDI File does not contain QCD data", vbInformation, "QCD: Error"
            End If
            '.txtGroup = Trim(txtEDIContents.SelText)
            X = 0
        End If
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = 0

    End With
    ParseInsurerName = True
    
ParseInsurerNameExit:
    Exit Function

ParseInsurerNameErr:
    ParseInsurerName = False
    Select Case Err.Number
        Case Else
            MsgBox "Error " & Err.Number & ": " & Err.DESCRIPTION, vbCritical, "Form_frmEDI.ParseInsurerName" 'ErrorHandler:$$N=Form_frmOrderInfo.ParseAddress
    End Select
    Resume ParseInsurerNameExit
End Function

Private Sub Form_Load()
    
    With Me
        .txtEDIContents = ""
        .txtFileToProcess = ""
    End With
    
End Sub
Private Sub cmdClose_Click()
On Error GoTo Err_cmdClose_Click


    DoCmd.Close

Exit_cmdClose_Click:
    Exit Sub

Err_cmdClose_Click:
    MsgBox Err.DESCRIPTION
    Resume Exit_cmdClose_Click
    
End Sub

Private Function ReformatFile() As Boolean
    On Error GoTo HandleError
    
    Dim objFile As TextFile2
    Dim cLines As Long
    Dim strOut As String
    Dim lngText As Long
    Dim X As Long
    Dim strTmp As String
    Dim chrTmp As String * 1
    
    ' Create new instance of TextFile class
    ' and set the Path property
    Set objFile = New TextFile2
    objFile.path = Me.txtFileToProcess
    
    ' Open the file and print each line
    ' using the Lines collection
    Dim varLine As Variant
    
    If objFile.FileOpen() Then
    For cLines = 1 To objFile.Lines.Count
        strTmp = objFile.Lines.Item(cLines).Text
        Do Until X = 0
            X = InStr(1, strTmp, "~", vbTextCompare)
            If X <> 0 Then
                Mid$(strTmp, X, 1) = vbCrLf
            End If
        Loop
    Next cLines
    
        For cLines = 1 To objFile.Lines.Count
            strOut = strOut & vbCrLf & objFile.Lines.Item(cLines).Text
        Next cLines
        If Len(strOut) > Len(vbCrLf) Then
            strOut = Mid(strOut, Len(vbCrLf) + 1)
        End If
        
        ' Loop backward through the collection
        ' and remove lines with no text (Len = 0)
        For cLines = objFile.Lines.Count To 1 Step -1
            If Len(objFile.Lines.Item(cLines).Text) = 0 Then
                objFile.Lines.Remove cLines
            End If
        Next cLines
        
        ' Save the file
        objFile.FileSave
        
        ' Close the file
        objFile.FileClose
    End If
    
    ReformatFile = True
ExitProc:
    Exit Function
    
HandleError:
    ReformatFile = False
    MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation, "Reformat File Failed"
    Resume ExitProc

End Function