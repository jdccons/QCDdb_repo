Option Compare Database
Option Explicit
Public Function ChangeSubscrStatus(MyForm As Form) As Boolean

On Error GoTo PROC_ERR

    Call MyForm.cmdChangeStatus_Click
    ChangeSubscrStatus = True
    
PROC_EXIT:
  DoCmd.SetWarnings True
  DoCmd.Hourglass False
  Exit Function

PROC_ERR:
  MsgBox "Error: (" & Err.Number & ") " & Err.DESCRIPTION, vbCritical, " Function: modSubscr.ChangeSubscrStatus "
  GoTo PROC_EXIT

End Function
Sub PopulateGrpSubIDs(strGroupID As String)
    'Purpose:  Adds SubIDs to tblSubscr
    '--------------------------------------------------------
    ' Parameters:  -
    ' Programmer:  John Criswell
    ' Create Date:  01/21/08
    ' Update Date:  01/21/08
    ' Updated by:  John Criswell
    ' Reason:
    '---------------------------------------------------------
    
    
    On Error GoTo ErrorHandler
    
    
    Dim db As DAO.Database
    Dim rst As DAO.Recordset
    Dim strSQL As String
    
    Set db = CurrentDb()
    
    strSQL = "SELECT tblSubscr.SubID " & _
             "FROM tblSubscr " & _
             "WHERE (((tblSubscr.SubGroupID)='" & strGroupID & "') " & _
             "AND ((tblSubscr.SubID) Is Null));"
    Set rst = db.OpenRecordset(strSQL, dbOpenDynaset, dbSeeChanges)
    If rst.RecordCount > 0 Then
        Do While Not rst.EOF
            rst.Edit
            rst.Fields("SubID") = AssignSubID()
            rst.Update
            rst.MoveNext
        Loop
    End If
    
    rst.Close
    Set db = Nothing
    
    
Exit_Point:
    Exit Sub
    
ErrorHandler:
    MsgBox Err.DESCRIPTION & " " & Err.Number
    Resume Exit_Point
End Sub
Function AssignSubID() As String
    ' Purpose:  Generates SubID's
    '
    '------------------------------------------------
    ' Parameters:   none
    ' Returns   :   new eight digit SubscriberID as string
    ' Programmer:   John Criswell
    ' Create Date:  11/22/07
    ' Update Date:  11/22/07
    ' Updated by:   John Criswell
    ' Update:       -----------
    ' Update Date:  10/11/2013
    ' Updated by:   John Criswell
    ' Update:       Substituted stored procedure (usp_GetSubID()
    '               for VBA code
    ' --------------------------------------------------
    
    Dim sSQL As String
    Dim sSubscriberID As String
    
    sSQL = "usp_GetSubID"
    Call GetOutPutParm(sSQL)
    If Len(g_sRtnVal) <> 8 Then
        sSubscriberID = "00000000"
    Else
        sSubscriberID = g_sRtnVal
    End If
          
    AssignSubID = sSubscriberID
    
Exit_Point:
    Exit Function
    
ErrorHandler:
    MsgBox Err.DESCRIPTION & " " & Err.Number
    Resume Exit_Point
End Function
Function CalcAge(DOB As Date) As Integer
    
    'Purpose:  Calculates a person's age
    '--------------------------------------------------------
    '
    ' Parameters: DOB -
    ' Returns   : Integer -
    ' Programmer:  John Criswell
    ' Create Date:  12/14/07
    ' Update Date:  12/14/07
    ' Updated by:  John Criswell
    ' Reason:
    '---------------------------------------------------------
    
    On Error GoTo ErrorHandler
    
    
    
    If Month(DOB) > Month(date) Then
        CalcAge = DateDiff("yyyy", DOB, date) - 1
    ElseIf Month(DOB) < Month(date) Then
        CalcAge = DateDiff("yyyy", DOB, date)
    ElseIf Month(DOB) = Month(date) Then
        If Day(DOB) > Day(date) Then
            CalcAge = DateDiff("yyyy", DOB, date) - 1
        Else
            CalcAge = DateDiff("yyyy", DOB, date)
        End If
    End If
    
Exit_Point:
    Exit Function
    
ErrorHandler:
    MsgBox Err.DESCRIPTION & " " & Err.Number
    Resume Exit_Point

End Function

Function PrtScreen_Subscr()
    ' Comments  :
    ' Parameters:  -
    ' Returns   :  -
    ' Modified  :
    '
    ' --------------------------------------------------

    On Error GoTo ErrorHandler

    Dim strDocName As String
    Dim strSubscrId As String
    Dim strWhere As String

    strDocName = "rptGrpSubscr"
    strSubscrId = Forms!frmGrpSubscr!SubSSN
    strWhere = "(([tblSubscr].[SUBssn]) = """ & strSubscrId & """)"

    DoCmd.OpenReport strDocName, acPreview, , strWhere

Exit_Point:
    Exit Function

ErrorHandler:
    MsgBox Err.DESCRIPTION & " " & Err.Number
    Resume Exit_Point

End Function
Public Sub PrintSubscrSearchCard(strSSN As String)
    ' Comments  :  Prints a card from the menu on the subscriber search screen
    ' Parameters: strSSN -
    ' Modified  :
    '
    ' --------------------------------------------------
    
    On Error GoTo ErrorHandler
      
      Dim strSQL
    
     'print card for subscriber from frmSubscrInquire
      ExecuteSQL "DELETE FROM tmpEDI_rpt"
      strSQL = "INSERT INTO tmpEDI_Rpt ( SUBssn) " & _
                        "SELECT tblSubscr.SubSSN " & _
                        "FROM tblSubscr " & _
                        "WHERE ((tblSubscr.SubSSN)='" & strSSN & "');"
    ExecuteSQL strSQL
    
    
    DoCmd.OpenReport "rptCardMemGrp"
    
    
    'clean up
    ExecuteSQL "DELETE FROM tmpEDI_rpt"
    
           
    Exit Sub
    
Exit_Point:
    Exit Sub
    
ErrorHandler:
    MsgBox Err.DESCRIPTION & " " & Err.Number
    Resume Exit_Point
    
End Sub

Function GetDependentCount(strSSN As String) As Long
    ' count the subscriber's dependents
    
    On Error GoTo GetDependentCount_Err
    
    Dim strSQL As String
    
    strSQL = "SELECT DepSubID, Count(ID) AS DepCnt " & _
                "FROM tblDependent " & _
                "WHERE DepCancelled = 1 " & _
                "GROUP BY DepSubID " & _
                "HAVING (((DepSubID)='" & strSSN & "'));"
                
    LoadADORecordset (strSQL)
    If g_adoRS.RecordCount > 0 Then
        GetDependentCount = g_adoRS("DepCnt")
    Else
        GetDependentCount = 0
    End If
    
    g_adoRS.Close
    
    Exit Function

GetDependentCount_Exit:
    Exit Function
    
GetDependentCount_Err:
    MsgBox Error$
    GoTo GetDependentCount_Exit

End Function