Version =20
VersionRequired =20
Checksum =-26590222
Begin Form
    RecordSelectors = NotDefault
    AutoCenter = NotDefault
    NavigationButtons = NotDefault
    DividingLines = NotDefault
    DefaultView =0
    ScrollBars =0
    ViewsAllowed =1
    PictureAlignment =2
    DatasheetGridlinesBehavior =3
    GridX =24
    GridY =24
    Width =6780
    DatasheetFontHeight =10
    ItemSuffix =23
    Left =2085
    Top =810
    Right =8610
    Bottom =5640
    DatasheetGridlinesColor =12632256
    RecSrcDt = Begin
        0xea0e144b8c92e240
    End
    Caption ="Import Processing"
    DatasheetFontName ="Arial"
    PrtMip = Begin
        0xa0050000a0050000a0050000a005000000000000201c0000e010000001000000 ,
        0x010000006801000000000000a10700000100000001000000
    End
    PrtDevMode = Begin
        0x0000000000000000000000000000000000000000000000007f13000020010000 ,
        0x01043c079c00d006038f0002010001009a0b3408640001000100580202000100 ,
        0x00000300010041340002000000000098054000000000000000a0064000000000 ,
        0x0063bebcfd3f0000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000050524956 ,
        0xe012000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000180000000000102710271027 ,
        0x0000102700000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x000000000000000000000000
    End
    PrtDevNames = Begin
        0x08001b002e000100000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000446f6375436f6d2050444620506f72743a00 ,
        0x000000000000000000000000
    End
    OnLoad ="[Event Procedure]"
    UnknownProp = {305 ,452 ,1 ,1 ,1 } Begin
        0x00
    End
    UnknownProp = {395 ,563 ,1 ,1 ,1 } Begin
        0x00
    End
    UnknownProp = {400 ,582 ,4 ,4 ,4 } Begin
        0xc0c0c000
    End
    UnknownProp = {419 ,678 ,11 ,0 ,1964 } Begin
        0x0000ee38c020340000000000341b3400c020340000000000541b3400541b3400 ,
        0x3549ec38c0203400ab00000038474a0a38474a0a0300000001000000c0203400 ,
        0x01043c07dc00d006038f0002010001009a0b3408640001000100580202000100 ,
        0x0000030001004100340000008005000000000000c41b3400fc468273201d3400 ,
        0xa0846003800500000700000030000000b891c31000000000b400a10200003a00 ,
        0xf41b340053810000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000050524956 ,
        0xe012000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000180000000000102710271027 ,
        0x0000102700000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x000000000000000000000000
    End
    UnknownProp = {420 ,679 ,11 ,0 ,144 } Begin
        0x040017002a000100000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x000000000000000000000000000000000000000044006f006300750043006f00 ,
        0x6d002000500044004600200050006f00720074003a0000000000000000000000 ,
        0x00000000000000000000000000000000
    End
    Begin
        Begin Label
            BackStyle =0
        End
        Begin Rectangle
            SpecialEffect =3
            BackStyle =0
        End
        Begin CommandButton
            FontSize =8
            FontWeight =400
            ForeColor =-2147483630
            FontName ="MS Sans Serif"
            UnknownProp = {324 ,11 ,2 ,1 ,1 } Begin
                0x00
            End
        End
        Begin TextBox
            SpecialEffect =2
            OldBorderStyle =0
        End
        Begin ComboBox
            SpecialEffect =2
        End
        Begin Section
            Height =5100
            BackColor =14127360
            Name ="Detail"
            GUID = Begin
                0x5005b4c71ced764184c0c3f5b10e141a
            End
            Begin
                Begin CommandButton
                    OverlapFlags =93
                    Left =5460
                    Top =4440
                    Width =726
                    Height =486
                    Name ="cmdClose"
                    Caption ="Command20"
                    OnClick ="[Event Procedure]"
                    PictureData = Begin
                        0x2800000010000000100000000100040000000000800000000000000000000000 ,
                        0x0000000000000000000000000000800000800000008080008000000080008000 ,
                        0x8080000080808000c0c0c0000000ff00c0c0c00000ffff00ff000000c0c0c000 ,
                        0xffff0000ffffff00dadad0dadadadadaadad00adadadadaddad030dadadadada ,
                        0xad0330adadadadad0033300000000adaa03330ff0dadadadd03300ff0adad4da ,
                        0xa03330ff0dad44add03330ff0ad44444a03330ff0d444444d03330ff0ad44444 ,
                        0xa0330fff0dad44add030ffff0adad4daa00fffff0dadadadd00000000adadada ,
                        0xadadadadadadadad0000000000000000
                    End
                    FontName ="Tahoma"
                    ObjectPalette = Begin
                        0x000301000000000000000000
                    End
                    ControlTipText ="Close Form"
                    GUID = Begin
                        0x2c3cecd66a98644a98937fc64aec63d4
                    End
                    UnknownProp = {289 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                    UnknownProp = {356 ,700 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {357 ,699 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {358 ,701 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {359 ,702 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {360 ,736 ,1 ,0 ,4 } Begin
                        0x01000000
                    End
                End
                Begin Label
                    SpecialEffect =4
                    OldBorderStyle =1
                    BorderWidth =3
                    OverlapFlags =85
                    TextAlign =2
                    Left =60
                    Top =60
                    Width =4260
                    Height =330
                    FontSize =10
                    FontWeight =700
                    ForeColor =16777215
                    Name ="Label1"
                    Caption ="Import File Processing"
                    GUID = Begin
                        0x42a346a7b3a23d46894f1f1e7b3960a8
                    End
                End
                Begin ComboBox
                    LimitToList = NotDefault
                    OverlapFlags =85
                    ColumnCount =4
                    ListWidth =3600
                    Left =1200
                    Top =480
                    Width =3120
                    TabIndex =1
                    ColumnInfo ="\"\";\"\";\"\";\"\";\"\";\"\";\"\";\"\";\"10\";\"60\""
                    GUID = Begin
                        0x921c07a39a85b54baa35423fbc31d40b
                    End
                    Name ="cboGroups"
                    RowSourceType ="Table/Query"
                    RowSource ="SELECT tblGrp.GROUPid, tblGrp.GRname, tlkpImportSpec.ImportType, tlkpImportSpec."
                        "ImportDesc, tblGrp.GroupType FROM tblGrp INNER JOIN tlkpImportSpec ON tblGrp.GRO"
                        "UPid = tlkpImportSpec.GROUPID ORDER BY tblGrp.GRname;"
                    ColumnWidths ="0;3600;0;0"
                    AfterUpdate ="[Event Procedure]"
                    FontName ="Tahoma"
                    BaseInfo ="\"SELECT tblGrp.GROUPid, tblGrp.GRname, tlkpImportSpec.ImportType, tlkpImportSpe"
                        "c.ImportDesc, tblGrp.GroupType FROM tblGrp INNER JOIN tlkpImportSpec ON tblGrp.G"
                        "ROUPid = tlkpImportSpec.GROUPID ORDER BY tblGrp.GRname;\";\"tblGrp\";\"tlkpImpor"
                        "tSpec\";\"\""
                    UnknownProp = {306 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                    Begin
                        Begin Label
                            OverlapFlags =85
                            Left =120
                            Top =480
                            Width =1020
                            Height =240
                            ForeColor =16777215
                            Name ="Label4"
                            Caption ="Select Group"
                            FontName ="Tahoma"
                            GUID = Begin
                                0xc8aa3861ec535046b366ce9002630809
                            End
                        End
                    End
                End
                Begin TextBox
                    Visible = NotDefault
                    OverlapFlags =93
                    Left =4500
                    Top =60
                    Width =1140
                    TabIndex =2
                    BackColor =10092543
                    Name ="txtGrpID"
                    FontName ="Tahoma"
                    GUID = Begin
                        0x0210395fbe40d841a55357035c167034
                    End
                    UnknownProp = {299 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                End
                Begin TextBox
                    Visible = NotDefault
                    OverlapFlags =93
                    Left =4500
                    Top =360
                    Width =1140
                    TabIndex =3
                    BackColor =10092543
                    Name ="txtPlanID"
                    FontName ="Tahoma"
                    GUID = Begin
                        0xba6921e0d8b6f44087bdc0631c9767b9
                    End
                    UnknownProp = {299 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                End
                Begin CommandButton
                    OverlapFlags =93
                    Left =120
                    Top =960
                    Width =1320
                    Height =420
                    TabIndex =4
                    Name ="cmdSubFileSelect"
                    Caption ="Select File"
                    OnClick ="[Event Procedure]"
                    FontName ="Tahoma"
                    GUID = Begin
                        0xdbe9684d358600468dd311ce56bc09eb
                    End
                    UnknownProp = {289 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                    UnknownProp = {356 ,700 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {357 ,699 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {358 ,701 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {359 ,702 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {360 ,736 ,1 ,0 ,4 } Begin
                        0x01000000
                    End
                End
                Begin TextBox
                    OverlapFlags =95
                    Left =1500
                    Top =1140
                    Width =4680
                    TabIndex =5
                    Name ="txtMainFile"
                    FontName ="Tahoma"
                    GUID = Begin
                        0x12a0bd78204a6644a988edce59052a67
                    End
                    UnknownProp = {299 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                    Begin
                        Begin Label
                            OverlapFlags =93
                            Left =1500
                            Top =900
                            Width =2640
                            Height =240
                            ForeColor =16777215
                            Name ="lblSubscriber"
                            Caption ="Subscriber File To Process: "
                            FontName ="Tahoma"
                            GUID = Begin
                                0xd21c8a5c12db8f45b4ec24716741d5a7
                            End
                        End
                    End
                End
                Begin TextBox
                    OverlapFlags =95
                    Left =1500
                    Top =1620
                    Width =4680
                    TabIndex =6
                    Name ="txtDependentFile"
                    FontName ="Tahoma"
                    GUID = Begin
                        0xbbfc8c8c4dcd1740b1ff65ccddfafd8a
                    End
                    UnknownProp = {299 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                    Begin
                        Begin Label
                            OverlapFlags =95
                            Left =1500
                            Top =1380
                            Width =2640
                            Height =240
                            ForeColor =16777215
                            Name ="Label8"
                            Caption ="Dependent File To Process: "
                            FontName ="Tahoma"
                            GUID = Begin
                                0xfd0fc43eaaad294c82828ef93d3f10cd
                            End
                        End
                    End
                End
                Begin CommandButton
                    OverlapFlags =93
                    Left =120
                    Top =1440
                    Width =1320
                    Height =420
                    TabIndex =7
                    Name ="cmdDepFileSelect"
                    Caption ="Select File"
                    OnClick ="[Event Procedure]"
                    FontName ="Tahoma"
                    GUID = Begin
                        0x86c328e63cb0e74e8945f49c31d30478
                    End
                    UnknownProp = {289 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                    UnknownProp = {356 ,700 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {357 ,699 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {358 ,701 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {359 ,702 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {360 ,736 ,1 ,0 ,4 } Begin
                        0x01000000
                    End
                End
                Begin Rectangle
                    OverlapFlags =255
                    Left =60
                    Top =840
                    Width =6240
                    Height =1140
                    Name ="Box4"
                    GUID = Begin
                        0x49f652757a163a4c948b993db0f9c2f5
                    End
                End
                Begin TextBox
                    OverlapFlags =93
                    Left =2160
                    Top =2100
                    Width =3600
                    TabIndex =8
                    BackColor =16777164
                    Name ="txtGroup"
                    FontName ="Tahoma"
                    GUID = Begin
                        0xd9aaf7bb100caf46b2a9bd9b8f1ff45f
                    End
                    UnknownProp = {299 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                    Begin
                        Begin Label
                            OverlapFlags =85
                            Left =480
                            Top =2100
                            Width =1605
                            Height =240
                            FontWeight =700
                            ForeColor =16777215
                            Name ="Label12"
                            Caption ="EDI Group Name "
                            FontName ="Tahoma"
                            GUID = Begin
                                0xe55b2ec0ca98904d9ae9cf1856cc6876
                            End
                        End
                    End
                End
                Begin TextBox
                    Visible = NotDefault
                    ScrollBars =2
                    OverlapFlags =255
                    Left =4620
                    Top =1020
                    Width =2040
                    Height =2040
                    TabIndex =9
                    Name ="txtEDIContents"
                    FontName ="Tahoma"
                    GUID = Begin
                        0xff846765e8f9f846ac7fb1fe45d5ee2c
                    End
                    UnknownProp = {299 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                    Begin
                        Begin Label
                            OverlapFlags =255
                            Left =4620
                            Top =780
                            Width =1260
                            Height =240
                            Name ="Label9"
                            Caption ="EDI File Contents"
                            FontName ="Tahoma"
                            GUID = Begin
                                0x28658488be03de41a668dd20e3eda4d9
                            End
                        End
                    End
                End
                Begin TextBox
                    Visible = NotDefault
                    OverlapFlags =93
                    Left =5820
                    Top =60
                    Width =480
                    TabIndex =10
                    BackColor =10092543
                    Name ="txtImportSpec"
                    FontName ="Tahoma"
                    GUID = Begin
                        0xc24773768bd2ee409815397e58662d02
                    End
                    UnknownProp = {299 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                End
                Begin Label
                    Visible = NotDefault
                    OverlapFlags =255
                    Left =1500
                    Top =900
                    Width =2280
                    Height =240
                    ForeColor =16777215
                    Name ="lblHIPAAFile"
                    Caption ="HIPAA File To Process:"
                    FontName ="Tahoma"
                    GUID = Begin
                        0x1543ac00d1483442982053c0d60ccbc1
                    End
                End
                Begin Label
                    Visible = NotDefault
                    OverlapFlags =247
                    Left =1500
                    Top =900
                    Width =2280
                    Height =240
                    ForeColor =16777215
                    Name ="lblImportFile"
                    Caption ="Import File To Process:"
                    FontName ="Tahoma"
                    GUID = Begin
                        0x4c4dc55eeec13e4a8e8c214bd6b18cc5
                    End
                End
                Begin TextBox
                    Locked = NotDefault
                    OverlapFlags =255
                    TextAlign =2
                    Left =2760
                    Top =2580
                    Width =3420
                    Height =300
                    FontSize =10
                    FontWeight =700
                    TabIndex =11
                    Name ="txtStatus"
                    GUID = Begin
                        0x81bf181be79c9343b9c891da6324d257
                    End
                    UnknownProp = {299 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                End
                Begin CommandButton
                    OverlapFlags =93
                    Left =120
                    Top =2520
                    Width =2459
                    Height =420
                    TabIndex =12
                    Name ="cmdProcess"
                    Caption ="Process File"
                    OnClick ="[Event Procedure]"
                    FontName ="Tahoma"
                    GUID = Begin
                        0x57975aa9f60e2549ab58f56cacdafb30
                    End
                    UnknownProp = {289 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                    UnknownProp = {356 ,700 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {357 ,699 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {358 ,701 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {359 ,702 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {360 ,736 ,1 ,0 ,4 } Begin
                        0x01000000
                    End
                End
                Begin CommandButton
                    Visible = NotDefault
                    Enabled = NotDefault
                    OverlapFlags =93
                    Left =4140
                    Top =3180
                    Width =1860
                    Height =420
                    TabIndex =13
                    Name ="cmdPrintException"
                    Caption ="Preview Exceptions"
                    GUID = Begin
                        0xaf0a28b4bc1f51458dd18bc67fb99c1d
                    End
                    UnknownProp = {289 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                    UnknownProp = {356 ,700 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {357 ,699 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {358 ,701 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {359 ,702 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {360 ,736 ,1 ,0 ,4 } Begin
                        0x01000000
                    End
                End
                Begin CommandButton
                    Visible = NotDefault
                    OverlapFlags =247
                    Left =4620
                    Top =60
                    Width =360
                    TabIndex =14
                    Name ="cmdPrepare"
                    Caption ="Prepare Data for Import"
                    OnClick ="[Event Procedure]"
                    FontName ="Tahoma"
                    GUID = Begin
                        0x09062d8a4e975b49a69583d5aa42ac25
                    End
                    UnknownProp = {289 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                    UnknownProp = {356 ,700 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {357 ,699 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {358 ,701 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {359 ,702 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {360 ,736 ,1 ,0 ,4 } Begin
                        0x01000000
                    End
                End
                Begin CommandButton
                    OverlapFlags =93
                    Left =120
                    Top =3180
                    Width =2459
                    Height =420
                    TabIndex =15
                    Name ="cmdPrintNewSubscr"
                    Caption ="Print New Subscribers List"
                    OnClick ="[Event Procedure]"
                    FontName ="Tahoma"
                    GUID = Begin
                        0x5142f9c4bd8d7949a4e47843900c066e
                    End
                    UnknownProp = {289 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                    UnknownProp = {356 ,700 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {357 ,699 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {358 ,701 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {359 ,702 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {360 ,736 ,1 ,0 ,4 } Begin
                        0x01000000
                    End
                End
                Begin CommandButton
                    Visible = NotDefault
                    OverlapFlags =223
                    Left =3060
                    Top =3180
                    Width =1980
                    TabIndex =16
                    Name ="cmdViewResults"
                    Caption ="View Import Results"
                    GUID = Begin
                        0xac1f99d0281c9048a694a86b19950f53
                    End
                    UnknownProp = {289 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                    UnknownProp = {356 ,700 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {357 ,699 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {358 ,701 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {359 ,702 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {360 ,736 ,1 ,0 ,4 } Begin
                        0x01000000
                    End
                End
                Begin CommandButton
                    OverlapFlags =93
                    Left =120
                    Top =4440
                    Width =2459
                    Height =420
                    TabIndex =17
                    ForeColor =0
                    Name ="cmdPrintCards"
                    Caption ="Print Cards"
                    OnClick ="[Event Procedure]"
                    GUID = Begin
                        0x44e5a0664f785a43a0018d16c684f7ae
                    End
                    UnknownProp = {289 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                    UnknownProp = {356 ,700 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {357 ,699 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {358 ,701 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {359 ,702 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {360 ,736 ,1 ,0 ,4 } Begin
                        0x01000000
                    End
                End
                Begin CommandButton
                    OverlapFlags =93
                    Left =120
                    Top =3840
                    Width =2459
                    Height =420
                    TabIndex =18
                    Name ="cmdAddToDB"
                    Caption ="Add Group to DB"
                    OnClick ="[Event Procedure]"
                    FontName ="Tahoma"
                    GUID = Begin
                        0xc43e2ea751901b4bbcab42245b60cb89
                    End
                    UnknownProp = {289 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                    UnknownProp = {356 ,700 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {357 ,699 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {358 ,701 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {359 ,702 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {360 ,736 ,1 ,0 ,4 } Begin
                        0x01000000
                    End
                End
                Begin TextBox
                    Enabled = NotDefault
                    OverlapFlags =93
                    TextAlign =2
                    Left =2759
                    Top =3900
                    Width =3420
                    Height =299
                    TabIndex =19
                    Name ="txtCommit"
                    GUID = Begin
                        0x15a7721572166e43903a22032dec006a
                    End
                    UnknownProp = {299 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                End
                Begin Rectangle
                    OverlapFlags =247
                    Left =60
                    Top =2460
                    Width =6240
                    Height =540
                    Name ="Box18"
                    OnClick ="[Event Procedure]"
                    GUID = Begin
                        0x4a469dff91b6ce4b9961eeb20505a704
                    End
                End
                Begin Rectangle
                    OverlapFlags =247
                    Left =60
                    Top =3060
                    Width =6240
                    Height =600
                    Name ="Box19"
                    GUID = Begin
                        0x3d9301b8be21be4c81c93dae2e817776
                    End
                End
                Begin Rectangle
                    OverlapFlags =247
                    Left =60
                    Top =3720
                    Width =6240
                    Height =1260
                    Name ="Box20"
                    GUID = Begin
                        0xb2667b635a868d459c482d7f54a9a3a9
                    End
                End
                Begin CommandButton
                    OverlapFlags =255
                    Left =5340
                    Top =180
                    Width =1005
                    Height =405
                    TabIndex =20
                    Name ="cmdAddGroup"
                    Caption ="Add Group"
                    OnClick ="[Event Procedure]"
                    GUID = Begin
                        0xc864defd0e798841acf5b1a41ab7efbe
                    End
                    UnknownProp = {289 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                    UnknownProp = {356 ,700 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {357 ,699 ,4 ,0 ,4 } Begin
                        0x02000000
                    End
                    UnknownProp = {358 ,701 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {359 ,702 ,4 ,0 ,4 } Begin
                        0x01000000
                    End
                    UnknownProp = {360 ,736 ,1 ,0 ,4 } Begin
                        0x01000000
                    End
                End
                Begin TextBox
                    Visible = NotDefault
                    OverlapFlags =247
                    Left =5820
                    Top =420
                    Width =480
                    TabIndex =21
                    BackColor =10092543
                    Name ="txtGroupType"
                    FontName ="Tahoma"
                    GUID = Begin
                        0x6aa667836b8c344d85b526dee89766ce
                    End
                    UnknownProp = {299 ,0 ,3 ,4 ,4 } Begin
                        0xffffffff
                    End
                End
            End
        End
    End
End
CodeBehindForm
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Option Compare Database
Option Explicit

Dim fCheck As Boolean
Dim fReformat As Boolean
Dim fDSSN As Boolean
Dim lngPlace As Long
Dim lngNext As Long
' Subscriber
Dim strSSN As String
Dim strLName As String
Dim strFname As String
Dim strMI As String
Dim strNameSuf As String
Dim strAddr As String
Dim strAddr2 As String
Dim strCity As String
Dim strState As String
Dim strZip As String
Dim strDOB As String
Dim strGen As String
Dim strEligStart As String
Dim strEligEnd As String
' Dependent
Dim strDSSN As String
Dim strDLName As String
Dim strDFName As String
Dim strDMI As String
Dim strDNameSuf As String
Dim strDAddr As String
Dim strDAddr2 As String
Dim strDCity As String
Dim strDState As String
Dim strDZip As String
Dim strDDOB As String
Dim strDGen As String
Dim strDEligStart As String
Dim strDEligEnd As String
Dim strIns As String

Dim strCovr As String
Dim intTier As Integer
Dim strTier As String
Dim intDepCnt As Integer
Dim strDepCode As String
Dim lngLineCntStart As Long
Dim lngLineCntEnd As Long
Dim lngLineTotal As Long
Dim lngTest As Long
Dim lngCnt As Long
Dim intProc As Integer
Dim fLast As Boolean

Const conEDI_Import As Integer = 1
Const conQCDStd_Import As Integer = 2
Const conAMSTR_Import As Integer = 3
Const conMRIC_Import As Integer = 4
Const conAA_Import As Integer = 5
Const conDISD_Import As Integer = 6

Function GetPathPart_TSB(strPath As String) As String
  ' Comments  : Returns the path part of a string
  ' Parameters: strPath - string to parse
  ' Returns   : path part
  '
  Dim intCounter As Integer

  For intCounter = Len(strPath) To 1 Step -1
    If Mid$(strPath, intCounter, 1) = "\" Then
      Exit For
    End If
  Next intCounter

  GetPathPart_TSB = Left$(strPath, intCounter)

End Function

Function FileExists_TSB(strDest As String) As Boolean
  ' Comments  : Determines if the named file exists
  ' Parameters: strDest - file to check
  ' Returns   : True-file exists, false otherwise
  '
  Dim intLen As Integer
 
  On Error Resume Next
  intLen = Len(Dir(strDest))

  FileExists_TSB = (Not Err And intLen > 0)

End Function


Private Sub cboGroups_AfterUpdate()
  ' Comments   : Enable/disable controls based on group selection
  ' Parameters : None
  ' Created    : 2/28/2004 1:00:20 PM Admin
  ' Modified   :
  '
  ' --------------------------------------------------------
  
  On Error GoTo HandleError
    
    With Me
        .txtGrpID = .cboGroups.Column(0)
        .txtGroup = .cboGroups.Column(1)
        .txtImportSpec = .cboGroups.Column(2)
        .txtGroupType = .cboGroups.Column(4)
        If .cboGroups.Column(2) = conQCDStd_Import Then     ' std QCD non-HIPAA; plan 16 (DANVI)
            .lblHIPAAFile.Visible = False
            .lblSubscriber.Visible = True
            .lblImportFile.Visible = False
            .cmdDepFileSelect.Enabled = True
            .txtDependentFile.Enabled = True
        ElseIf .cboGroups.Column(2) = conEDI_Import Then ' HIPAA ANSI 834; plan 1 (ALDNE & NSISD)
            .lblHIPAAFile.Visible = True
            .lblSubscriber.Visible = False
            .lblImportFile.Visible = False
            .cmdDepFileSelect.Enabled = False
            .txtDependentFile.Enabled = False
        ElseIf .cboGroups.Column(2) = conAMSTR_Import Then ' non-std client defined; plan 16 (AMSTR)
            .lblHIPAAFile.Visible = False
            .lblSubscriber.Visible = False
            .lblImportFile.Visible = True
            .cmdDepFileSelect.Enabled = False
            .txtDependentFile.Enabled = False
        ElseIf .cboGroups.Column(2) = conMRIC_Import Then ' non-std client defined; plan 1 (DISD)
            .lblHIPAAFile.Visible = False
            .lblSubscriber.Visible = False
            .lblImportFile.Visible = True
            .cmdDepFileSelect.Enabled = False
            .txtDependentFile.Enabled = False
        ElseIf .cboGroups.Column(2) = conAA_Import Then ' All American
            .lblHIPAAFile.Visible = False
            .lblSubscriber.Visible = False
            .lblImportFile.Visible = True
            .cmdDepFileSelect.Enabled = False
            .txtDependentFile.Enabled = False
        ElseIf .cboGroups.Column(2) = conDISD_Import Then     ' std QCD non-HIPAA; plan 16 (DANVI)
            .lblHIPAAFile.Visible = False
            .lblSubscriber.Visible = True
            .lblImportFile.Visible = False
            .cmdDepFileSelect.Enabled = True
            .txtDependentFile.Enabled = True
        End If
        
    End With
    
ExitProc:
  Exit Sub

HandleError:
  MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation
  Resume ExitProc
  
End Sub

Private Sub cmdAddToDB_Click()
  ' Comments   :
  ' Parameters :
  ' Created    : 2/28/2004 1:05:53 PM Admin
  ' Modified   :
  '
  ' --------------------------------------------------------
  On Error GoTo HandleError
      
      Dim intResp As Integer
    
      Dim strGrp As String
      Dim lngImpS As Long
      Dim lngImpD As Long
      Dim lngCurS As Long
      Dim lngCurD As Long
      Dim lngDelASR As Long
      Dim strMsg As String
      Dim strGrpID As String
      Dim strSQL As String
      
      Dim db As DAO.Database
      Dim rst As DAO.Recordset
      
      Set db = CurrentDb()
      
      strGrpID = Forms![frmImportProcessing].[txtGrpID]
      
      
      
      ' get Import Subscriber count
      strSQL = "SELECT Count(tblEDI_App_Subscr.SUBssn) AS ImpSCnt FROM tblEDI_App_Subscr;"
      Set rst = db.OpenRecordset(strSQL, dbOpenSnapshot)
      If rst.RecordCount > 0 Then
        lngImpS = rst.Fields("ImpSCnt")
        rst.Close
      Else
        lngImpS = 0
      End If
      ' get Import Dependent Count
      strSQL = "SELECT Count(tblEDI_App_Dep.DEPsubID) AS ImpDCnt FROM tblEDI_App_Dep;"
      Set rst = db.OpenRecordset(strSQL, dbOpenSnapshot)
      If rst.RecordCount > 0 Then
        lngImpD = rst.Fields("ImpDCnt")
        rst.Close
      Else
        lngImpD = 0
      End If
      
      ' get Current Subscriber count
      strSQL = "SELECT Count(tblSubscr.SUBssn) AS CurSCnt, tblSubscr.SUBgroupID FROM tblSubscr GROUP BY tblSubscr.SUBgroupID " & _
               "HAVING (((tblSubscr.SUBgroupID)='" & [Forms]![frmImportProcessing].[txtGrpID] & "'));"
      Set rst = db.OpenRecordset(strSQL, dbOpenSnapshot)
      If rst.RecordCount > 0 Then
        lngCurS = rst.Fields("CurSCnt")
        rst.Close
      Else
        lngCurS = 0
      End If
      ' get Current Dependent Count
      strSQL = "SELECT Count(tblDependent.DEPsubID) AS CurDCnt FROM tblSubscr INNER JOIN tblDependent ON tblSubscr.SUBssn = tblDependent.DEPsubID " & _
               "WHERE (((tblSubscr.SUBgroupID)='" & [Forms]![frmImportProcessing].[txtGrpID] & "'));"
      Set rst = db.OpenRecordset(strSQL, dbOpenSnapshot)
      If rst.RecordCount > 0 Then
        lngCurD = rst.Fields("CurDCnt")
        rst.Close
      Else
        lngCurD = 0
      End If
      
      
      Select Case Me.txtImportSpec
        Case conEDI_Import
        Case conQCDStd_Import
        Case conAMSTR_Import
          strSQL = "SELECT Count(tblSubscr.SUBssn) AS DelCNT, tblImportFile_ASR_Employees.TRANSACTION_TYPE " & _
                 "FROM tblSubscr INNER JOIN tblImportFile_ASR_Employees ON tblSubscr.SUBssn = tblImportFile_ASR_Employees.SSN " & _
                 "GROUP BY tblImportFile_ASR_Employees.TRANSACTION_TYPE HAVING (((tblImportFile_ASR_Employees.TRANSACTION_TYPE)='T'));"
          Set rst = db.OpenRecordset(strSQL, dbOpenSnapshot)
          If rst.RecordCount > 0 Then
            lngDelASR = rst.Fields("DelCNT")
            rst.Close
          Else
            lngDelASR = 0
          End If
        Case Is = conMRIC_Import
      End Select
          
      strMsg = "Group: " & Me.cboGroups.Column(1) & vbCrLf & vbCrLf
        
      Select Case Me.txtImportSpec
        Case conEDI_Import
          strMsg = strMsg & "HIPAA File:" & vbCrLf
        Case conQCDStd_Import
          strMsg = strMsg & "QCD Standard Import File:" & vbCrLf
        Case conAMSTR_Import
          strMsg = strMsg & "QCD ASR Import File:" & vbCrLf
        Case conMRIC_Import
          strMsg = strMsg & "QCD Non Standard Import File:" & vbCrLf
        Case conAA_Import
          strMsg = strMsg & "QCD All American File:" & vbCrLf
        Case conDISD_Import
          strMsg = strMsg & "QCD Non Standard Import File:" & vbCrLf
      End Select
      
      strMsg = strMsg & "Subscribers - " & CStr(lngImpS) & vbCrLf
      
      Select Case Me.txtImportSpec
        Case conEDI_Import
        Case conQCDStd_Import
        Case conAMSTR_Import
          strMsg = strMsg & "Subscriber Deletes (T) - " & CStr(lngDelASR) & vbCrLf
        Case conMRIC_Import
        Case conAA_Import
        Case conDISD_Import
      End Select
      
      strMsg = strMsg & "Dependents - " & CStr(lngImpD) & vbCrLf & vbCrLf
      strMsg = strMsg & "Current Counts: " & vbCrLf
      strMsg = strMsg & "Subscribers - " & CStr(lngCurS) & vbCrLf
      strMsg = strMsg & "Dependents - " & CStr(lngCurD) & vbCrLf & vbCrLf
      strMsg = strMsg & "Are you sure you want to perform this update? " & vbCrLf
      strMsg = strMsg & "This procedure cannot be undone!"
      
      intResp = MsgBox(strMsg, vbQuestion + vbYesNo + vbDefaultButton2, "QCD: Confirm Action")
      If intResp = vbYes Then
        DoCmd.Hourglass True
        DoCmd.SetWarnings False
        
        'delete existing subscribers before import
        Select Case Me.txtImportSpec
            Case conEDI_Import
                db.Execute ("DELETE tblSubscr.* FROM tblSubscr " & _
                "WHERE (((tblSubscr.SUBgroupID)= '" & [Forms]![frmImportProcessing].[txtGrpID] & "'));")
            Case conQCDStd_Import
                db.Execute ("DELETE tblSubscr.* FROM tblSubscr " & _
                "WHERE (((tblSubscr.SUBgroupID)= '" & [Forms]![frmImportProcessing].[txtGrpID] & "'));")
            Case conAMSTR_Import
                'Delete the Deletions
                db.Execute ("DELETE tblSubscr.*, " & _
                "tblImportFile_ASR_Employees.TRANSACTION_TYPE " & _
                "FROM tblSubscr " & _
                "INNER JOIN tblImportFile_ASR_Employees " & _
                "ON tblSubscr.SUBssn = tblImportFile_ASR_Employees.SSN " & _
                "WHERE (((tblImportFile_ASR_Employees.TRANSACTION_TYPE)='T'));")
            Case conMRIC_Import
                'nothing
        End Select
        
        ' All Others -
        '              flag the subscriber records to be deleted
        '              and then delete them; the dependents will
        '              go too because cascade delete with get rid of them
        db.Execute ("UPDATE tblSubscr " & _
                    "INNER JOIN tblEDI_App_Subscr " & _
                    "ON tblSubscr.SUBssn = tblEDI_App_Subscr.SUBssn " & _
                    "SET tblSubscr.Flag = Null;"), dbSeeChanges
        db.Execute ("UPDATE tblSubscr " & _
                    "INNER JOIN tblEDI_App_Subscr " & _
                    "ON tblSubscr.SUBssn = tblEDI_App_Subscr.SUBssn " & _
                    "SET tblSubscr.Flag = True;"), dbSeeChanges
        db.Execute ("DELETE tblSubscr.* FROM tblSubscr WHERE (((tblSubscr.Flag)=True));"), dbSeeChanges
        '              delete the remaining subscribers who were
        '              not in the new import file; cascade delete
        '              will get the dependents
        db.Execute ("DELETE tblSubscr.* FROM tblSubscr WHERE ((tblSubscr.SUBgroupID) = '" & strGrpID & "');"), dbSeeChanges
                  
        Set db = Nothing
                
        ' Assign New SubID's
        Call PopulateEDISubIDs
        
        ' populate tblSubscr and tblDependent
        DoCmd.OpenQuery "qappEDI_Subscr_Final"
        DoCmd.OpenQuery "qappEDI_Dep_Final"
            
      'Update PlanID's
      Select Case Me.txtImportSpec
        
        Case conEDI_Import
          'Update PlanID for groups using EDI ANSI 834 import spec
          DoCmd.OpenQuery "qupdEDI_QCDOnly_tblSubscr_PlanID"
          
        Case conAA_Import
          'Update PlanID for All American Import
          DoCmd.OpenQuery "qupdEDI_AllAmerican_tblSubscr_PlanID"
          
      End Select
      
      DoCmd.SetWarnings True
      DoCmd.Hourglass False
      MsgBox "Import File information imported.", vbExclamation, "QCD: Confirm"
      
      With Me
        .cboGroups = ""
        .txtMainFile = ""
        .txtDependentFile = ""
        .txtGroup = ""
        .txtStatus = ""
      End With
      
      End If
    
ExitProc:
  Exit Sub

HandleError:
  MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation
  Resume ExitProc

End Sub

Private Sub cmdDepFileSelect_Click()

    On Error GoTo Err_cmdDepFileSelect_Click

    Dim strFileName As String
    Dim strFile As String

    strFile = GetOpenFile_TSB("C:\My Documents", "Select Dependent Import File")
  
    If Not IsNull(strFile) Then
        Me.txtDependentFile = strFile
        strFileName = strFile
        intProc = 1
    End If

Exit_cmdDepFileSelect_Click:

    Me.cmdDepFileSelect.SetFocus
    Exit Sub

Err_cmdDepFileSelect_Click:
    MsgBox Err.DESCRIPTION
    Resume Exit_cmdDepFileSelect_Click

End Sub
Private Sub cmdPrepare_Click()
  ' Comments   :
  ' Parameters : None
  ' Created    : 2/28/2004 1:19:45 PM Admin
  ' Modified   :
  '
  ' --------------------------------------------------------
  On Error GoTo HandleError
   
   With Me
        If .txtGrpID = "" Or IsNull(.txtGrpID) Then
            MsgBox "Please select a Group to Process", vbExclamation, "QCD: Error"
            Exit Sub
        End If
       
        DoCmd.Hourglass True
        DoCmd.SetWarnings False
        ExecuteSQL ("TRUNCATE TABLE tblEDI_App_Subscr")
        ExecuteSQL ("TRUNCATE TABLE tblEDI_App_Dep")
      
        DoCmd.OpenQuery "qappEDI_App_Subscr"
        DoCmd.OpenQuery "qappEDI_App_Dep"
        ' Update with the RateID
        DoCmd.OpenQuery "qupdEDI_RateID"
        'copy persistent data from tblSubscr for existing subscribers
        ExecuteSQL ("UPDATE tblEDI_App_Subscr " & _
                       "SET tblEDI_App_Subscr.SubID = tblSubscr.SubID, " & _
                       "tblEDI_App_Subscr.SUBcardPRT = tblSubscr.SUBcardPRT, " & _
                       "tblEDI_App_Subscr.SUBcardPRTdte = tblSubscr.SUBcardPRTdte, " & _
                       "tblEDI_App_Subscr.SUBnotes = tblSubscr.SUBnotes, " & _
                       "tblEDI_App_Subscr.DateCreated = tblSubscr.DateCreated, " & _
                       "tblEDI_App_Subscr.DateUpdated = tblSubscr.DateUpdated " & _
                       "FROM tblEDI_App_Subscr " & _
                       "INNER JOIN tblSubscr ON tblEDI_App_Subscr.SUBssn = tblSubscr.SUBssn")
      
        DoCmd.SetWarnings True
        DoCmd.Hourglass False
        
    End With
    
ExitProc:
  Exit Sub

HandleError:
  MsgBox "The following error occured: " & Error$
  Resume ExitProc
  
End Sub

Private Sub cmdPrintCards_Click()

    On Error GoTo Err_cmdPrintCards_Click
    
    Dim dbs As DAO.Database
    Dim rst As DAO.Recordset
    Dim strResponse As String
    Dim strDocName As String
    Dim strGroupID As String
    Dim strSQL As String
    Dim intSubsWithMissingEffDates As Integer
    Dim intGroupType As Integer
    Dim strUserName As String

    Set dbs = CurrentDb()

    strUserName = GetCurrentUserName()
    strGroupID = Me.txtGrpID                 'Forms![frmGrp]![ctlGROUPid]
    intGroupType = Me.txtGroupType           'Forms![frmGrp]![optgrpGroupType]

    'figure out what type of group it is and print the appropriate card
    Select Case intGroupType
        Case 1
            strDocName = "rptCardMemGrp"
        Case 2
            strDocName = ""
        Case 3
            strDocName = ""
        Case 4
            strDocName = "rptCardMemAA"
    End Select

    'count how many subscribers have no effective dates
    'for purposes of warning the user that there are
    'subscribers with no effective dates; the effective
    'date gets printed on the card
    strSQL = "SELECT tblSubscr.SubSSN, tblSubscr.SubGroupID, " & _
             "tblSubscr.SubEffDate " & _
             "FROM tblSubscr " & _
             "WHERE (((tblSubscr.SubGroupID)='" & strGroupID & "') " & _
             "AND ((tblSubscr.SubEffDate) Is Null));"

    Set rst = dbs.OpenRecordset(strSQL, dbOpenSnapshot)
    If rst.RecordCount > 0 Then
        rst.MoveLast
        intSubsWithMissingEffDates = rst.RecordCount
    Else
        intSubsWithMissingEffDates = 0
    End If

    'warn the user about the subscribers with missing effective dates
    If rst.RecordCount > 0 Then
        strResponse = MsgBox("The effective date on the membership cards are printed " & vbCrLf & _
            "from the group subscribers' effective dates. " & vbCrLf & vbCrLf & _
            "There are " & intSubsWithMissingEffDates & " subscribers in this group who do not have effective " & vbCrLf & _
            "dates.  You must enter effective dates for these " & intSubsWithMissingEffDates & vbCrLf & _
            "subscribers before printing membership cards for this group.", vbCritical, "Missing Subscriber Effective Dates")
        GoTo Exit_cmdPrintCards_Click
    End If
    

    'print those cards not previously printed for the group being processed
    strSQL = "SELECT tblSubscr.SubSSN, tblSubscr.SubGroupID, " & _
             "tblSubscr.SubStatus, tblSubscr.SubEffDate, " & _
             "tblSubscr.SubCardPrt, tblSubscr.SubCardPrtDte " & _
             "FROM tblSubscr " & _
             "WHERE (((tblSubscr.SubGroupID)='" & strGroupID & "') " & _
             "AND (tblSubscr.SubStatus)='GRSUB') AND ((tblSubscr.SubCardPrt)=0) " & _
             "ORDER BY tblSubscr.SubGroupID;"

        'don't do anything if no one in the database needs to have a card printed
        Set rst = dbs.OpenRecordset(strSQL, dbOpenSnapshot)
        If rst.RecordCount > 0 Then

            'print not previously printed cards
            ExecuteSQL "DELETE FROM tmpEDI_rpt"
            strSQL = "INSERT INTO tmpEDI_Rpt ( SUBssn , SUBfirstNAME , " & _
                        "SUBlastNAME , SUBStreet , SUBcity , SUBstate , " & _
                        "SUBzip , GroupID ) " & _
                        "SELECT tblSubscr.SubSSN , tblSubscr.SubFirstName ," & _
                        " tblSubscr.SubLastName , [SubStreet1] + ' ' + " & _
                        "[SubStreet2] AS Street , tblSubscr.SubCity , " & _
                        "tblSubscr.SubState , tblSubscr.SubZip , tblSubscr.SubGroupID " & _
                        "FROM tblSubscr " & _
                        "WHERE (((tblSubscr.SubStatus)='GRSUB') AND ((tblSubscr.SubCardPrt)=0) " & _
                        "AND ((tblSubscr.SubGroupID)='" & strGroupID & "'));"
                        
            ExecuteSQL strSQL

            'run the report that prints the card
            DoCmd.OpenReport strDocName, acViewNormal, , "[GroupID] = '" & strGroupID & "' And [SubCardPrt] Is Null" & " Or [SubCardPrt] = 0"
            DoCmd.SetWarnings False
                 
            
            'update the subscriber table indicated that the card was
            'printed, the date it was printed, and who printed it
            strSQL = "UPDATE tblSubscr " & _
                        "SET SubCardPrt = 1, SubCardPrtDte = CONVERT(varchar(10), GetDate(), 101), " & _
                        "UserName = '" & strUserName & "', " & _
                        "ModifyDate = CONVERT(varchar(10), GetDate(), 101), " & _
                        "DateUpdated = CONVERT(varchar(10), GetDate(), 101) " & _
                        "WHERE SubStatus = 'GRSUB' AND SubCardPrt = 0 AND SubGroupID = '" & strGroupID & "'"
                        
            
            ExecuteSQL strSQL
            DoCmd.SetWarnings True
            MsgBox "Cards sent to the printer!", vbExclamation, "Cards Printed"
            
            'clean up tmpEDI_rpt
            ExecuteSQL "DELETE FROM tmpEDI_rpt"
            
        Else

            MsgBox "No subscribers to be printed!", vbExclamation, "No subscribers."

        End If
  

    rst.Close
    Set rst = Nothing
    dbs.Close
    Set dbs = Nothing

Exit_cmdPrintCards_Click:
    Exit Sub

Err_cmdPrintCards_Click:
    MsgBox Err.DESCRIPTION
    Resume Exit_cmdPrintCards_Click
End Sub

Private Sub cmdPrintNewSubscr_Click()
  ' Comments   : Prints a report of new subscribers
  ' Parameters : None
  ' Created    : 2/28/2004 1:31:11 PM Admin
  ' Modified   :
  '
  ' --------------------------------------------------------
  On Error GoTo HandleError
  
    DoCmd.SetWarnings False
    ExecuteSQL ("DELETE FROM tmpEDI_rpt")

    ExecuteSQL ("UPDATE tblEDI_App_Subscr SET tblEDI_App_Subscr.SUBcardPRT = 0, " & _
                   "tblEDI_App_Subscr.DateCreated = GetDate() " & _
                   "FROM tblEDI_App_Subscr " & _
                   "LEFT JOIN tblSubscr ON tblEDI_App_Subscr.SUBssn = tblSubscr.SUBssn " & _
                   "WHERE (((tblSubscr.SUBssn) Is Null))")
    DoCmd.OpenQuery "qrpt_EDI_NewSubs"
    DoCmd.OpenQuery "qrpt_EDI_GrpSubs"
    DoCmd.OpenQuery "qrpt_EDI_IndivSubs"
    'Added for ASR Changes
    DoCmd.OpenQuery "qrpt_EDI_ChangeSubs"
    
    DoCmd.OpenReport "rptEDI_NewSubscribers", acViewPreview
    DoCmd.SetWarnings True

ExitProc:
  Exit Sub

HandleError:
  MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation
  Resume ExitProc
       
End Sub

Private Sub cmdProcess_Click()
  ' Comments   :
  ' Parameters :
  ' Created    : 2/28/2004 1:34:00 PM Admin
  ' Modified   :
  '
  ' --------------------------------------------------------
  On Error GoTo HandleError

    Dim fCheck As Boolean
    Dim strImport As String
    strImport = Me.txtImportSpec
            
    Select Case strImport
        Case Is = conEDI_Import
            fCheck = ProcessEDISpec
            Call cmdPrepare_Click
        Case Is = conQCDStd_Import
            'QCDStandardSubscriber
            'QCDStandardDependent
            fCheck = ProcessQCDStandardSpec
        Case Is = conAMSTR_Import  ' this group is no longer active (01/11/2008)
            ' AMSTR
            fCheck = ProcessAMSTR
        Case Is = conMRIC_Import
            fCheck = ProcessMRICSpec
        'Case Is = conAA_Import  ' functionality move to its own form
                                 ' fdlgAASync
        '    fCheck = ProcessAllAmerican
        Case Is = conDISD_Import
            fCheck = ProcessDISDSpec
    End Select

    If fCheck = True Then
        Me.txtStatus = "Import Complete"
    Else
        Me.txtStatus = "Import Errors!"
    End If

ExitProc:
  Exit Sub

HandleError:
  MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation
  Resume ExitProc

End Sub
Private Sub cmdSubFileSelect_Click()

    On Error GoTo Err_cmdSubFileSelect_Click

    Dim strFileName As String
    Dim strFile As String

    strFile = GetOpenFile_TSB("C:\My Documents", "Select Import File")
  
    If Not IsNull(strFile) Then
        Me.txtMainFile = strFile
        strFileName = strFile
        intProc = 1
    End If

Exit_cmdSubFileSelect_Click:
    Me.cmdSubFileSelect.SetFocus
    Exit Sub

Err_cmdSubFileSelect_Click:
    MsgBox Err.DESCRIPTION
    Resume Exit_cmdSubFileSelect_Click
    
End Sub
Private Function ProcessQCDStandardSpec() As Boolean

    On Error GoTo Err_ProcessQCDStandardSpec_Click

    Dim fRetVal As Boolean
    Dim strSQL As String
    Dim strFilter As String
    Dim lngFlags As Long
    Dim varFileName As Variant
    Dim varOpenfile As Variant
    Dim varFilter As Variant
    Dim varDialogTitle As Variant
    Dim strFileName As String
    Dim strDir As String
    Dim strSpec As String
    Dim strTableName As String
    Dim aQueries() As Variant
  
    strSpec = "QCDStandardSubscriber"
    strTableName = "QCDStandardSubscriber"
    strDir = GetCurrentPath_TSB()
    strFileName = Me.txtMainFile

    varFileName = Me.txtMainFile
  
    If Not IsNull(varFileName) Then
        strFileName = varFileName
        ReDim aQueries(0) As Variant
        aQueries(0) = "qdelQCDStandardSubscr"
        If RunQuery("", aQueries()) = True Then
            DoCmd.TransferText acImportDelim, strSpec, strTableName, strFileName, 0 'move data from text file to QCDStandardSubscriber
            ExecuteSQL ("DELETE FROM  tblEDI_App_Subscr")
            ReDim aQueries(0 To 1) As Variant
            aQueries(0) = "qappStandardSubscriber" 'move data from QCDStandardsubscriber
                                                   'to tblEDI_App_Subscr
            aQueries(1) = "qupdEDI_RateID"         'update the RateID's
            If RunQuery("", aQueries()) = True Then
               ExecuteSQL ("UPDATE tblEDI_App_Subscr SET tblEDI_App_Subscr.DateUpdated = GetDate() " & _
                               "FROM tblEDI_App_Subscr INNER JOIN tblGrp ON tblGrp.GroupID = tblEDI_App_Subscr.SUBgroupID")
               ExecuteSQL ("UPDATE tblEDI_App_Subscr SET tblEDI_App_Subscr.SubID = tblSubscr.SubID, tblEDI_App_Subscr.SUBcardPRT = tblSubscr.SUBcardPRT, tblEDI_App_Subscr.SUBcardPRTdte = tblSubscr.SUBcardPRTdte, tblEDI_App_Subscr.SUBnotes = tblSubscr.SUBnotes, tblEDI_App_Subscr.DateCreated = tblSubscr.DateCreated, tblEDI_App_Subscr.DateUpdated = tblSubscr.DateUpdated " & _
                               "FROM tblEDI_App_Subscr INNER JOIN tblSubscr ON tblEDI_App_Subscr.SUBssn = tblSubscr.SUBssn")
            Else
                GoTo Err_ProcessQCDStandardSpec_Click
            End If
        Else
            GoTo Err_ProcessQCDStandardSpec_Click
        End If
    End If
    
    strSpec = "QCDStandardDependent"
    strTableName = "QCDStandardDependent"
    strDir = GetCurrentPath_TSB()
    strFileName = Me.txtDependentFile

    varFileName = Me.txtDependentFile
  
    If Not IsNull(varFileName) Then
        strFileName = varFileName
        ExecuteSQL ("TRUNCATE TABLE QCDStandardDependent")
            DoCmd.TransferText acImportDelim, strSpec, strTableName, strFileName, 0
            ExecuteSQL ("TRUNCATE TABLE tblEDI_App_Dep")
            ReDim aQueries(0) As Variant
            aQueries(0) = "qappStandardDependent"
            If RunQuery("", aQueries()) = True Then
            Else
                GoTo Err_ProcessQCDStandardSpec_Click
            End If
    End If

    ProcessQCDStandardSpec = True

Exit_ProcessQCDStandardSpec_Click:
    Exit Function

Err_ProcessQCDStandardSpec_Click:
    ProcessQCDStandardSpec = False
    MsgBox Err.DESCRIPTION
    Resume Exit_ProcessQCDStandardSpec_Click
    
End Function
Private Function ProcessAMSTR() As Boolean

    On Error GoTo Err_ProcessAMSTR_Click

    Dim strFileName As String
    Dim strFile As String
    Dim intProc As Integer
    Dim TextLine As String
    Dim strPath As String
    Dim strSpec As String
    Dim strTableName As String
    Dim strPlan As String

    If Me.txtMainFile = "" Or IsNull(Me.txtMainFile) = True Then
        MsgBox "Please select the file to process to continue.", vbExclamation, "QCD: Import Error"
        Exit Function
    End If

    strFile = Me.txtMainFile  ''GetOpenFile_TSB("C:\My Documents", "Select import file")
    strPath = GetPathPart_TSB(strFile)
    
    If Not IsNull(strFile) Then
        If FileExists_TSB(strPath & "Employees.txt") Then
            Kill strPath & "Employees.txt"
        End If
        
        If FileExists_TSB(strPath & "Dependents.txt") Then
            Kill strPath & "Dependents.txt"
        End If
    End If
    
    If Not IsNull(strFile) Then
        'Me.txtFileToProcess = strFile
        strFileName = strFile
        intProc = 1
    End If
    
    Open strFileName For Input As #1                    ' Open file for input.
    Open strPath & "Employees.txt" For Output As #2     ' Open file for output.
    Open strPath & "Dependents.txt" For Output As #3    ' Open file for output.
    Do While Not EOF(1)                                 ' Loop until end of file.
        Line Input #1, TextLine                         ' Read line into variable.
        strPlan = Mid(TextLine, 11, 3)
        If strPlan = "QCD" Then                         'it's an employee
            Print #2, TextLine                          'write the text string to a temporary text file
        Else                                            'it's a dependent
            Print #3, TextLine                          'write the text string to another temporary text file
        End If
    Loop
    
    Close #3                                            ' Close file.
    Close #2                                            ' Close file.
    Close #1                                            ' Close file.
        
    If FileExists_TSB(strFileName) = True Then
        ReDim aQueries(0 To 1) As Variant
        aQueries(0) = "qdelImportTemp_ASRE"
        aQueries(1) = "qdelImportTemp_ASRD"
        If RunQuery("", aQueries()) = True Then
            strSpec = "ImportGroupSpec_ASRE"
            strTableName = "tblImportFile_ASR_Employees"
            strFileName = strPath & "Employees.txt"
            DoCmd.TransferText acImportDelim, strSpec, strTableName, strFileName, 0
            Kill strPath & "Employees.txt"
            
            strSpec = "ImportGroupSpec_ASRD"
            strTableName = "tblImportFile_ASR_Dependents"
            strFileName = strPath & "Dependents.txt"
            DoCmd.TransferText acImportDelim, strSpec, strTableName, strFileName, 0
            Kill strPath & "Dependents.txt"
            
            DoCmd.Hourglass True
            DoCmd.SetWarnings False
            DoCmd.RunSQL "DELETE * FROM tblEDI_App_Subscr"
            DoCmd.RunSQL "DELETE * FROM tblEDI_App_Dep"
            ReDim aQueries(0 To 3) As Variant
            aQueries(0) = "qappASR_EDI_Subscr"
            aQueries(1) = "qappASR_EDI_Deps"
            aQueries(2) = "qupdEDISubRates"
            aQueries(3) = "qupdEDI_SubscriberOther"
            
            If RunQuery("", aQueries()) = True Then
                         
            End If
            DoCmd.SetWarnings True
            DoCmd.Hourglass False
        
        Else
            GoTo Err_ProcessAMSTR_Click
        End If
        
    End If
   
    ProcessAMSTR = True
   
Exit_ProcessAMSTR_Click:
    Exit Function

Err_ProcessAMSTR_Click:
    ProcessAMSTR = False
    MsgBox Err.DESCRIPTION
    Resume Exit_ProcessAMSTR_Click


End Function

Private Function ProcessMRICSpec()

    On Error GoTo Err_ProcessMRICSpec_Click

    Dim strFileName As String
    Dim strFile As String
    Dim intProc As Integer
    Dim TextLine As String
    Dim strPath As String
    Dim strSpec As String
    Dim strTableName As String
    Dim strPlan As String

    If Me.txtMainFile = "" Or IsNull(Me.txtMainFile) = True Then
        MsgBox "Please select the file to process to continue.", vbExclamation, "QCD: Import Error"
        Exit Function
    End If

    DoCmd.Hourglass True
    DoCmd.SetWarnings False
    strFile = Me.txtMainFile  ''GetOpenFile_TSB("C:\My Documents", "Select import file")
    strPath = GetPathPart_TSB(strFile)
    
    If Not IsNull(strFile) Then
        If FileExists_TSB(strPath & "Employees.txt") Then
            Kill strPath & "Employees.txt"
        End If
        
        If FileExists_TSB(strPath & "Dependents.txt") Then
            Kill strPath & "Dependents.txt"
        End If
    End If
    
    If Not IsNull(strFile) Then
        'Me.txtFileToProcess = strFile
        strFileName = strFile
        intProc = 1
    End If
    
    Open strFileName For Input As #1                    ' Open file for input.
    Open strPath & "Employees.txt" For Output As #2     ' Open file for output.
    Open strPath & "Dependents.txt" For Output As #3    ' Open file for output.
    Do While Not EOF(1)                                 ' Loop until end of file.
        Line Input #1, TextLine                         ' Read line into variable.
        strPlan = Mid(TextLine, 11, 8)
        If strPlan = "Employee" Then                         'it's an employee
            Print #2, TextLine                          'write the text string to a temporary text file
        Else                                            'it's a dependent
            Print #3, TextLine                          'write the text string to another temporary text file
        End If
    Loop
    
    Close #3                                            ' Close file.
    Close #2                                            ' Close file.
    Close #1                                            ' Close file.
        
    If FileExists_TSB(strFileName) = True Then
        ReDim aQueries(0 To 1) As Variant
        aQueries(0) = "qdelImportTemp_MRIC_Sub"
        aQueries(1) = "qdelImportTemp_MRIC_Dep"
        If RunQuery("", aQueries()) = True Then
            strSpec = "ImportGroupSpec_MRIC_Emp"
            strTableName = "tblImportFile_MRIC_Employees"
            strFileName = strPath & "Employees.txt"
            DoCmd.TransferText acImportDelim, strSpec, strTableName, strFileName, 0
            Kill strPath & "Employees.txt"
            
            strSpec = "ImportGroupSpec_MRIC_Dep"
            strTableName = "tblImportFile_MRIC_Dependents"
            strFileName = strPath & "Dependents.txt"
            DoCmd.TransferText acImportDelim, strSpec, strTableName, strFileName, 0
            Kill strPath & "Dependents.txt"
            
            ' Move to Staging and add additional information
            DoCmd.RunSQL "DELETE * FROM tblEDI_App_Subscr"
            DoCmd.RunSQL "DELETE * FROM tblEDI_App_Dep"
            ReDim aQueries(0 To 1) As Variant
            aQueries(0) = "qappMRIC_EDI_Subscr"
            aQueries(1) = "qappMRIC_EDI_Deps"
            If RunQuery("", aQueries()) = True Then
                DoCmd.RunSQL "Update tblEDI_App_Subscr Set SUBgroupID ='" & Me.txtGrpID & "'"
            End If
            
            ReDim aQueries(0 To 2) As Variant
            aQueries(0) = "qupdEDISubPlan_MRIC"  ' removed PLAN ID update
            aQueries(1) = "qupdEDI_RateID"       ' update the RateID's
            aQueries(2) = "qupdEDI_SubscriberOther"
            If RunQuery("", aQueries()) = True Then
            
            End If
                
        Else
            GoTo Err_ProcessMRICSpec_Click
        End If
        
    End If
   
    ProcessMRICSpec = True
   
Exit_ProcessMRICSpec_Click:
    DoCmd.SetWarnings True
    DoCmd.Hourglass False
    Exit Function

Err_ProcessMRICSpec_Click:
    ProcessMRICSpec = False
    MsgBox Err.DESCRIPTION
    Resume Exit_ProcessMRICSpec_Click

End Function

Private Function ProcessDISDSpec()

    On Error GoTo Err_ProcessDISDSpec_Click

    Dim fRetVal As Boolean
    Dim strSQL As String
    Dim strFilter As String
    Dim lngFlags As Long
    Dim varFileName As Variant
    Dim varOpenfile As Variant
    Dim varFilter As Variant
    Dim varDialogTitle As Variant
    Dim strFileName As String
    Dim strDir As String
    Dim strSpec As String
    Dim strTableName As String
    Dim aQueries() As Variant
  
    If Me.txtMainFile = "" Or IsNull(Me.txtMainFile) = True Then
        MsgBox "Please select the Employee file to process to continue.", vbExclamation, "QCD: Import Error"
        Exit Function
    End If
    If Me.txtDependentFile = "" Or IsNull(Me.txtDependentFile) = True Then
        MsgBox "Please select the Dependent file to process to continue.", vbExclamation, "QCD: Import Error"
        Exit Function
    End If
    
    DoCmd.Hourglass True
    DoCmd.SetWarnings False
    
    'process subscribers
    strSpec = "QCDStandardSubscriber_MRIC"
    strTableName = "QCD_Subscriber_DISD"
    strDir = GetCurrentPath_TSB()
    strFileName = Me.txtMainFile

    varFileName = Me.txtMainFile
  
    If Not IsNull(varFileName) Then
        strFileName = varFileName
        ReDim aQueries(0) As Variant
        aQueries(0) = "qdelImportTemp_DISD_Sub"
        If RunQuery("", aQueries()) = True Then
            DoCmd.TransferText acImportFixed, strSpec, strTableName, strFileName, 0 'move data from text file to QCDStandardSubscriber
            Call ConvertDISDSubRates            'changes the SubRates field to match QCD cover codes
            ExecuteSQL ("TRUNCATE TABLE tblEDI_App_Subscr")
            ReDim aQueries(0 To 1) As Variant
            aQueries(0) = "qappSubscriber_DISD" 'move data from QCDStandardsubscriber to tblEDI_App_Subscr
            aQueries(1) = "qupdEDI_RateID"      'update the RateID's
            
            If RunQuery("", aQueries()) = True Then
               ExecuteSQL ("UPDATE tblEDI_App_Subscr SET tblEDI_App_Subscr.DateUpdated = GetDate() " & _
                               "FROM tblEDI_App_Subscr INNER JOIN tblGrp ON tblGrp.GroupID = tblEDI_App_Subscr.SUBgroupID")
               ExecuteSQL ("UPDATE tblEDI_App_Subscr " & _
                                "SET tblEDI_App_Subscr.SubID = tblSubscr.SubID, " & _
                                "tblEDI_App_Subscr.SUBcardPRT = tblSubscr.SUBcardPRT, " & _
                                "tblEDI_App_Subscr.SUBcardPRTdte = tblSubscr.SUBcardPRTdte, " & _
                                "tblEDI_App_Subscr.SUBnotes = tblSubscr.SUBnotes, " & _
                                "tblEDI_App_Subscr.DateCreated = tblSubscr.DateCreated " & _
                                "FROM tblEDI_App_Subscr " & _
                                "INNER JOIN tblSubscr ON tblEDI_App_Subscr.SUBssn = tblSubscr.SUBssn")
            Else
                GoTo Err_ProcessDISDSpec_Click
            End If
        Else
            GoTo Err_ProcessDISDSpec_Click
        End If
    End If
    
    'process dependents
    strSpec = "QCDStandardDependent_MRIC"
    strTableName = "QCD_Dependents_DISD"
    strDir = GetCurrentPath_TSB()
    strFileName = Me.txtDependentFile

    varFileName = Me.txtDependentFile
  
    If Not IsNull(varFileName) Then
        strFileName = varFileName
        ExecuteSQL ("TRUNCATE TABLE QCD_Dependents_DISD")
            DoCmd.TransferText acImportFixed, strSpec, strTableName, strFileName, 0
            ExecuteSQL ("TRUNCATE TABLE tblEDI_App_Dep")
            ReDim aQueries(0) As Variant
            aQueries(0) = "qappDependent_DISD"
            If RunQuery("", aQueries()) = True Then
            Else
                GoTo Err_ProcessDISDSpec_Click
            End If
    End If

    ProcessDISDSpec = True
       
Exit_ProcessDISDSpec_Click:
    DoCmd.SetWarnings True
    DoCmd.Hourglass False
    Exit Function

Err_ProcessDISDSpec_Click:
    ProcessDISDSpec = False
    MsgBox Err.DESCRIPTION
    Resume Exit_ProcessDISDSpec_Click

End Function
Private Function ProcessAllAmerican() As Boolean

    On Error GoTo Err_ProcessAllAmerican_Click

    Dim strFileName As String
    Dim strFile As String
    Dim intProc As Integer
    Dim TextLine As String
    Dim strPath As String
    Dim strSpec As String
    Dim strTableName As String
    Dim strPlan As String
    Dim FileDialog As clsFileDialog
   
    Set FileDialog = New clsFileDialog

    If Me.txtMainFile = "" Or IsNull(Me.txtMainFile) = True Then
        MsgBox "Please select the file to process to continue.", vbExclamation, "QCD: Import Error"
        GoTo Err_ProcessAllAmerican_Click
    End If

    strFile = Me.txtMainFile
    strPath = GetPathPart_TSB(strFile)
    strSpec = "ImportAllAmerican"
    strTableName = "ImportAllAmerican"
        
    If Not IsNull(strFile) Then
        strFileName = strFile
        intProc = 1
    End If
    
    If FileExists_TSB(strFileName) = True Then
        With FileDialog
            .InitialDir = strPath
            .DefaultExt = "txt"
            .DialogTitle = "Import EDI file!"
            .Filter = "Text files (*.txt)|*.txt|All Files (*.*)|*.*"
            .FilterIndex = 0
            .FileName = strFileName
            .Flags = FleFileMustExist + FleHideReadOnly + FleCreatePrompt
            .hWndParent = 0 'Use your form's .hwnd property if available
            .MaxFileSize = 255
        
            If .Show(True) Then
                strFileName = .FileName
                DoCmd.TransferText acImportFixed, strSpec, strTableName, strFileName, 0
            Else
                MsgBox "User cancelled"
            End If
        End With
    Else
        GoTo Err_ProcessAllAmerican_Click
    End If
    
    Set FileDialog = Nothing
    
    ReDim aQueries(0) As Variant
    aQueries(0) = "qdelAllAmericanImport"
    If RunQuery("", aQueries()) = True Then
        DoCmd.Hourglass True
        DoCmd.SetWarnings False
        ExecuteSQL ("TRUNCATE TABLE tblEDI_App_Subscr")
        ExecuteSQL ("TRUNCATE TABLE tblEDI_App_Dep")
        ReDim aQueries(0 To 1) As Variant
        aQueries(0) = "qappAllAmerican_EDI_Subscr"
        aQueries(1) = "qappAllAmerican_EDI_Dep"
        If RunQuery("", aQueries()) = True Then
            ReDim aQueries(0 To 2) As Variant
            aQueries(0) = "qupdEDI_Dep_SubSSN"
            aQueries(1) = "qupdEDI_RateID"
            aQueries(2) = "qupdEDI_SubscriberOther"
            If RunQuery("", aQueries()) = True Then
            End If
        End If
            
        DoCmd.SetWarnings True
        DoCmd.Hourglass False
        
    End If
   
    ProcessAllAmerican = True
   
Exit_ProcessAllAmerican_Click:
    Exit Function

Err_ProcessAllAmerican_Click:
    ProcessAllAmerican = False
    MsgBox Err.DESCRIPTION
    Resume Exit_ProcessAllAmerican_Click


End Function
Private Function ProcessEDISpec() As Boolean

    On Error GoTo HandleError
    
    Dim objFile As TextFile2
    Dim cLines As Long
    Dim strOut As String
    Dim intCnt As Integer
    
    
    DoCmd.OpenForm "frmProcessing"
    DoEvents
    DoCmd.Hourglass True
    
    With Me
        .txtEDIContents.Visible = True
        .txtEDIContents = ""
    End With
        
    ' Clear the Import tables
    DoCmd.SetWarnings False
    ExecuteSQL ("TRUNCATE TABLE tblEDI_Dep_Import")
    ExecuteSQL ("TRUNCATE TABLE tblEDI_Subscr_Import")
    DoCmd.SetWarnings True
    
    ' Create new instance of TextFile class
    ' and set the Path property
    Set objFile = New TextFile2
    objFile.path = Me.txtMainFile
    
    If objFile.FileOpen() Then
    lngLineTotal = objFile.Lines.Count
        If lngLineTotal = 1 Then
            DoCmd.Hourglass False
            DoCmd.Close acForm, "frmProcessing"
            Dim intResp As Integer
            intResp = MsgBox("This EDI File needs to be reformatted before it can be processed.  This process will take several minutes.  Do you want to reformat now?", vbYesNo + vbQuestion + vbDefaultButton2, "QCD: Notice")
            If intResp = vbNo Then
                objFile.FileClose
                Exit Function
            Else
              DoCmd.OpenForm "frmProcessing"
              fCheck = ReformatFile
              If fCheck = True Then
                MsgBox "File was successfully reformatted.  Please Process again.", vbInformation, "QCD: Notice"
              End If
            End If
        End If
    
    Application.Echo False
    ' Open the file and print each line
    ' using the Lines collection
    Dim varLine As Variant
    lngLineCntStart = 1
    lngLineCntEnd = 1200
            
    DoEvents
    Me!txtMainFile = CStr(objFile.path)
    
    Do While lngLineCntEnd <= lngLineTotal
        For cLines = lngLineCntStart To lngLineCntEnd
            strOut = strOut & vbCrLf & objFile.Lines.Item(cLines).Text
        Next cLines
        
        If Len(strOut) > Len(vbCrLf) Then
            strOut = Mid(strOut, Len(vbCrLf) + 1)
        End If
        Me!txtEDIContents = strOut

'        If intProc = 1 Then
'        ' First time through
'        ' Check to make sure this file was sent to QCD
'            fCheck = ParseInsurerName
'            If fCheck = False Then
'              objFile.FileClose
'              If fReformat = True Then
'                  fCheck = ReformatFile
'                  If fCheck = True Then
'                    MsgBox "File was successfully reformatted.  Please Process again.", vbInformation, "QCD: Notice"
'                  End If
'              Else
'                Exit Function
'              End If
'            End If
'
'            ' Get the Group Name and Populate the Display
'            fCheck = ParseGroupName
'        ' End of Checks
'        End If
        
        intProc = intProc + 1
        ' Process the File
        fCheck = ProcessEDIImport 'this function adds records to tblEDI_Subscr_Import and tblEDI_Dep_Import
        
        strOut = ""
        Me!txtEDIContents = strOut
        lngLineCntStart = lngLineCntEnd - 26
        If lngLineCntStart = lngLineTotal - 26 Then
            Exit Do
        End If
        lngLineCntEnd = lngLineCntEnd + 1200
        If lngLineCntEnd > lngLineTotal Then
            lngLineCntEnd = lngLineTotal
            fLast = True
        End If
    Loop
    End If
    
    ProcessEDISpec = True
    
ExitProc:
    ' Close the file
    objFile.FileClose
    Me.cmdProcess.SetFocus
    Me.txtEDIContents.Visible = False
    Application.Echo True
    DoCmd.Hourglass False
    DoCmd.Close acForm, "frmProcessing"
    Exit Function
    
HandleError:
    ProcessEDISpec = False
    MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation, "cmdFileOpen_Click"
    Resume ExitProc

End Function


Private Function ProcessEDIImport() As Boolean
    'Purpose:  Processes an HIPAA ANSI 834 file
    '--------------------------------------------------------
    '
    ' Parameters:  -
    ' Returns   : Boolean -
    ' Programmer:  John Criswell
    ' Create Date:  12/17/07
    ' Update Date:  12/17/07
    ' Updated by:  John Criswell
    ' Reason:
    '---------------------------------------------------------
    
    
    On Error GoTo ErrorHandler
    
    
    Dim X As Long
    Dim xS As Long
    Dim X2 As Long
    Dim Xe As Long
    Dim Xee As Long
    Dim L As Long
    Dim I As Long
    Dim Z As Long
    Dim z1 As Long
    
    lngCnt = 1
    
    ' Loop through the file and process each INS Loop
    With Me
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = 0
        Xe = Len(txtEDIContents.Text)
        X2 = Xe
        'Xe = InStrRev(txtEDIContents.Text, "INS*", Len(txtEDIContents.Text), vbTextCompare)
        ' InStrRev does not work in Access 97
        For I = Xe To 1 Step -1
            X = InStr(I, txtEDIContents.Text, "NM1*IL*1*", vbTextCompare)
            If X > 0 Then
                Xe = X2
                Exit For
            End If
            X2 = X2 - 1
        Next I
        For I = X To 1 Step -1
            X = InStr(I, txtEDIContents.Text, "INS*", vbTextCompare)
            If X > 0 Then
                Xe = X2
                Exit For
            End If
            X2 = X2 - 1
        Next I
        
        ' Starting Record
        X = InStr(1, txtEDIContents.Text, "NM1*IL*1*", vbTextCompare)
        xS = X
        For I = X To 1 Step -1
            X = InStr(I, txtEDIContents.Text, "INS*", vbTextCompare)
            If X < xS Then
                Exit For
            End If
            X2 = X2 - 1
        Next I
        lngPlace = X
        ' Find Start of next record
        z1 = lngPlace
        For Z = 1 To 4
            X2 = InStr(z1, txtEDIContents.Text, vbCrLf, vbTextCompare)
            z1 = z1 + (X2 - z1) + 1
        Next Z
        X2 = InStr(z1, txtEDIContents.Text, "INS*", vbTextCompare)
        
        'X2 = InStr(lngPlace + 80, txtEDIContents.Text, "INS*", vbTextCompare)
        lngNext = X2
        
        If X <> 0 Then
            Do While lngPlace <> 0
                txtEDIContents.SelStart = CLng(X) + 2
                txtEDIContents.SelLength = 3
                If txtEDIContents.SelText = "*Y*" Then
                    ' Process Subscriber Record
                    fCheck = ProcessSubscriber(lngPlace, lngNext)
                ElseIf txtEDIContents.SelText = "*N*" Then
                    ' Process Dependent Record
                    fCheck = ProcessDependent(lngPlace, lngNext)
                End If
                ' Get Next Record
                X = X2
                lngPlace = X
                ' Find Start of 2nd record
                z1 = lngPlace
                For Z = 1 To 5
                    X2 = InStr(z1, txtEDIContents.Text, vbCrLf, vbTextCompare)
                    z1 = z1 + (X2 - z1) + 1
                Next Z
                X2 = InStr(z1, txtEDIContents.Text, "INS*", vbTextCompare)
                If X2 > lngPlace And X2 < Xe Then
                    lngNext = X2
                Else
                    If fLast = True And X2 = Xe Then
                        Xe = Len(txtEDIContents.Text)
                        lngNext = Xe
                    ElseIf fLast = True And X <> Xe Then
                        X2 = Len(txtEDIContents.Text)
                        lngNext = Xe
                        fLast = False
                    Else
                        Exit Do
                    End If
                End If
            Loop
        End If
    End With
    
    
Exit_Point:
    Exit Function
    
ErrorHandler:
    MsgBox Err.DESCRIPTION & " " & Err.Number
    Resume Exit_Point
End Function

Private Function ProcessSubscriber(lngPlace As Long, lngNext As Long) As Boolean

On Error GoTo ProcessSubscriberErr

    Dim X As Long
    Dim X2 As Long
    Dim Xe As Long
    Dim Xp As Long
    Dim L As Long
    Dim I As Long
    Dim Z As Long
    'Find all the Parts of the Subscriber
    
    lngCnt = lngCnt + 1
    
    ' Reset Dependent Count
    intDepCnt = 0
    
    With Me
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = lngPlace
        X = InStr(lngPlace, txtEDIContents.Text, "REF*0F*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 6
            txtEDIContents.SelLength = 9
            strSSN = Trim(txtEDIContents.SelText)
        End If
        X = InStr(lngPlace, txtEDIContents.Text, "NM1*IL*1*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 8
            Xp = Int(X) + 9
            L = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
            txtEDIContents.SelLength = L - Xp
            strLName = Trim(txtEDIContents.SelText)
            Xp = Int(L) + 1
            X2 = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
            txtEDIContents.SelStart = Xp - 1
            txtEDIContents.SelLength = X2 - Xp
            strFname = Trim(txtEDIContents.SelText)
            txtEDIContents.SelStart = X2
            txtEDIContents.SelLength = 1
            strMI = Trim(txtEDIContents.SelText)
            
            X2 = InStr(lngPlace, txtEDIContents.Text, "*34*", vbTextCompare)
            'L = InStrRev(txtEDIContents.Text, "*", X2 - 1, vbTextCompare)
            L = X2
            Xe = X2 - 1
            For I = (X2 - 1) To lngPlace Step -1
                X = InStr(I, txtEDIContents.Text, "*", vbTextCompare)
                If X < L Then
                    L = Xe
                    Exit For
                End If
                Xe = Xe - 1
            Next I
         
            txtEDIContents.SelStart = L
            txtEDIContents.SelLength = X2 - (L + 1)
            If txtEDIContents.SelLength > 0 Then
                strNameSuf = Trim(txtEDIContents.SelText)
            Else
                strNameSuf = ""
            End If
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "N3*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 2
            Xp = Int(X) + 3
            L = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
            X2 = InStr(Xp, txtEDIContents.Text, vbCrLf, vbTextCompare)
            If L < X2 Then
                txtEDIContents.SelLength = L - Xp
                strAddr = Trim(txtEDIContents.SelText)
                txtEDIContents.SelStart = L
                txtEDIContents.SelLength = X2 - (L + 1)
                strAddr2 = Trim(txtEDIContents.SelText)
            Else
                L = InStr(X + 2, txtEDIContents.Text, vbCrLf, vbTextCompare)
                txtEDIContents.SelLength = L - (X + 3)
                strAddr = Trim(txtEDIContents.SelText)
                strAddr2 = ""
            End If
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "N4*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 2
            Xp = X + 3
            L = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
            txtEDIContents.SelLength = L - Xp
            strCity = Trim(txtEDIContents.SelText)
            
            txtEDIContents.SelStart = Int(L)
            txtEDIContents.SelLength = 2
            strState = Trim(txtEDIContents.SelText)
            
            txtEDIContents.SelStart = Int(L) + 3
            txtEDIContents.SelLength = 5
            strZip = Trim(txtEDIContents.SelText)
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "DMG*D8*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 6
            txtEDIContents.SelLength = 8
            strDOB = Trim(txtEDIContents.SelText)
            
            Xp = X + 15
            txtEDIContents.SelStart = Xp
            txtEDIContents.SelLength = 1
            strGen = Trim(txtEDIContents.SelText)
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "DTP*348*D8*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 10
            txtEDIContents.SelLength = 8
            strEligStart = Trim(txtEDIContents.SelText)
        End If
        X = InStr(lngPlace, txtEDIContents.Text, "DTP*349*D8*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 10
            txtEDIContents.SelLength = 8
            strEligEnd = Trim(txtEDIContents.SelText)
        Else
            strEligEnd = ""
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "HD*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            L = InStr(X, txtEDIContents.Text, vbCrLf, vbTextCompare) - 4
            txtEDIContents.SelStart = L
            txtEDIContents.SelLength = 3
            strCovr = Trim(txtEDIContents.SelText)
        End If
        ' Check for Insurer
        X = InStr(lngPlace, txtEDIContents.Text, "HD*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            Xp = X + 3
            For Z = 1 To 3
                X2 = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
                Xp = Xp + (X2 - Xp) + 1
            Next Z
            txtEDIContents.SelStart = X2
            txtEDIContents.SelLength = (L - (X2 + 1))
            strIns = Trim(txtEDIContents.SelText)
        End If
        
        ' If strIns is Blank or QCD then insert else skip insert
        If strIns = "" Or strIns = "QCD" Then
            Call InsertSubscriber
        Else
            'Stop
        End If
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = lngPlace

    End With
    ProcessSubscriber = True
    
ProcessSubscriberExit:
    Exit Function

ProcessSubscriberErr:
    ProcessSubscriber = False
    Select Case Err.Number
        Case Else
            MsgBox "Error " & Err.Number & ": " & Err.DESCRIPTION, vbCritical, "Form_frmEDI.ProcessSubscriber" 'ErrorHandler:$$N=Form_frmOrderInfo.ParseAddress
    End Select
    Resume ProcessSubscriberExit

End Function
Function ProcessDependent(lngPlace As Long, lngNext As Long) As Boolean
On Error GoTo ProcessDependentErr

    Dim X As Long
    Dim X2 As Long
    Dim Xe As Long
    Dim Xp As Long
    Dim L As Long
    Dim I As Long
    'Find all the Parts of the Dependent
    
    lngCnt = lngCnt + 1
    fDSSN = False
    
    With Me
        
        ' Get Subscriber SSN
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = lngPlace
        X = InStr(lngPlace, txtEDIContents.Text, "REF*0F*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 6
            txtEDIContents.SelLength = 9
            strSSN = Trim(txtEDIContents.SelText)
        End If
              
              
If strSSN = "463295976" Then
   ' Stop
End If

              
        strTier = GetSubTierCode(strSSN)
        If strTier = "NOIMPORT" Then
            Exit Function
        Else
            intTier = CInt(strTier)
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "NM1*IL*1*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 8
            Xp = Int(X) + 9
            L = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
            txtEDIContents.SelLength = L - Xp
            strDLName = Trim(txtEDIContents.SelText)
            Xp = Int(L) + 1
            X2 = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
            txtEDIContents.SelStart = Xp - 1
            txtEDIContents.SelLength = X2 - Xp
            strDFName = Trim(txtEDIContents.SelText)
            Xp = Int(X2) + 1
            
            L = InStr(X, txtEDIContents.Text, vbCrLf, vbTextCompare)
            X2 = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
            txtEDIContents.SelStart = Xp - 1
            If X2 < L Then
             If X2 = Xp Then
                txtEDIContents.SelLength = 1
             Else
                txtEDIContents.SelLength = (X2 - 1) - Xp
             End If
            Else
             If Xp < L Then
                txtEDIContents.SelLength = (L - 1) - Xp
             Else
                txtEDIContents.SelLength = 0
             End If
            End If
            strDMI = Trim(txtEDIContents.SelText)
            ' Get the Dependent SSN
            L = InStr(X + 2, txtEDIContents.Text, "*34*", vbTextCompare)
            If L > lngPlace And L < lngNext Then
                txtEDIContents.SelStart = L + 3
                txtEDIContents.SelLength = 9
                strDSSN = Trim(txtEDIContents.SelText)
                fDSSN = True
            Else
                strDSSN = Right("000000000" & lngCnt, 9)
            End If
        If strDSSN = "463353015" Then
           ' Stop
        End If
            
            X2 = InStr(lngPlace, txtEDIContents.Text, "*34*", vbTextCompare)
            If X2 > 0 Then
                L = X2
                Xe = X2 - 1
                For I = (X2 - 1) To lngPlace Step -1
                    X = InStr(I, txtEDIContents.Text, "*", vbTextCompare)
                    If X < L Then
                        L = Xe
                        Exit For
                    End If
                    Xe = Xe - 1
                Next I
                txtEDIContents.SelStart = L
                txtEDIContents.SelLength = X2 - (L + 1)
                If txtEDIContents.SelLength > 0 Then
                    strDNameSuf = Trim(txtEDIContents.SelText)
                Else
                    strDNameSuf = ""
                End If
            Else
                strDNameSuf = ""
            End If
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "DMG*D8*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 6
            txtEDIContents.SelLength = 8
            strDDOB = Trim(txtEDIContents.SelText)
            
            Xp = X + 15
            txtEDIContents.SelStart = Xp
            txtEDIContents.SelLength = 1
            strDGen = Trim(txtEDIContents.SelText)
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "DTP*348*D8*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 10
            txtEDIContents.SelLength = 8
            strDEligStart = Trim(txtEDIContents.SelText)
        End If
        X = InStr(lngPlace, txtEDIContents.Text, "DTP*349*D8*", vbTextCompare)
        If X > lngPlace And X < lngNext Then
            txtEDIContents.SelStart = Int(X) + 10
            txtEDIContents.SelLength = 8
            strDEligEnd = Trim(txtEDIContents.SelText)
        Else
            strDEligEnd = ""
        End If
        
        X = InStr(lngPlace, txtEDIContents.Text, "INS*N*", vbTextCompare)
        If X = lngPlace Then
            txtEDIContents.SelStart = Int(X) + 5
            Xp = X + 6
            L = InStr(Xp, txtEDIContents.Text, "*", vbTextCompare)
            txtEDIContents.SelLength = 2
            strDepCode = Trim(txtEDIContents.SelText)
            If strDepCode <> "01" Then
                strDepCode = GetDepCnt(strSSN)
            End If
        End If
        
    Call InsertDependent
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = lngPlace

    End With
    ProcessDependent = True
    
ProcessDependentExit:
    Exit Function

ProcessDependentErr:
    ProcessDependent = False
    Select Case Err.Number
        Case Else
            MsgBox "Error " & Err.Number & ": " & Err.DESCRIPTION, vbCritical, "Form_frmEDI.ProcessDependent" 'ErrorHandler:$$N=Form_frmOrderInfo.ParseAddress
    End Select
    Resume Next
    Resume ProcessDependentExit
End Function

Private Function GetDepCnt(strSSN As String) As String
    Dim dbs As DAO.Database
    Dim rst As DAO.Recordset
    Dim strSQL As String
    Set dbs = CurrentDb()
    
    strSQL = "Select Count(*) AS Cnt FROM tblEDI_Dep_Import Where [Primary SSN] ='" & strSSN & "' AND [Dependent Code] <> '01';"
    Set rst = dbs.OpenRecordset(strSQL, dbOpenSnapshot)
    If rst.RecordCount > 0 Then
        GetDepCnt = "0" & rst.Fields("Cnt") + 2
    End If
    
End Function
Private Function GetSubTierCode(strSSN As String) As String
    
    Dim dbs As DAO.Database
    Dim rst As DAO.Recordset
    Dim strSQL As String
    
    Set dbs = CurrentDb()
    strSQL = "SELECT tblEDI_Subscr_Import.[Primary SSN], tblEDI_Subscr_Import.[Tier Code] " & _
             "FROM tblEDI_Subscr_Import " & _
             "WHERE (((tblEDI_Subscr_Import.[Primary SSN])='" & strSSN & "'));"
    Set rst = dbs.OpenRecordset(strSQL, dbOpenSnapshot)
    If rst.RecordCount > 0 Then
        rst.MoveFirst
        GetSubTierCode = rst.Fields("Tier Code")
        rst.Close
    Else
        GetSubTierCode = "NOIMPORT"
    End If
    
    Set dbs = Nothing
    
End Function
Private Function InsertSubscriber() As Boolean

On Error GoTo InsertSubscriberErr
    
    Dim dbs As DAO.Database
    Dim rst As DAO.Recordset
    Dim strSQL As String
    
    Set dbs = CurrentDb()
    
    Select Case strCovr
    Case "EMP"
        intTier = 1
    Case "ECH"
        intTier = 3
    Case "ESP"
        intTier = 2
    Case "FAM"
        intTier = 4
    End Select
    
    If lngCnt <= 5 Then
        ' check for existing record and update
        strSQL = "Select Count(*) AS Cnt FROM tblEDI_Subscr_Import Where [Primary SSN] ='" & strSSN & "';"
        Set rst = dbs.OpenRecordset(strSQL, dbOpenSnapshot)
        If rst.RecordCount > 0 Then
         If rst.Fields("Cnt") > 0 Then
            strSQL = "UPDATE tblEDI_Subscr_Import Set [Primary SSN] ='" & strSSN & "'"
            strSQL = strSQL & ",[Dependent SSN]= '" & strSSN & "'"
            strSQL = strSQL & ",[Last Name] = '" & Trim(ReplaceChars_TSB(strLName, "'", "' & chr(39) & '") & " " & strNameSuf) & "'"
            strSQL = strSQL & ",[First Name]= '" & ReplaceChars_TSB(strFname, "'", "' & chr(39) & '") & "'"
            If strMI = "*" Or strMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Middle Initial]= '" & ReplaceChars_TSB(strMI, "*", "") & "'"
            End If
            strSQL = strSQL & ",[Address 1]= '" & ReplaceChars_TSB(strAddr, "'", "' & chr(39) & '") & "'"
            If strAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Address 2]= '" & ReplaceChars_TSB(strAddr2, "'", "' & chr(39) & '") & "'"
            End If
            strSQL = strSQL & ",[City]= '" & strCity & "'"
            strSQL = strSQL & ",[ST]= '" & strState & "', [Zip]= '" & strZip & "'"
            strSQL = strSQL & ",[DOB] ='" & strDOB & "',[Gender] ='" & strGen & "'"
            strSQL = strSQL & ",[Elig Start Date] ='" & strEligStart & "', [Elig End Date]= '" & strEligEnd & "'"
            strSQL = strSQL & ",[Tier Code] ='" & intTier & "',[Dependent Code] = '00' "
            strSQL = strSQL & "WHERE [Primary SSN] = '" & strSSN & "';"
            dbs.Execute strSQL, dbSeeChanges
         Else
            strSQL = "INSERT INTO tblEDI_Subscr_Import ([Primary SSN],[Dependent SSN],[Last Name],[First Name]"
            If strMI = "*" Or strMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Middle Initial]"
            End If
            strSQL = strSQL & ",[Address 1]"
            If strAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Address 2]"
            End If
            strSQL = strSQL & ",[City],[ST],[Zip],[DOB],[Gender],[Elig Start Date],[Elig End Date],[Tier Code],[Dependent Code]) VALUES "
            strSQL = strSQL & "('" & strSSN & "','" & strSSN & "','" & Trim(ReplaceChars_TSB(strLName, "'", "' & chr(39) & '") & " " & strNameSuf) & "','" & ReplaceChars_TSB(strFname, "'", "' & chr(39) & '") & "','"
            If strMI = "*" Or strMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ReplaceChars_TSB(strMI, "*", "") & "','"
            End If
            strSQL = strSQL & ReplaceChars_TSB(strAddr, "'", "' & chr(39) & '") & "','"
            If strAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ReplaceChars_TSB(strAddr2, "'", "' & chr(39) & '") & "','"
            End If
            strSQL = strSQL & strCity & "','" & strState & "','" & strZip & "','" & strDOB & "','" & strGen & "','" & strEligStart & "','" & strEligEnd & "','" & intTier & "','00');"
            dbs.Execute strSQL, dbSeeChanges
         End If
        End If
    Else
        strSQL = "INSERT INTO tblEDI_Subscr_Import ([Primary SSN],[Dependent SSN],[Last Name],[First Name]"
            If strMI = "*" Or strMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Middle Initial]"
            End If
            strSQL = strSQL & ",[Address 1]"
            If strAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Address 2]"
            End If
            strSQL = strSQL & ",[City],[ST],[Zip],[DOB],[Gender],[Elig Start Date],[Elig End Date],[Tier Code],[Dependent Code]) VALUES "
            strSQL = strSQL & "('" & strSSN & "','" & strSSN & "','" & Trim(ReplaceChars_TSB(strLName, "'", "' & chr(39) & '") & " " & strNameSuf) & "','" & ReplaceChars_TSB(strFname, "'", "' & chr(39) & '") & "','"
            If strMI = "*" Or strMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ReplaceChars_TSB(strMI, "*", "") & "','"
            End If
            strSQL = strSQL & ReplaceChars_TSB(strAddr, "'", "' & chr(39) & '") & "','"
            If strAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ReplaceChars_TSB(strAddr2, "'", "' & chr(39) & '") & "','"
            End If
            strSQL = strSQL & strCity & "','" & strState & "','" & strZip & "','" & strDOB & "','" & strGen & "','" & strEligStart & "','" & strEligEnd & "','" & intTier & "','00');"
            dbs.Execute strSQL, dbSeeChanges
    End If
    
InsertSubscriberExit:
    ' Clear
    strNameSuf = ""
    strFname = ""
    strMI = ""
    strLName = ""
    strAddr = ""
    strAddr2 = ""
    strCity = ""
    strState = ""
    strZip = ""
    strDOB = ""
    strGen = ""
    strEligStart = ""
    strEligEnd = ""

    Exit Function

InsertSubscriberErr:
    
    Resume InsertSubscriberExit

End Function
Private Function InsertDependent() As Boolean

On Error GoTo InsertDependentErr

    Dim dbs As DAO.Database
    Dim rst As DAO.Recordset
    Dim strSQL As String
    
    Set dbs = CurrentDb()
    
    If lngCnt <= 5 Then
        ' check for existing record and update
        If strDMI = "*" Or strDMI = "" Then
          If fDSSN = True Then
           strSQL = "Select Count(*) AS Cnt FROM tblEDI_Dep_Import Where [Dependent SSN] ='" & strDSSN & "' AND [Last Name] ='" & Trim(ReplaceChars_TSB(strDLName, "'", "' & chr(39) & '") & " " & strNameSuf) & "' AND [First Name]= '" & ReplaceChars_TSB(strDFName, "'", "' & chr(39) & '") & "';"
          Else
           strSQL = "Select Count(*) AS Cnt FROM tblEDI_Dep_Import Where [Primary SSN] ='" & strSSN & "' AND [Last Name] ='" & Trim(ReplaceChars_TSB(strDLName, "'", "' & chr(39) & '") & " " & strNameSuf) & "' AND [First Name]= '" & ReplaceChars_TSB(strDFName, "'", "' & chr(39) & '") & "';"
          End If
        Else
          If fDSSN = True Then
           strSQL = "Select Count(*) AS Cnt FROM tblEDI_Dep_Import Where [Dependent SSN] ='" & strDSSN & "' AND [Last Name] ='" & Trim(ReplaceChars_TSB(strDLName, "'", "' & chr(39) & '") & " " & strNameSuf) & "' AND [First Name]= '" & ReplaceChars_TSB(strDFName, "'", "' & chr(39) & '") & "';"
          Else
           strSQL = "Select Count(*) AS Cnt FROM tblEDI_Dep_Import Where [Primary SSN] ='" & strSSN & "' AND [Last Name] ='" & Trim(ReplaceChars_TSB(strDLName, "'", "' & chr(39) & '") & " " & strNameSuf) & "' AND [First Name]= '" & ReplaceChars_TSB(strDFName, "'", "' & chr(39) & '") & "' AND [Middle Initial]= '" & ReplaceChars_TSB(strDMI, "*", "") & "';"
          End If
        End If
        Set rst = dbs.OpenRecordset(strSQL, dbOpenSnapshot)
        If rst.RecordCount > 0 Then
         If rst.Fields("Cnt") > 0 Then
            strSQL = "UPDATE tblEDI_Dep_Import Set [Primary SSN] ='" & strSSN & "'"
            strSQL = strSQL & ",[Dependent SSN]= '" & strDSSN & "'"
            strSQL = strSQL & ",[Last Name] = '" & Trim(ReplaceChars_TSB(strDLName, "'", "' & chr(39) & '") & " " & strNameSuf) & "'"
            strSQL = strSQL & ",[First Name]= '" & ReplaceChars_TSB(strDFName, "'", "' & chr(39) & '") & "'"
            If strDMI = "*" Or strDMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Middle Initial]= '" & ReplaceChars_TSB(strDMI, "*", "") & "'"
            End If
            strSQL = strSQL & ",[Address 1]= '" & ReplaceChars_TSB(strDAddr, "'", "' & chr(39) & '") & "'"
            If strAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Address 2]= '" & ReplaceChars_TSB(strDAddr2, "'", "' & chr(39) & '") & "'"
            End If
            strSQL = strSQL & ",[City]= '" & strDCity & "'"
            strSQL = strSQL & ",[ST]= '" & strDState & "', [Zip]= '" & strDZip & "'"
            strSQL = strSQL & ",[DOB] ='" & strDDOB & "',[Gender] ='" & strDGen & "'"
            strSQL = strSQL & ",[Elig Start Date] ='" & strDEligStart & "', [Elig End Date]= '" & strDEligEnd & "'"
            strSQL = strSQL & ",[Tier Code] ='" & intTier & "',[Dependent Code] = '" & strDepCode & "' " & _
                "WHERE [Dependent SSN] = '" & strDSSN & "';"
            dbs.Execute strSQL, dbSeeChanges
          Else
            strSQL = "INSERT INTO tblEDI_Dep_Import ([Primary SSN],[Dependent SSN],[Last Name],[First Name]"
            If strDMI = "*" Or strDMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Middle Initial]"
            End If
            strSQL = strSQL & ",[Address 1]"
            If strDAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Address 2]"
            End If
            strSQL = strSQL & ",[City],[ST],[Zip],[DOB],[Gender],[Elig Start Date],[Elig End Date],[Tier Code],[Dependent Code]) VALUES "
            strSQL = strSQL & "('" & strSSN & "','" & strDSSN & "','" & Trim(ReplaceChars_TSB(strDLName, "'", "' & chr(39) & '") & " " & strDNameSuf) & "','" & ReplaceChars_TSB(strDFName, "'", "' & chr(39) & '") & "','"
            If strDMI = "*" Or strDMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ReplaceChars_TSB(strDMI, "*", "") & "','"
            End If
            strSQL = strSQL & ReplaceChars_TSB(strDAddr, "'", "' & chr(39) & '") & "','"
            If strDAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ReplaceChars_TSB(strDAddr2, "'", "' & chr(39) & '") & "','"
            End If
            strSQL = strSQL & strDCity & "','" & strDState & "','" & strDZip & "','" & strDDOB & "','" & strDGen & "','" & strDEligStart & "','" & strDEligEnd & "','" & intTier & "','" & strDepCode & "');"
            dbs.Execute strSQL, dbSeeChanges
          End If
        End If
    Else
        strSQL = "INSERT INTO tblEDI_Dep_Import ([Primary SSN],[Dependent SSN],[Last Name],[First Name]"
            If strDMI = "*" Or strDMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Middle Initial]"
            End If
            strSQL = strSQL & ",[Address 1]"
            If strDAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ",[Address 2]"
            End If
            strSQL = strSQL & ",[City],[ST],[Zip],[DOB],[Gender],[Elig Start Date],[Elig End Date],[Tier Code],[Dependent Code]) VALUES "
            strSQL = strSQL & "('" & strSSN & "','" & strDSSN & "','" & Trim(ReplaceChars_TSB(strDLName, "'", "' & chr(39) & '") & " " & strDNameSuf) & "','" & ReplaceChars_TSB(strDFName, "'", "' & chr(39) & '") & "','"
            If strDMI = "*" Or strDMI = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ReplaceChars_TSB(strDMI, "*", "") & "','"
            End If
            strSQL = strSQL & ReplaceChars_TSB(strDAddr, "'", "' & chr(39) & '") & "','"
            If strDAddr2 = "" Then
                ' Don't Add
            Else
                strSQL = strSQL & ReplaceChars_TSB(strDAddr2, "'", "' & chr(39) & '") & "','"
            End If
            strSQL = strSQL & strDCity & "','" & strDState & "','" & strDZip & "','" & strDDOB & "','" & strDGen & "','" & strDEligStart & "','" & strDEligEnd & "','" & intTier & "','" & strDepCode & "');"
            dbs.Execute strSQL, dbSeeChanges
    End If

    ' Clear
    strDSSN = ""
    strDNameSuf = ""
    strDFName = ""
    strDMI = ""
    strDLName = ""
    strDAddr = ""
    strDAddr2 = ""
    strDCity = ""
    strDState = ""
    strDZip = ""
    strDDOB = ""
    strDGen = ""
    strDEligStart = ""
    strDEligEnd = ""
    
    Exit Function

InsertDependentErr:
    'Stop
    
End Function
Private Sub ConvertDISDSubRates()

    Dim dbs As DAO.Database
    Dim rst As DAO.Recordset
    Dim strSQL As String
    Dim strSubRate As String
    Dim strCoverCode As String

    Set dbs = CurrentDb()
    strSQL = "SELECT QCD_Subscriber_DISD.SubSSN, " & _
             "QCD_Subscriber_DISD.SubRate " & _
             "FROM QCD_Subscriber_DISD;"
    Set rst = dbs.OpenRecordset(strSQL)
    Do While Not rst.EOF
        
        strSubRate = rst.Fields("SubRate")
        Select Case strSubRate
            Case "E"
                strCoverCode = "I"
            Case "S"
                strCoverCode = "O"
            Case "C"
                strCoverCode = "C"
            Case "F"
                strCoverCode = "F"
            Case Else
                strCoverCode = "N"
        End Select
        
        rst.Edit
        rst.Fields("SubRate") = strCoverCode
        rst.Update
        rst.MoveNext
    Loop

    rst.Close
    Set rst = Nothing
    dbs.Close
    Set dbs = Nothing


End Sub
Private Function ParseGroupName() As Boolean
On Error GoTo ParseGroupNameErr

    Dim X As Integer
    Dim L As Integer
    'Find all the Parts of the Address
    'Clear Address First
    Me.txtGroup = ""
    With Me
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = 0
        X = InStr(1, txtEDIContents.Text, "N1*P5*", vbTextCompare)
        If X <> 0 Then
            txtEDIContents.SelStart = Int(X) + 5
            L = InStr(X + 6, txtEDIContents.Text, "*", vbTextCompare) - 2
            txtEDIContents.SelLength = L - (X + 4)
            .txtGroup = Trim(txtEDIContents.SelText)
            X = 0
        End If
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = 0

    End With
    ParseGroupName = True
    
ParseGroupNameExit:
    Exit Function

ParseGroupNameErr:
    ParseGroupName = False
    Select Case Err.Number
        Case Else
            MsgBox "Error " & Err.Number & ": " & Err.DESCRIPTION, vbCritical, "Form_frmEDI.ParseGroupName" 'ErrorHandler:$$N=Form_frmOrderInfo.ParseAddress
    End Select
    Resume ParseGroupNameExit
End Function
Private Function ParseInsurerName() As Boolean
On Error GoTo ParseInsurerNameErr

    Dim X As Integer
    Dim L As Integer
    'Find ParseInsurerName
    With Me
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = 0
        X = InStr(1, txtEDIContents.Text, "~", vbTextCompare)
        If X <> 0 Then
            Application.Echo True
            DoCmd.Hourglass False
            Dim intResp As Integer
            intResp = MsgBox("This EDI File needs to be reformatted before it can be processed.  This process will take several minutes.  Do you want to reformat now?", vbYesNo + vbQuestion + vbDefaultButton2, "QCD: Notice")
            If intResp = vbNo Then
                ' exit the file
                ParseInsurerName = False
                fReformat = False
                Exit Function
            Else
                ' go and reformat the file
                ParseInsurerName = False
                fReformat = True
                Exit Function
            End If
        End If
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = 0
        X = InStr(1, txtEDIContents.Text, "N1*IN*", vbTextCompare)
        If X <> 0 Then
            txtEDIContents.SelStart = Int(X) + 5
            L = InStr(X + 6, txtEDIContents.Text, "*", vbTextCompare) - 2
            txtEDIContents.SelLength = 3 'l - (X + 4)
            If Trim(txtEDIContents.SelText) <> "QCD" Then
                MsgBox "This EDI File does not contain QCD data", vbInformation, "QCD: Error"
            End If
            '.txtGroup = Trim(txtEDIContents.SelText)
            X = 0
        End If
        
        .txtEDIContents.SetFocus
        .txtEDIContents.SelStart = 0

    End With
    ParseInsurerName = True
    
ParseInsurerNameExit:
    Exit Function

ParseInsurerNameErr:
    ParseInsurerName = False
    Select Case Err.Number
        Case Else
            MsgBox "Error " & Err.Number & ": " & Err.DESCRIPTION, vbCritical, "Form_frmEDI.ParseInsurerName" 'ErrorHandler:$$N=Form_frmOrderInfo.ParseAddress
    End Select
    Resume ParseInsurerNameExit
End Function

Private Sub Form_Load()
    
    With Me
        .txtEDIContents = ""
        .txtMainFile = ""
        .txtDependentFile = ""
    End With
    
End Sub
Private Sub cmdClose_Click()
On Error GoTo Err_cmdClose_Click


    DoCmd.Close

Exit_cmdClose_Click:
    Exit Sub

Err_cmdClose_Click:
    MsgBox Err.DESCRIPTION
    Resume Exit_cmdClose_Click
    
End Sub
Private Function ReformatFile() As Boolean
    On Error GoTo HandleError
    
    Dim objFile As TextFile2
    Dim cLines As Long
    Dim strOut As String
    Dim lngText As Long
    Dim X As Long
    Dim strTmp As String
    Dim chrTmp As String * 1
    
    ' Create new instance of TextFile class
    ' and set the Path property
    Set objFile = New TextFile2
    objFile.path = Me.txtMainFile
    
    ' Open the file and print each line
    ' using the Lines collection
    Dim varLine As Variant
    
    If objFile.FileOpen() Then
    For cLines = 1 To objFile.Lines.Count
        strTmp = objFile.Lines.Item(cLines).Text
        Do Until X = 0
            X = InStr(1, strTmp, "~", vbTextCompare)
            If X <> 0 Then
                Mid$(strTmp, X, 1) = vbCrLf
            End If
        Loop
    Next cLines
    
        For cLines = 1 To objFile.Lines.Count
            strOut = strOut & vbCrLf & objFile.Lines.Item(cLines).Text
        Next cLines
        If Len(strOut) > Len(vbCrLf) Then
            strOut = Mid(strOut, Len(vbCrLf) + 1)
        End If
        
        ' Loop backward through the collection
        ' and remove lines with no text (Len = 0)
        For cLines = objFile.Lines.Count To 1 Step -1
            If Len(objFile.Lines.Item(cLines).Text) = 0 Then
                objFile.Lines.Remove cLines
            End If
        Next cLines
        
        ' Save the file
        objFile.FileSave
        
        ' Close the file
        objFile.FileClose
    End If
    
    ReformatFile = True
ExitProc:
    Exit Function
    
HandleError:
    ReformatFile = False
    MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation, "Reformat File Failed"
    Resume ExitProc

End Function
Private Sub cmdAddGroup_Click()
On Error GoTo Err_cmdAddGroup_Click

    Dim stDocName As String
    Dim stLinkCriteria As String

    stDocName = "fdlgManageImportGroups"
    DoCmd.OpenForm stDocName, , , stLinkCriteria

Exit_cmdAddGroup_Click:
    Exit Sub

Err_cmdAddGroup_Click:
    MsgBox Err.DESCRIPTION
    Resume Exit_cmdAddGroup_Click
    
End Sub