' Module     : modCommonFile
' Description:
' Procedures : adhAddFilterItem
'              adhCommonFileOpenSave
'              adhTrimNull

' Created    : 9/16/98 by Litwin, Getz and Gilbert. (Sybex)
' Modified   :
' --------------------------------------------------
'
' From Access 97 Developer's Handbook
' by Litwin, Getz and Gilbert. (Sybex)
' Copyright 1997. All Rights Reserved.
'
Option Compare Database
Option Explicit

Type gtypTagOPENFILENAME
    lStructSize As Long
    hwndOwner As Long
    hInstance As Long
    strFilter As String
    strCustomFilter As String
    nMaxCustFilter As Long
    nFilterIndex As Long
    strFile As String
    nMaxFile As Long
    strFileTitle As String
    nMaxFileTitle As Long
    strInitialDir As String
    strTitle As String
    Flags As Long
    nFileOffset As Integer
    nFileExtension As Integer
    strDefExt As String
    lCustData As Long
    lpfnHook As Long
    lpTemplateName As String
End Type

Declare Function adh_apiGetOpenFileName Lib "comdlg32.dll" _
 Alias "GetOpenFileNameA" (ofn As gtypTagOPENFILENAME) As Boolean
Declare Function adh_apiGetSaveFileName Lib "comdlg32.dll" _
 Alias "GetSaveFileNameA" (ofn As gtypTagOPENFILENAME) As Boolean
Declare Function CommDlgExtendedError Lib "comdlg32.dll" () As Long

Public Const gAdhOFN_READONLY = &H1
Public Const gAdhOFN_OVERWRITEPROMPT = &H2
Public Const gAdhOFN_HIDEREADONLY = &H4
Public Const gAdhOFN_NOCHANGEDIR = &H8
Public Const gAdhOFN_SHOWHELP = &H10
Public Const gAdhOFN_NOVALIDATE = &H100
Public Const gAdhOFN_ALLOWMULTISELECT = &H200
Public Const gAdhOFN_EXTENSIONDIFFERENT = &H400
Public Const gAdhOFN_PATHMUSTEXIST = &H800
Public Const gAdhOFN_FILEMUSTEXIST = &H1000
Public Const gAdhOFN_CREATEPROMPT = &H2000
Public Const gAdhOFN_SHAREAWARE = &H4000
Public Const gAdhOFN_NOREADONLYRETURN = &H8000
Public Const gAdhOFN_NOTESTFILECREATE = &H10000
Public Const gAdhOFN_NONETWORKBUTTON = &H20000
Public Const gAdhOFN_NOLONGNAMES = &H40000
Public Const gAdhOFN_EXPLORER = &H80000
Public Const gAdhOFN_NODEREFERENCELINKS = &H100000
Public Const gAdhOFN_LONGNAMES = &H200000

Function adhAddFilterItem(strFilter As String, _
 strDescription As String, Optional varItem As Variant) As String
    ' Comments   :
    ' Parameters : strFilter
    '              strDescription
    '              varItem -
    ' Returns    : String -
    ' Created    :
    ' Modified   :
    '
    ' --------------------------------------------------------
    
    On Error GoTo PROC_ERR
    ' Tack a new chunk onto the file filter.
    ' That is, take the old value, stick onto it the description,
    ' (like "Databases"), a null character, the skeleton
    ' (like "*.mdb;*.mda") and a final null character.
    '
    ' From Access 97 Developer's Handbook
    ' by Litwin, Getz and Gilbert. (Sybex)
    ' Copyright 1997. All Rights Reserved.
    '
    ' In:
    '       strFilter: existing file filter
    '       strDescription: new filter description
    '       varItem: new filter
    ' Out:
    '       Return value: new file filter
    
    If IsMissing(varItem) Then varItem = "*.*"
    adhAddFilterItem = strFilter & _
     strDescription & vbNullChar & _
     varItem & vbNullChar
    
    Exit Function
    
PROC_ERR:
    MsgBox "The following error occured: " & Error$
    Resume Next
End Function

Function adhCommonFileOpenSave( _
 Optional ByRef varFlags As Variant, _
 Optional ByVal varInitialDir As Variant, _
 Optional ByVal varFilter As Variant, _
 Optional ByVal varFilterIndex As Variant, _
 Optional ByVal varDefaultExt As Variant, _
 Optional ByVal varFileName As Variant, _
 Optional ByVal varDialogTitle As Variant, _
 Optional ByVal varOpenfile As Variant) As Variant
    ' Comments   :
    ' Parameters : varFlags
    '              varInitialDir
    '              varFilter
    '              varFilterIndex
    '              varDefaultExt
    '              varFileName
    '              varDialogTitle
    '              varOpenFile -
    ' Returns    : Variant -
    ' Created    :
    ' Modified   :
    '
    ' --------------------------------------------------------
    
    On Error GoTo PROC_ERR
    ' This is the entry point you'll use to call the common
    ' file open/save dialog. The parameters are listed
    ' below, and all are optional.
    '
    ' From Access 97 Developer's Handbook
    ' by Litwin, Getz and Gilbert. (Sybex)
    ' Copyright 1997. All Rights Reserved.
    '
    ' In:
    '    Flags: one or more of the adhOFN_* constants, OR'd together.
    '    InitialDir: the directory in which to first look
    '    Filter: a set of file filters, set up by calling
    '            AddFilterItem.  See examples.
    '    FilterIndex: 1-based integer indicating which filter
    '            set to use, by default (1 if unspecified)
    '    DefaultExt: Extension to use if the user doesn't enter one.
    '            Only useful on file saves.
    '    FileName: Default value for the file name text box.
    '    DialogTitle: Title for the dialog.
    '    OpenFile: Boolean(True=Open File/False=Save As)
    ' Out:
    '    Return Value: Either Null or the selected filename
    
    Dim ofn As gtypTagOPENFILENAME
    Dim strFileName As String
    Dim strFileTitle As String
    Dim fResult As Boolean
    
    ' Give the dialog a caption title.
    If IsMissing(varInitialDir) Then varInitialDir = ""
    If IsMissing(varFilter) Then varFilter = ""
    If IsMissing(varFilterIndex) Then varFilterIndex = 1
    If IsMissing(varFlags) Then varFlags = 0&
    If IsMissing(varDefaultExt) Then varDefaultExt = ""
    If IsMissing(varFileName) Then varFileName = ""
    If IsMissing(varDialogTitle) Then varDialogTitle = ""
    If IsMissing(varOpenfile) Then varOpenfile = True
    
    ' Allocate string space for the returned strings.
    strFileName = Left(varFileName & String(256, 0), 256)
    strFileTitle = String(256, 0)
    
    ' Set up the data structure before you call the function
    With ofn
        .lStructSize = Len(ofn)
        .hwndOwner = Application.hWndAccessApp
        .strFilter = varFilter
        .nFilterIndex = varFilterIndex
        .strFile = strFileName
        .nMaxFile = Len(strFileName)
        .strFileTitle = strFileTitle
        .nMaxFileTitle = Len(strFileTitle)
        .strTitle = varDialogTitle
        .Flags = varFlags
        .strDefExt = varDefaultExt
        .strInitialDir = CurDir
        
        ' Didn't think most people would want to deal with
        ' these options.
        .hInstance = 0
        .strCustomFilter = ""
        .nMaxCustFilter = 0
        .lpfnHook = 0
    End With
    
    ' This will pass the desired data structure to the
    ' Windows API, which will in turn it uses to display
    ' the Open/Save As Dialog.
    
    If varOpenfile Then
        fResult = adh_apiGetOpenFileName(ofn)
    Else
        fResult = adh_apiGetSaveFileName(ofn)
    End If
    
    ' The function call filled in the strFileTitle member
    ' of the structure. You'll have to write special code
    ' to retrieve that if you're interested.
    
    If fResult Then
        ' You might care to check the Flags member of the
        ' structure to get information about the chosen file.
        ' In this example, if you bothered to pass in a
        ' value for Flags, we'll fill it in with the outgoing
        ' Flags value.
        If Not IsMissing(varFlags) Then varFlags = ofn.Flags
        adhCommonFileOpenSave = adhTrimNull(ofn.strFile)
    Else
        adhCommonFileOpenSave = Null
    End If
    Exit Function
    
PROC_ERR:
    MsgBox "The following error occured: " & Error$
    Resume Next
End Function

Function adhTrimNull(ByVal strItem As String) As String
    ' Comments   :
    ' Parameters : strItem -
    ' Returns    : String -
    ' Created    :
    ' Modified   :
    '
    ' --------------------------------------------------------
    
    On Error GoTo PROC_ERR
    ' Trims the Null from a string returned by an API call
    '
    ' From Access 97 Developer's Handbook
    ' by Litwin, Getz and Gilbert. (Sybex)
    ' Copyright 1997. All Rights Reserved.
    '
    ' In:
    '       strItem: string that contains null terminator
    ' Out:
    '       Return value: same string without null terminator
    
    Dim intPos As Integer
    
    intPos = InStr(strItem, vbNullChar)
    If intPos > 0 Then
        adhTrimNull = Left(strItem, intPos - 1)
    Else
        adhTrimNull = strItem
    End If
    
    Exit Function
    
PROC_ERR:
    MsgBox "The following error occured: " & Error$
    Resume Next
End Function