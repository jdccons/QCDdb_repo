Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Option Compare Database
Option Explicit

'  ------   private property variables   ------
Private mcurAmtPaid As Currency
Private m_strConnectionString As String
Private m_strSSN As String
Private m_strEIMBRID As String
Private m_strSubID As String
Private m_strStatus As String
Private m_strGroupID As String
Private m_intPlanID As String
Private m_intCoverID As Integer
Private m_intRateID As Integer
Private m_strLastName As String
Private m_strFirstName As String
Private m_strMiddleInitial As String
Private m_strLUName As String
Private m_strStreet1 As String
Private m_strStreet2 As String
Private m_strCity As String
Private m_strState As String
Private m_strZip As String
Private m_strPhoneWork As String
Private m_strPhoneHome As String
Private m_datDOB As Date
Private m_intNoOfDeps As Integer
Private m_strGender As String
Private m_intAge As Integer
Private m_strMaritalStatus As String
Private m_datEffectiveDate As Date
Private m_datPreexistingDate As Date
Private m_bytCardPrt As Byte
Private m_datCardPrtDate As Date
Private m_strNotes As String
Private m_strTransactionType As String
Private m_datDateCreated As Date
Private m_datDateUpdated As Date
Private m_datDateDeleted As Date
Private m_datSubContBeg As Date
Private m_datSubContEnd As Date
Private m_intDepCnt As Integer
Private m_intSpouseCnt As Integer
Private m_intOtherCnt As Integer
Private m_strPlanName As String
Private m_strCoverage As String
Private m_strBankDraftNo As String
Private m_strUserName As String
Private mstrUser02 As String
Private mstrUser01 As String


'   ------   constants   ------
Private Const m_Active = 1
Private Const m_Hold = 2
Private Const m_Cancelled = 3





' ------  properties  -------
Public Property Get SSN() As String
    SSN = m_strSSN
End Property
Public Property Let SSN(p_Data As String)
    m_strSSN = p_Data
End Property
Public Property Get EIMBRID() As String
    EIMBRID = m_strEIMBRID
End Property
Public Property Let EIMBRID(p_Data As String)
    m_strEIMBRID = p_Data
End Property
Public Property Get SubID() As String
    SubID = m_strSubID
End Property
Public Property Let SubID(p_Data As String)
    m_strSubID = p_Data
End Property
Public Property Get Status() As String
    Status = m_strStatus
End Property
Public Property Let Status(p_Data As String)
    m_strStatus = p_Data
End Property
Public Property Get GROUPid() As String
    GROUPid = m_strGroupID
End Property
Public Property Let GROUPid(m_GroupID As String)
    m_strGroupID = m_GroupID
End Property
Public Property Get PlanID() As Integer
    PlanID = m_intPlanID
End Property
Public Property Let PlanID(p_Data As Integer)
    m_intPlanID = p_Data
End Property
Public Property Get CoverID() As Integer
    CoverID = m_intCoverID
End Property
Public Property Let CoverID(p_Data As Integer)
    m_intCoverID = p_Data
End Property
Public Property Get RateID() As Integer
    RateID = m_intRateID
End Property
Public Property Let RateID(p_Data As Integer)
    m_intRateID = p_Data
End Property
Public Property Get LastName() As String
    LastName = m_strLastName
End Property
Public Property Let LastName(p_Data As String)
    m_strLastName = p_Data
End Property
Public Property Get FirstName() As String
    FirstName = m_strFirstName
End Property
Public Property Let FirstName(p_Data As String)
    m_strFirstName = p_Data
End Property
Public Property Get MiddleInitial() As String
    MiddleInitial = m_strMiddleInitial
End Property
Public Property Let MiddleInitial(p_Data As String)
    m_strMiddleInitial = p_Data
End Property
Public Property Get LUName() As String
    LUName = m_strLUName
End Property
Public Property Let LUName(p_Data As String)
    m_strLUName = p_Data
End Property
Public Property Get Street1() As String
    Street1 = m_strStreet1
End Property
Public Property Let Street1(p_Data As String)
    m_strStreet1 = p_Data
End Property
Public Property Get Street2() As String
    Street2 = m_strStreet2
End Property
Public Property Let Street2(p_Data As String)
    m_strStreet2 = p_Data
End Property
Public Property Get CITY() As String
    CITY = m_strCity
End Property
Public Property Let CITY(p_Data As String)
    m_strCity = p_Data
End Property
Public Property Get STATE() As String
    STATE = m_strState
End Property
Public Property Let STATE(p_Data As String)
    m_strState = p_Data
End Property
Public Property Get ZIP() As String
    ZIP = m_strZip
End Property
Public Property Let ZIP(p_Data As String)
    m_strZip = p_Data
End Property
Public Property Get PhoneWork() As String
    PhoneWork = m_strPhoneWork
End Property
Public Property Let PhoneWork(p_Data As String)
    m_strPhoneWork = p_Data
End Property
Public Property Get PhoneHome() As String
    PhoneHome = m_strPhoneHome
End Property
Public Property Let PhoneHome(p_Data As String)
    m_strPhoneHome = p_Data
End Property
Public Property Get DOB() As Date
    DOB = m_datDOB
End Property
Public Property Let DOB(p_Data As Date)
    m_datDOB = p_Data
End Property
Public Property Get NoOfDeps() As Integer
    NoOfDeps = m_intNoOfDeps
End Property
Public Property Let NoOfDeps(p_Data As Integer)
    m_intNoOfDeps = p_Data
End Property
Public Property Get GENDER() As String
    GENDER = m_strGender
End Property
Public Property Let GENDER(p_Data As String)
    m_strGender = p_Data
End Property
Public Property Get AmtPaid() As Currency
AmtPaid = mcurAmtPaid
End Property

Public Property Let AmtPaid(rData As Currency)
mcurAmtPaid = rData
End Property
Public Property Get Age() As Integer
    Age = m_intAge
End Property
Public Property Let Age(p_Data As Integer)
    m_intAge = p_Data
End Property
Public Property Get MaritalStatus() As String
    MaritalStatus = m_strMaritalStatus
End Property
Public Property Let MaritalStatus(p_Data As String)
    m_strMaritalStatus = p_Data
End Property
Public Property Get EffectiveDate() As Date
    EffectiveDate = m_datEffectiveDate
End Property
Public Property Let EffectiveDate(p_Data As Date)
    m_datEffectiveDate = p_Data
End Property
Public Property Get PreexistingDate() As Date
    PreexistingDate = m_datPreexistingDate
End Property
Public Property Let PreexistingDate(p_Data As Date)
    m_datPreexistingDate = p_Data
End Property
Public Property Get SubContBeg() As Date
    SubContBeg = m_datSubContBeg
End Property
Public Property Let SubContBeg(p_Data As Date)
    m_datSubContBeg = p_Data
End Property
Public Property Get SubContEnd() As Date
    SubContEnd = m_datSubContEnd
End Property
Public Property Let SubContEnd(p_Data As Date)
    m_datSubContEnd = p_Data
End Property
Public Property Get CardPrt() As Byte
    CardPrt = m_bytCardPrt
End Property
Public Property Let CardPrt(p_Data As Byte)
    m_bytCardPrt = p_Data
End Property
Public Property Get CardPrtDate() As Date
    CardPrtDate = m_datCardPrtDate
End Property
Public Property Let CardPrtDate(p_Data As Date)
    m_datCardPrtDate = p_Data
End Property
Public Property Get Notes() As String
    Notes = m_strNotes
End Property
Public Property Let Notes(p_Data As String)
    m_strNotes = p_Data
End Property
Public Property Get TransactionType() As String
    TransactionType = m_strTransactionType
End Property
Public Property Let TransactionType(p_Data As String)
    m_strTransactionType = p_Data
End Property
Public Property Get DateCreated() As Date
    DateCreated = m_datDateCreated
End Property
Public Property Let DateCreated(p_Data As Date)
    m_datDateCreated = p_Data
End Property
Public Property Get DateUpdated() As Date
    DateUpdated = m_datDateUpdated
End Property
Public Property Let DateUpdated(p_Data As Date)
    m_datDateUpdated = p_Data
End Property
Public Property Get DateDeleted() As Date
    DateDeleted = m_datDateDeleted
End Property
Public Property Let DateDeleted(p_Data As Date)
    m_datDateDeleted = p_Data
End Property
Public Property Get DepCnt() As Integer
    m_intDepCnt = CntDeps(m_strSSN)
    DepCnt = m_intDepCnt
End Property
Public Property Get SpouseCnt() As Integer
    m_intSpouseCnt = CntSpouses(m_strSSN, "S")
    SpouseCnt = m_intSpouseCnt
End Property
Public Property Get OtherCnt() As Integer
    m_intOtherCnt = CntOthers(m_strSSN, "O")
    OtherCnt = m_intOtherCnt
End Property
Public Property Get PlanName() As String
    m_strPlanName = GetPlanName(m_strSSN)
    PlanName = m_strPlanName
End Property
Public Property Get BankDraftNo() As String
    BankDraftNo = m_strBankDraftNo
End Property
Public Property Let BankDraftNo(p_Data As String)
    m_strBankDraftNo = p_Data
End Property
Public Property Get UserName() As String
    UserName = m_strUserName
End Property
Public Property Let UserName(p_Data As String)
    m_strUserName = p_Data
End Property
Public Property Get User01() As String
    User01 = mstrUser01
End Property
Public Property Let User01(rData As String)
    mstrUser01 = rData
End Property
Public Property Get User02() As String
    User02 = mstrUser02
End Property
Public Property Let User02(rData As String)
    mstrUser02 = rData
End Property


'   XXXXXXXXXXXXXXXX    IndivSubStatus property    XXXXXXXXXXXXXXXXXXX

Public Property Get IndivSubStatus() As String
    ' Comments  : an individial subscriber can have a status of
    '             1, 2, or 3
    '             they mean
    '             1 = Active
    '             2 = Hold
    '             3 = Cancelled
    ' Parameters:  -
    ' Returns   : String
    ' Modified  :
    '
    ' --------------------------------------------------
    Dim strSQL As String
    Dim intIndivSubStatus As Integer
    
    strSQL = "SELECT tblSubscr.SUBssn, tblSubscr.SUBstatus, " & _
    "tblSubscr.SUBcancelled " & _
    "FROM tblSubscr " & _
    "WHERE (((tblSubscr.SUBssn)='" & m_strSSN & "') " & _
    "AND ((tblSubscr.SUBstatus)='INDIV'));"
    Call LoadADORecordset(strSQL)
    
    intIndivSubStatus = g_adoRS.Fields("SubCancelled")
    
    Select Case intIndivSubStatus
        Case m_Active
        IndivSubStatus = "Active"
        Case m_Hold
        IndivSubStatus = "Hold"
        Case m_Cancelled
        IndivSubStatus = "Cancelled"
        Case Else
        IndivSubStatus = ""
    End Select
    
    g_adoRS.Close
    Set g_adoRS = Nothing
    
End Property



' XXXXXXXXXXXXXXX   Public Functions XXXXXXXXXXXXXXXXXX

'  CheckSSN()
'  LoadFromSSN()
'  Public Sub StoreSub(strAction As String, strSSN As String, strGroupID As String)
'  DeleteSub()


Public Function CheckSSN(strSSN As String) As String
    '--------------------------------------------------------
    ' Purpose:  Find out if the subscriber is in the database
    '
    ' Parameters:  -
    ' Returns   : string
    '   Values  : Std_Sub
    '           : Not_Found
    ' Programmer:  John Criswell
    ' Create Date:  11/15/07
    ' Update Date:  11/15/07
    ' Updated by:  John Criswell
    ' -------------------------------------------------------
    
    
    On Error GoTo ErrorHandler
    
    Dim strSQL As String
    strSQL = "SELECT tblSubscr.SUBssn " & _
    "FROM tblSubscr " & _
    "WHERE (((tblSubscr.SUBssn)='" & strSSN & "'));"
    
    Call LoadADORecordset(strSQL)
    If g_adoRS.RecordCount > 0 Then
        CheckSSN = "Std_Sub"
    Else
        CheckSSN = "Not Found"
    End If
    
    Set g_adoRS = Nothing
    
Exit_Point:
    Exit Function
    
ErrorHandler:
    MsgBox Err.DESCRIPTION & " " & Err.Number
    Resume Exit_Point
End Function
Public Function LoadFromSSN(p_SSN As String, p_GroupID As String) As Boolean
    ' Comments  :  Loads this object's values by loading a record based on the given ID
    ' Parameters: p_SSN -
    ' Returns   : Boolean -
    ' Modified  :
    '
    ' --------------------------------------------------
    
    On Error GoTo PROC_ERR
    
    Dim strSQL As String
    
    
    strSQL = "SELECT SubSSN, EIMBRID, SubID, "
    strSQL = strSQL & "SubStatus, SubGroupID, "
    strSQL = strSQL & "PlanID, CoverID, RateID, "
    strSQL = strSQL & "Sub_LUName, "
    strSQL = strSQL & "SubLastName, SubFirstName, "
    strSQL = strSQL & "SubMiddleName, "
    strSQL = strSQL & "SubStreet1, SubStreet2, "
    strSQL = strSQL & "SubCity, SubState, SubZip, "
    strSQL = strSQL & "SubPhoneWork, SubPhoneHome, "
    strSQL = strSQL & "SubDOB, "
    strSQL = strSQL & "DepCnt, SubGender, "
    strSQL = strSQL & "SubAge, SubMaritalStatus, SubEffDate, "
    strSQL = strSQL & "PreexistingDate, "
    strSQL = strSQL & "SubCardPrt, SubCardPrtDte, "
    strSQL = strSQL & "SubNotes, TransactionType, "
    strSQL = strSQL & "SubBankDraftNo, "
    strSQL = strSQL & "DateCreated, DateUpdated, "
    strSQL = strSQL & "DateDeleted "
    strSQL = strSQL & "FROM tblSubscr "
    strSQL = strSQL & "WHERE SubSSN='" & p_SSN & "'"
    
    LoadFromSSN = LoadData(strSQL)
    
    
PROC_EXIT:
    Exit Function
    
PROC_ERR:
    Err.Raise Err.Number
    Resume PROC_EXIT
    
End Function
Public Sub StoreSub(strAction As String, strSSN As String, strGroupID As String)
    ' Comments  :
    ' Parameters: p_SSN -
    ' Returns   :  -
    ' Modified  :
    '
    ' --------------------------------------------------
    
    On Error GoTo PROC_ERR
    
    Dim strSQL As String
    
    If strAction = "Update" Then
        
        strSQL = strSQL & " UPDATE tblSubscr"
        strSQL = strSQL & " Set SubSSN = '" & Me.SSN & "',"
        strSQL = strSQL & " EIMBRID = '" & Me.EIMBRID & "',"
        strSQL = strSQL & " SubID = '" & Me.SubID & "',"
        strSQL = strSQL & " SubStatus = '" & Me.Status & "',"
        strSQL = strSQL & " SubGroupID = '" & Me.GROUPid & "',"
        strSQL = strSQL & " PlanID = " & Me.PlanID & ","
        strSQL = strSQL & " CoverID = " & Me.CoverID & ","
        strSQL = strSQL & " RateID = " & Me.RateID & ","
        strSQL = strSQL & " SubLastName = '" & ReplaceChars_TSB(Me.LastName, "'", "''") & "',"
        strSQL = strSQL & " SubFirstName = '" & ReplaceChars_TSB(Me.FirstName, "'", "''") & "',"
        strSQL = strSQL & " SubMiddleName = '" & Me.MiddleInitial & "',"
        strSQL = strSQL & " Sub_LUName = '" & ReplaceChars_TSB(Me.LUName, "'", "''") & "',"
        strSQL = strSQL & " SubStreet1 = '" & Me.Street1 & "',"
        strSQL = strSQL & " SubStreet2 = '" & Me.Street2 & "',"
        strSQL = strSQL & " SubCity = '" & Me.CITY & "',"
        strSQL = strSQL & " SubState = '" & Me.STATE & "',"
        strSQL = strSQL & " SubZip = '" & Me.ZIP & "',"
        strSQL = strSQL & " SubPhoneWork = '" & Me.PhoneWork & "',"
        strSQL = strSQL & " SubPhoneHome = '" & Me.PhoneHome & "',"
        strSQL = strSQL & " SubDOB = '" & Me.DOB & "',"
        strSQL = strSQL & " DepCnt = " & Me.NoOfDeps & ","
        strSQL = strSQL & " SubGender = '" & Mid(Me.GENDER, 1, 1) & "',"
        strSQL = strSQL & " SubAge = " & Me.Age & ","
        strSQL = strSQL & " SubMaritalStatus = '" & Me.MaritalStatus & "',"
        strSQL = strSQL & " SubEffDate = " & DateFormat(Me.EffectiveDate) & ","
        strSQL = strSQL & " PreexistingDate = " & DateFormat(Me.PreexistingDate) & ","
        strSQL = strSQL & " SubCardPrt = " & Me.CardPrt & ","
        strSQL = strSQL & " SubCardPrtDte = " & DateFormat(Me.CardPrtDate) & ","
        strSQL = strSQL & " SubContBeg = " & DateFormat(Me.SubContBeg) & ","
        strSQL = strSQL & " SubContEnd = " & DateFormat(Me.SubContEnd) & ","
        strSQL = strSQL & " SubNotes = '" & Me.Notes & "',"
        strSQL = strSQL & " SubBankDraftNo = '" & Me.BankDraftNo & "',"
        strSQL = strSQL & " TransactionType = '" & Me.TransactionType & "',"
        strSQL = strSQL & " UserName = '" & Me.UserName & "',"
        strSQL = strSQL & " DateCreated = " & DateFormat(Me.DateCreated) & ","
        strSQL = strSQL & " DateUpdated = " & DateFormat(Me.DateUpdated) & ","
        strSQL = strSQL & " DateDeleted = " & DateFormat(Me.DateDeleted) & ","
        strSQL = strSQL & " Flag = 1"
        strSQL = strSQL & " WHERE SubSSN = '" & (strSSN) & "'"
        
        ExecuteSQL strSQL
        
        ElseIf strAction = "Add" Then
        strSQL = ""
        strSQL = "INSERT INTO tblSubscr "
        strSQL = strSQL & "(SubSSN, "                                                 '1
        strSQL = strSQL & "EIMBRID, "                                                   '1a
        strSQL = strSQL & "SubID, "                                                   '2
        strSQL = strSQL & "SUBstatus, "                                               '3
        strSQL = strSQL & "SUBGroupID, "                                              '4
        strSQL = strSQL & "PlanID, "                                                  '5
        strSQL = strSQL & "CoverID, "                                                 '6
        strSQL = strSQL & "RateID, "                                                  '7
        strSQL = strSQL & "Sub_LUName, "                                              '8
        strSQL = strSQL & "SubLastName, "                                             '9
        strSQL = strSQL & "SubFirstName, "                                            '10
        strSQL = strSQL & "SubMiddleName, "                                           '11
        strSQL = strSQL & "SubStreet1, "                                              '12
        strSQL = strSQL & "SubStreet2, "                                              '13
        strSQL = strSQL & "SubCity, "                                                 '14
        strSQL = strSQL & "SubState, "                                                '15
        strSQL = strSQL & "SubZip, "                                                  '16
        strSQL = strSQL & "SubPhoneWork, "                                            '17
        strSQL = strSQL & "SubPhoneHome, "                                            '18
        strSQL = strSQL & "SUBdob, "                                                  '19
        strSQL = strSQL & "DepCnt, "                                             '20
        strSQL = strSQL & "SubGender, "                                               '21
        strSQL = strSQL & "SubAge, "                                                  '22
        strSQL = strSQL & "SubMaritalStatus, "                                        '23
        strSQL = strSQL & "SubEffDate, "                                              '24
        strSQL = strSQL & "PreexistingDate, "                                         '25
        strSQL = strSQL & "SubCardPrt, "                                              '26
        strSQL = strSQL & "SubCardPrtDte,  "                                          '27
        strSQL = strSQL & "SubContBeg,  "                                          '27
        strSQL = strSQL & "SubContEnd,  "                                          '27
        strSQL = strSQL & "SubNotes,  "                                               '28
        strSQL = strSQL & "SubBankDraftNo,  "                                               '28a
        strSQL = strSQL & "TransactionType,  "                                        '29
        strSQL = strSQL & "UserName,  "                                                 '29a
        strSQL = strSQL & "DateCreated, "                                             '30
        strSQL = strSQL & "DateUpdated, "                                             '31
        strSQL = strSQL & "DateDeleted, "                                             '32
        strSQL = strSQL & "Flag) "                                                    '33
        strSQL = strSQL & "VALUES ('" & Me.SSN & "', "                                '1
        strSQL = strSQL & "'" & Me.EIMBRID & "', "                                      '1a
        strSQL = strSQL & "'" & Me.SubID & "', "                                      '2
        strSQL = strSQL & "'" & Me.Status & "', "                                     '3
        strSQL = strSQL & "'" & Me.GROUPid & "', "                                    '4
        strSQL = strSQL & "" & Me.PlanID & ", "                                       '5
        strSQL = strSQL & "" & Me.CoverID & ", "                                      '6
        strSQL = strSQL & "" & Me.RateID & ", "                                       '7
        strSQL = strSQL & "'" & ReplaceChars_TSB(Me.LUName, "'", "''") & "', "        '8
        strSQL = strSQL & "'" & ReplaceChars_TSB(Me.LastName, "'", "''") & "', "      '9
        strSQL = strSQL & "'" & ReplaceChars_TSB(Me.FirstName, "'", "''") & "', "     '10
        strSQL = strSQL & "'" & Me.MiddleInitial & "', "                              '11
        strSQL = strSQL & "'" & Me.Street1 & "', "                                    '12
        strSQL = strSQL & "'" & Me.Street2 & "', "                                    '13
        strSQL = strSQL & "'" & Me.CITY & "', "                                       '14
        strSQL = strSQL & "'" & Me.STATE & "', "                                      '15
        strSQL = strSQL & "'" & Me.ZIP & "', "                                        '16
        strSQL = strSQL & "'" & Me.PhoneWork & "', "                                  '17
        strSQL = strSQL & "'" & Me.PhoneHome & "', "                                  '18
        strSQL = strSQL & "'" & Me.DOB & "', "                                        '19
        strSQL = strSQL & "" & Me.NoOfDeps & ", "                                     '20
        strSQL = strSQL & "'" & Me.GENDER & "', "                                     '21
        strSQL = strSQL & "" & Me.Age & ", "                                          '22
        strSQL = strSQL & "'" & Me.MaritalStatus & "', "                              '23
        strSQL = strSQL & "" & DateFormat(Me.EffectiveDate) & ", "                    '24
        strSQL = strSQL & "" & DateFormat(Me.PreexistingDate) & ", "                  '25
        strSQL = strSQL & "" & Me.CardPrt & ", "                                      '26
        strSQL = strSQL & "" & DateFormat(Me.CardPrtDate) & ", "                      '27
        strSQL = strSQL & "" & DateFormat(Me.SubContBeg) & ", "                      '27
        strSQL = strSQL & "" & DateFormat(Me.SubContEnd) & ", "                      '27
        strSQL = strSQL & "'" & Me.Notes & "', "                                      '28
        strSQL = strSQL & "'" & Me.BankDraftNo & "', "                                      '28a
        strSQL = strSQL & "'" & Me.TransactionType & "', "                            '29
        strSQL = strSQL & "'" & Me.UserName & "', "                                   '29a
        strSQL = strSQL & "" & DateFormat(Me.DateCreated) & ", "                      '30
        strSQL = strSQL & "" & DateFormat(Me.DateUpdated) & ", "                      '31
        strSQL = strSQL & "" & DateFormat(Me.DateDeleted) & ", "                      '32
        strSQL = strSQL & "" & 1 & ")"                                                '33
        
        ExecuteSQL strSQL
        
    End If
    
    
PROC_EXIT:
    Exit Sub
    
PROC_ERR:
    Err.Raise Err.Number
    Resume PROC_EXIT
    
End Sub
Public Sub DeleteSub(strSSN)
    ' Comments  :  Deletes a subscriber from the database
    '              this applies only to QCD Only Subscribers
    '              if the subscriber is in an All American Group
    '              we must submit the transaction to GroupLink
    '              with the DateDeleted populated with the deleted date
    ' Parameters: p_SSN -
    ' Returns   :  -
    ' Modified  :
    '
    ' --------------------------------------------------
    
    On Error GoTo PROC_ERR
    
    Dim strSQL
    
    strSQL = "DELETE FROM tblSubscr WHERE SubSSN = '" & strSSN & "'"
    ExecuteSQL strSQL
    
PROC_EXIT:
    Exit Sub
    
PROC_ERR:
    Err.Raise Err.Number
    Resume PROC_EXIT
    
End Sub




' XXXXXXXXXXXXXXXXXXXXXX   Private functions   XXXXXXXXXXXXXXX
'  CntDeps() - returns number of sub deps
'  CntSpouses() - returns the number of spouses (0, 1)
'  CntOthers() - returns number of members not dep or spouse
'  GetPlanName() - returns the name of each plan (red, white, etc.)
'  LoadData() - gets data from database
'  FillFromRS() - fills recordset with data retrieved from the database
'  CheckSubID() - is this SubID even in the database
'  FindSSN() - is this SSN even in the database
'  DateFormat() - convert dates to format acceptable to SQL Server

Private Function CntDeps(strSSN As String) As Integer
    
    ' Comments  :  This function will return the number of dependents
    '              the subscriber has; for Indiv only it must be zero;
    '              for Indiv + 1, Indiv + Child(ren), and Indiv + Family,
    '              it must be at least two and at least one spouse or
    '              other
    ' Parameters:
    ' Returns   : Integer
    ' Created   : 11/10/07 16:13 JC
    ' Modified  :
    '
    ' --------------------------------------------------
    On Error GoTo ErrorHandler
    
    LoadADORecordset "uspCntDeps '" & strSSN & "'"
    
    If Not g_adoRS.EOF Then
        CntDeps = g_adoRS("CntOfDeps")
        g_adoRS.Close
    End If
    
    Set g_adoRS = Nothing
    
Exit_Point:
    Exit Function
    
ErrorHandler:
    MsgBox Err.DESCRIPTION & " " & Err.Number
    Resume Exit_Point
    
End Function
Private Function CntSpouses(strSSN As String, strDepRel As String) As Integer
    
    ' Comments  :  This function will return the number of spouses
    '              the subscriber has; hopefully it is either 0 or 1
    ' Parameters:
    ' Returns   : Integer
    ' Created   : 11/10/07 16:13 JC
    ' Modified  :
    '
    ' --------------------------------------------------
    On Error GoTo ErrorHandler
    
    LoadADORecordset "uspCntSpouses '" & strSSN & "', " & "'" & strDepRel & "'"
    
    If Not g_adoRS.EOF Then
        CntSpouses = g_adoRS("CntOfSpouses")
        g_adoRS.Close
    End If
    
Exit_Point:
    Exit Function
    
ErrorHandler:
    MsgBox Err.DESCRIPTION & " " & Err.Number
    Resume Exit_Point
End Function
Private Function CntOthers(strSSN As String, strDepRel As String) As Integer
    
    ' Comments  :  This function will return the number of others
    '              the subscriber has; it can be unlimited but for
    '              Indiv + 1, it must be at least one
    ' Parameters:
    ' Returns   : Integer
    ' Created   : 11/10/07 16:13 JC
    ' Modified  :
    '
    ' --------------------------------------------------
    On Error GoTo ErrorHandler
    
    LoadADORecordset "uspCntOthers '" & strSSN & "', " & "'" & strDepRel & "'"
    
    If Not g_adoRS.EOF Then
        CntOthers = g_adoRS("CntOfOthers")
        g_adoRS.Close
    End If
    
    Set g_adoRS = Nothing
    
Exit_Point:
    Exit Function
    
ErrorHandler:
    MsgBox Err.DESCRIPTION & " " & Err.Number
    Resume Exit_Point
End Function
Private Function GetPlanName(strSSN As String) As String
    
    ' Comments  :  This function will return the plan that the
    '              subscriber currently has
    ' Parameters:
    ' Returns   : String
    ' Created   : 11/10/07 16:13 JC
    ' Modified  :
    '
    ' --------------------------------------------------
    On Error GoTo ErrorHandler
    
    LoadADORecordset "uspGetPlanName '" & strSSN & "'"
    
    If Not g_adoRS.EOF Then
        GetPlanName = g_adoRS("PlanName")
        g_adoRS.Close
    End If
    
Exit_Point:
    Exit Function
    
ErrorHandler:
    MsgBox Err.DESCRIPTION & " " & Err.Number
    Resume Exit_Point
End Function

Private Function LoadData(p_strSQL) As Boolean
    
    Call LoadADORecordset(p_strSQL)
    LoadData = FillFromRS(g_adoRS)
    g_adoRS.Close
    Set g_adoRS = Nothing
    
End Function
Private Function FillFromRS(p_RS) As Boolean
    
    On Error GoTo errHandler
    
    If p_RS.EOF Then
        Err.Number = 1
        GoTo errHandler
    Else
        Me.SSN = p_RS.Fields("SubSSN")                       '1
        Me.EIMBRID = p_RS.Fields("EIMBRID")                  '1a
        Me.SubID = p_RS.Fields("SubID")                      '2
        Me.Status = p_RS.Fields("SubStatus")                 '3
        Me.GROUPid = p_RS.Fields("SubGroupID")               '4
        Me.PlanID = p_RS.Fields("PlanID")                    '5
        Me.CoverID = p_RS.Fields("CoverID")                  '6
        Me.RateID = p_RS.Fields("RateID")                    '7
        Me.LastName = p_RS.Fields("SubLastName")             '8
        Me.FirstName = p_RS.Fields("SubFirstName")           '9
        Me.MiddleInitial = p_RS.Fields("SubMiddleName")      '10
        Me.Street1 = p_RS.Fields("SubStreet1")               '11
        Me.Street2 = p_RS.Fields("SubStreet2")               '12
        Me.CITY = p_RS.Fields("SubCity")                     '13
        Me.STATE = p_RS.Fields("SubState")                   '14
        Me.ZIP = p_RS.Fields("SubZip")                       '15
        Me.PhoneWork = p_RS.Fields("SubPhoneWork")           '16
        Me.PhoneHome = p_RS.Fields("SubPhoneHome")           '17
        Me.DOB = p_RS.Fields("SubDOB")                       '18
        Me.NoOfDeps = p_RS.Fields("DepCnt")                  '19
        Me.GENDER = p_RS.Fields("SubGender")                 '20
        Me.Age = p_RS.Fields("SubAge")                       '21
        Me.EffectiveDate = p_RS.Fields("SubEffDate")         '22
        Me.PreexistingDate = p_RS.Fields("PreexistingDate")  '23
        Me.CardPrt = p_RS.Fields("SubCardPrt")               '24
        Me.CardPrtDate = p_RS.Fields("SubCardPrtDte")        '25
        Me.DateCreated = p_RS.Fields("DateCreated")          '26
        Me.DateUpdated = p_RS.Fields("DateUpdated")          '27
        Me.MaritalStatus = p_RS.Fields("SubMaritalStatus")   '28
        Me.BankDraftNo = p_RS.Fields("SubBankDraftNo")       '28a
        FillFromRS = True
    End If
    
ErrExit:
    Exit Function
errHandler:
    If Err.Number = 94 Then
        Resume Next
        ElseIf Err.Number = 1 Then
        FillFromRS = False
    Else
        MsgBox Err.DESCRIPTION & " " & Err.Number
        GoTo ErrExit
    End If
    
End Function
Private Function CheckSubID(strSubID As String) As Boolean
    ' Purpose:  Find out if the subscriber is in the database
    '           based on the subscriber's subid
    '------------------------------------------------
    ' Parameters:  -
    ' Returns   : Boolean
    ' Programmer:  John Criswell
    ' Create Date:  11/15/07
    ' Update Date:  11/15/07
    ' Updated by:  John Criswell
    ' --------------------------------------------------
    
    
    On Error GoTo ErrorHandler
    
    
    Dim strSQL As String
    'check to see if the Subscriber ID is in tblSubscr
    strSQL = "SELECT tblSubscr.SubID " & _
    "FROM tblSubscr " & _
    "WHERE (((tblSubscr.SubID)='" & strSubID & "'));"
    Call LoadADORecordset(strSQL)
    
    If g_adoRS.RecordCount > 0 Then
        CheckSubID = True
    End If
    
    Set g_adoRS = Nothing
    
    
Exit_Point:
    Exit Function
    
ErrorHandler:
    MsgBox Err.DESCRIPTION & " " & Err.Number
    Resume Exit_Point
    
End Function
Private Function FindSSN(strSubID As String) As String
    
    ' Purpose:  Find out if the subscriber is in the database
    '
    '------------------------------------------------
    ' Parameters:  -
    ' Returns   : Boolean
    ' Programmer:  John Criswell
    ' Create Date:  11/15/07
    ' Update Date:  11/15/07
    ' Updated by:  John Criswell
    ' --------------------------------------------------
    
    
    On Error GoTo ErrorHandler
    
    Dim strSQL As String
    
    strSQL = "SELECT SubSSN " & _
    "FROM tblSubscr " & _
    "WHERE SubID = '" & strSubID & "'"
    
    Call LoadADORecordset(strSQL)
    If g_adoRS.RecordCount > 0 Then
        FindSSN = g_adoRS.Fields("SubSSN")
    Else
        FindSSN = ""
    End If
    
    Set g_adoRS = Nothing
    
    
Exit_Point:
    Exit Function
    
ErrorHandler:
    MsgBox Err.DESCRIPTION & " " & Err.Number
    Resume Exit_Point
    
End Function

Private Function DateFormat(PropertyDate As Date) As String
    On Error GoTo ErrorHandler
    If PropertyDate = #12:00:00 AM# Then
        DateFormat = "Null"
    Else
        DateFormat = "'" & PropertyDate & "'"
    End If
Exit_Point:
    Exit Function
    
ErrorHandler:
    MsgBox Err.DESCRIPTION & " " & Err.Number
    Resume Exit_Point
End Function