Version =19
VersionRequired =19
Checksum =608510208
Begin Form
    RecordSelectors = NotDefault
    AutoCenter = NotDefault
    NavigationButtons = NotDefault
    DividingLines = NotDefault
    DefaultView =0
    ScrollBars =0
    ViewsAllowed =1
    PictureAlignment =2
    DatasheetGridlinesBehavior =3
    GridX =24
    GridY =24
    Width =6540
    DatasheetFontHeight =10
    ItemSuffix =32
    Left =7410
    Top =135
    Right =13695
    Bottom =7365
    DatasheetGridlinesColor =12632256
    RecSrcDt = Begin
        0xea0e144b8c92e240
    End
    Caption ="Online Enrollment Processing"
    OnOpen ="[Event Procedure]"
    DatasheetFontName ="Arial"
    PrtMip = Begin
        0xa0050000a0050000a0050000a005000000000000201c0000e010000001000000 ,
        0x010000006801000000000000a10700000100000001000000
    End
    PrtDevMode = Begin
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x010400069c00bc2443ff800701000100ea0a6f08640001000f00580202000100 ,
        0x5802020000004c65747465720000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000010000000000000001000000 ,
        0x0200000003020000ffffffff0000000000000000000000000000000044494e55 ,
        0x2200e808240b981904d5b0360000000000000000000000000000000000000000 ,
        0x0000000000000000540000000100000000000000000000000000000000000000 ,
        0x0000000000000000010000000000000000000000000003000000020000000100 ,
        0x0100000000000000000000000000000000000000030001000100010001000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0100000000000000000001000100010002000100000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x000000000000000000000000010000000000000000000000e8080000534d544a ,
        0x000000001000d8084800500020004f00660066006900630065006a0065007400 ,
        0x2000500072006f0020004c003700350030003000200073006500720069006500 ,
        0x73000000496e70757442696e005072696e74657253656c65637400524553444c ,
        0x4c00556e69726573444c4c004850507265416e616c797369730046616c736500 ,
        0x4d53507265416e616c797369730046616c73650048505265706f727453796d6d ,
        0x65747269634d617267696e730046616c73650048504d696e696d697a654d6172 ,
        0x67696e730046616c7365004850416c69676e4d617267696e73466f724d440054 ,
        0x727565004475706c6578004e4f4e450048505072696e74507265766965770046 ,
        0x616c73650048504f76657253707261794f7074696f6e004175746f6d61746963 ,
        0x0048504f766572537072617900313030004850426f726465724c65737350686f ,
        0x746f0046616c73650048504f75747075744f7264657252657665727365005472 ,
        0x7565004a6f625549005472756500506170657253697a65004c4554544552004f ,
        0x7269656e746174696f6e00504f525452414954004850506170657253697a6544 ,
        0x75706c6578436f6e73747261696e747300494e4445585f434152445f33583500 ,
        0x4850446f6350726f705265736f75726365446174610068707a686c3538612e63 ,
        0x61620048504e5573654469666646697273745061676543686f69636500547275 ,
        0x650048504d65646961547970654475706c6578436f6e73747261696e74730048 ,
        0x505f4d415454455f4752454554494e475f434152445300485044727954696d65 ,
        0x4f7074696f6e004175746f6d6174696300485044727954696d65003000485049 ,
        0x6e6b566f6c756d654f7074696f6e004175746f6d61746963004850496e6b566f ,
        0x6c756d65004e6f726d616c0048505072696e74496e477261795363616c650046 ,
        0x616c7365005072696e745175616c697479004e6f726d616c005072696e745175 ,
        0x616c69747947726f757000505147726f75705f320048504a6f624163636f756e ,
        0x74696e670048504a4f42414343545f4a4f4241434e545f54494d455354414d50 ,
        0x004850436f6c6f724d6f646500434f4c4f525f4d4f444500485050444c547970 ,
        0x650050444c5f50434c33004850504a4c456e636f64696e670055544638004850 ,
        0x584d4c46696c6555736564006870776c373530332e786d6c00485054696c696e ,
        0x6753656c656374696f6e00547275650048504d65646961547970655472656576 ,
        0x696577506f707570005472756500436f6c6f724d6f646500436f6c6f72323400 ,
        0x546578744173426c61636b0046616c7365004d656469615479706500504c4149 ,
        0x4e005265736f6c7574696f6e0036303064706900505144504900496e7374616c ,
        0x6c65640048504d6972726f725072696e740046616c73650048504175746f4475 ,
        0x706c65785363616c696e6700547275650048504d616e75616c466565644f7269 ,
        0x656e746174696f6e0046414345555000485053706565644d6563680046617374 ,
        0x44726166740048504f757470757442696e4f7269656e746174696f6e00464143 ,
        0x4555500048504d61704d616e75616c46656564546f54726179310046616c7365 ,
        0x00485053656e64504a4c5573616765436d64004c4e4e414d455f434152520050 ,
        0x53416c69676e6d656e7446696c650048505a3341353861005053536572766963 ,
        0x65734f7074696f6e005365727669636546696c65456e64004850436c65616e69 ,
        0x6e6746696c6573446174610048505f436c65616e5f5465737450616765004850 ,
        0x436f6e73756d6572437573746f6d5061706572004850437573746f6d00485043 ,
        0x6f6c6f7253656c656374696f6e466f7248504100456e61626c6564004850536d ,
        0x6172744475706c657853696e676c65506167654a6f620054727565004850426f ,
        0x726e4f6e44617465004850424f44004850496e707574436f6c6f725370616365 ,
        0x00434f4c4f52534d415254004850447269766572446174610044726976657244 ,
        0x617461004850437573746f6d53697a65436f6d6d616e64005452554500485053 ,
        0x656e645072656c6f6164436f6d6d616e64005452554500455350524954537570 ,
        0x706f7274656400547275650048505573654175746f4475706c6578556e697400 ,
        0x54727565004850486964654d616e75616c466565640054727565004850524553 ,
        0x444c4c4e616d6500485046525335386100485052656445796552656475637469 ,
        0x6f6e004f66660048504469676974616c496d6167696e67004850486f6d655072 ,
        0x696e74696e67004850536d617274466f637573004f6e004850436f6e74726173 ,
        0x74004f6e0048504469676974616c466c617368004f6e00485053686172706e65 ,
        0x7373004c6f77004850536d6f6f7468696e67004f6e0048504a706567506e6750 ,
        0x6173737468726f75676800547275650048505265766572736542616e644f7264 ,
        0x6572466f724576656e5061676573005265766572736542616e644f7264657200 ,
        0x48616c66746f6e650048545f50415453495a455f44454641554c540048504854 ,
        0x444c4c4e616d650048504649473538610048504d48444c4c4e616d6500485046 ,
        0x494535386100485048504146696c7465720054727565004850416476616e6365 ,
        0x64436f6c6f7253657474696e6700547275650048504943435072696e74657246 ,
        0x616d696c7900353730305f36353030004850435244436f6d6d616e6400547275 ,
        0x6500485053656e64556e69744d656173757265436f6d6d616e64005452554500 ,
        0x4850506170657253697a655472656576696577506f707570004d657472696300 ,
        0x485053696d706c696669656455490054727565004850506f737465725072696e ,
        0x74696e674f7074696f6e5355490046616c736500485050686f746f466978004f ,
        0x46460048505363616c65546f50617065720046616c7365004850436f6e766572 ,
        0x7441504956657273696f6e4f7665727269646500330000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x9819000049555048120011000000000000000000000000000100000000000000 ,
        0x0000000000000000000000000000000001000100640001000100020002000000 ,
        0x01000000020000004c0065007400740065007200000000000000000000000000 ,
        0x0000000000000000000000000100ea0a6f080000ffffffffffffffffffffffff ,
        0x0100000006000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000001000000000000000100000000000000000000000000000000000000 ,
        0x00000000000000000000000020005b006e006f006e0065005d00000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x00000000000000000000000020005b006e006f006e0065005d00000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000003400000050000000000000000100000000000000 ,
        0xc0c0c00000000000c0c0c0000000000000000000000000000000000001000000 ,
        0x01000000640000000000000000000000000000000000803f0000000000000000 ,
        0x0000000000000000000000000000000000000000010000000000000000000000 ,
        0x0000000000000000000000000100000000000000000000000000000000000000 ,
        0x00000000000000004a004f0048004e0020002000430052004900530057004500 ,
        0x4c004c0000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x00000000010000000000000000000000010000000f0000000302000000000000 ,
        0x0f0000000302000000000000ffffffff00000000000000000f00000003020000 ,
        0x0f00000003020000000000000000000000000000000000003408000034080000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x000000000000000064000000010000004d006900630072006f0073006f006600 ,
        0x740020004f006600660069006300650020004100630063006500730073000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x000000000000000000000000000000004e006f006e0065000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000002000000 ,
        0xffffffff4d534143434553532e45584500000000000000000000000000000000 ,
        0x0100000001000000010000000100000001000000010000000100000001000000 ,
        0x0100000001000000010000000100000001000000010000000100000001000000 ,
        0x0100000001000000010000000100000001000000010000000100000001000000 ,
        0x010000000f000000030200000f000000030200000f000000030200000f000000 ,
        0x0302000000000000000000000000000000000000000000000000000000020010 ,
        0x000000000000000043003a005c00500072006f006700720061006d0020004600 ,
        0x69006c00650073005c004d006900630072006f0073006f006600740020004f00 ,
        0x660066006900630065005c004f0046004600490043004500310031005c004d00 ,
        0x53004100430043004500530053002e0045005800450000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000495041434452574453474154 ,
        0x434150491b3bab468734e84581d4df3813513b4b000000000000000000000000 ,
        0x0000000000699add8526f8458925ea39aa1078c8505042484145525000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x000000000000000000000000000000000000000000000000
    End
    PrtDevNames = Begin
        0x0800260044000100000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000048505f3139322e3136382e312e325f4d59383335313330544b00
    End
    Begin
        Begin Label
            BackStyle =0
        End
        Begin Rectangle
            SpecialEffect =3
            BackStyle =0
        End
        Begin CommandButton
            FontSize =8
            FontWeight =400
            ForeColor =-2147483630
            FontName ="MS Sans Serif"
        End
        Begin TextBox
            SpecialEffect =2
            OldBorderStyle =0
        End
        Begin ComboBox
            SpecialEffect =2
        End
        Begin Section
            Height =7500
            BackColor =14127360
            Name ="Detail"
            GUID = Begin
                0x0e897794f269464989a3d6c031e4245c
            End
            Begin
                Begin CommandButton
                    OverlapFlags =85
                    Left =5520
                    Top =6900
                    Width =726
                    Height =486
                    Name ="cmdClose"
                    Caption ="Command20"
                    OnClick ="[Event Procedure]"
                    PictureData = Begin
                        0x2800000010000000100000000100040000000000800000000000000000000000 ,
                        0x0000000000000000000000000000800000800000008080008000000080008000 ,
                        0x8080000080808000c0c0c0000000ff00c0c0c00000ffff00ff000000c0c0c000 ,
                        0xffff0000ffffff00dadad0dadadadadaadad00adadadadaddad030dadadadada ,
                        0xad0330adadadadad0033300000000adaa03330ff0dadadadd03300ff0adad4da ,
                        0xa03330ff0dad44add03330ff0ad44444a03330ff0d444444d03330ff0ad44444 ,
                        0xa0330fff0dad44add030ffff0adad4daa00fffff0dadadadd00000000adadada ,
                        0xadadadadadadadad0000000000000000
                    End
                    FontName ="Tahoma"
                    ObjectPalette = Begin
                        0x0003100000000000800000000080000080800000000080008000800000808000 ,
                        0x80808000c0c0c000ff000000c0c0c000ffff00000000ff00c0c0c00000ffff00 ,
                        0xffffff0000000000
                    End
                    ControlTipText ="Close Form"
                    GUID = Begin
                        0xf3e2f5843b781241a6f750a9a5019495
                    End
                End
                Begin Label
                    SpecialEffect =4
                    OldBorderStyle =1
                    BorderWidth =3
                    OverlapFlags =85
                    TextAlign =2
                    Left =60
                    Top =60
                    Width =4260
                    Height =330
                    FontSize =10
                    FontWeight =700
                    ForeColor =16777215
                    Name ="Label1"
                    Caption ="Online Enrollment Processing"
                    GUID = Begin
                        0xacf18bc4f15c5c498b7556fb39580144
                    End
                End
                Begin CommandButton
                    OverlapFlags =93
                    Left =120
                    Top =960
                    Width =1320
                    Height =420
                    TabIndex =1
                    Name ="cmdSubFileSelect"
                    Caption ="Select File"
                    OnClick ="[Event Procedure]"
                    FontName ="Tahoma"
                    GUID = Begin
                        0xba0aa8043a265d4a9f4e90dceb124776
                    End
                End
                Begin TextBox
                    OverlapFlags =95
                    Left =1500
                    Top =1140
                    Width =4680
                    TabIndex =2
                    Name ="txtMainFile"
                    FontName ="Tahoma"
                    GUID = Begin
                        0x59d24ecf4d6d814395c8f3b89256017e
                    End
                    Begin
                        Begin Label
                            OverlapFlags =93
                            Left =1500
                            Top =900
                            Width =2640
                            Height =240
                            ForeColor =16777215
                            Name ="lblSubscriber"
                            Caption ="Subscriber File To Process: "
                            FontName ="Tahoma"
                            GUID = Begin
                                0x7db10f778d0ca04fbbb1c88c1fef3431
                            End
                        End
                    End
                End
                Begin TextBox
                    OverlapFlags =95
                    Left =1500
                    Top =1620
                    Width =4680
                    TabIndex =3
                    Name ="txtDependentFile"
                    FontName ="Tahoma"
                    GUID = Begin
                        0x6eb73344a9695b499ad6c5c21b0c868b
                    End
                    Begin
                        Begin Label
                            OverlapFlags =95
                            Left =1500
                            Top =1380
                            Width =2640
                            Height =240
                            ForeColor =16777215
                            Name ="Label8"
                            Caption ="Dependent File To Process: "
                            FontName ="Tahoma"
                            GUID = Begin
                                0x98d0ecf02a389545af6c995ed3312055
                            End
                        End
                    End
                End
                Begin CommandButton
                    OverlapFlags =93
                    Left =120
                    Top =1440
                    Width =1320
                    Height =420
                    TabIndex =4
                    Name ="cmdDepFileSelect"
                    Caption ="Select File"
                    OnClick ="[Event Procedure]"
                    FontName ="Tahoma"
                    GUID = Begin
                        0x3d6a93431883e8408855e144d1a17c51
                    End
                End
                Begin Rectangle
                    OverlapFlags =247
                    Left =60
                    Top =840
                    Width =6240
                    Height =1140
                    Name ="Box4"
                    GUID = Begin
                        0xb5805b736e06ac4eb55865a5a5cdc6c6
                    End
                End
                Begin TextBox
                    Locked = NotDefault
                    OverlapFlags =93
                    TextAlign =2
                    Left =2760
                    Top =2580
                    Width =3420
                    Height =300
                    FontSize =10
                    FontWeight =700
                    TabIndex =5
                    Name ="txtStatus"
                    GUID = Begin
                        0x7516df56d137af48a2d3fda8cb3cc606
                    End
                End
                Begin CommandButton
                    OverlapFlags =93
                    Left =180
                    Top =2520
                    Width =2448
                    Height =420
                    TabIndex =6
                    Name ="cmdProcess"
                    Caption ="Process File"
                    OnClick ="[Event Procedure]"
                    FontName ="Tahoma"
                    GUID = Begin
                        0xea67db63a9239940b625b03131987023
                    End
                End
                Begin CommandButton
                    OverlapFlags =93
                    Left =180
                    Top =3180
                    Width =2448
                    Height =420
                    TabIndex =7
                    Name ="cmdPrintNewSubscr"
                    Caption ="Data Import Report"
                    OnClick ="[Event Procedure]"
                    FontName ="Tahoma"
                    GUID = Begin
                        0xc470dff63116af48b40378de6ee34ffb
                    End
                End
                Begin CommandButton
                    OverlapFlags =93
                    Left =180
                    Top =4500
                    Width =2448
                    Height =420
                    TabIndex =8
                    Name ="cmdAddToDB"
                    Caption ="Commit Data to Database"
                    OnClick ="[Event Procedure]"
                    FontName ="Tahoma"
                    GUID = Begin
                        0x9c6b460f9a8e5b4788afc1bf18e1a041
                    End
                End
                Begin Rectangle
                    OverlapFlags =247
                    Left =60
                    Top =2460
                    Width =6240
                    Height =540
                    Name ="Box18"
                    OnClick ="[Event Procedure]"
                    GUID = Begin
                        0x6e46cb2355081649a4fbf663fefbda6b
                    End
                End
                Begin Rectangle
                    OverlapFlags =223
                    Left =60
                    Top =3060
                    Width =6240
                    Height =1080
                    Name ="Box19"
                    GUID = Begin
                        0xe3888ac015432a4e807ac0d5ef25c98f
                    End
                End
                Begin Rectangle
                    OverlapFlags =223
                    Left =60
                    Top =4380
                    Width =6240
                    Height =600
                    Name ="Box20"
                    GUID = Begin
                        0xbb4218e306b28c4b9e24cdffd971f82a
                    End
                End
                Begin TextBox
                    Locked = NotDefault
                    OverlapFlags =215
                    TextAlign =2
                    Left =2760
                    Top =4560
                    Width =3420
                    Height =300
                    FontSize =10
                    FontWeight =700
                    TabIndex =9
                    Name ="txtStatusDataImport"
                    GUID = Begin
                        0x4662a3ef6f89244ea4b47e9fd27a4e7f
                    End
                End
                Begin CommandButton
                    OverlapFlags =93
                    Left =180
                    Top =5280
                    Width =2448
                    Height =420
                    TabIndex =10
                    Name ="cmdPrintCards"
                    Caption ="Print Cards"
                    OnClick ="[Event Procedure]"
                    FontName ="Tahoma"
                    GUID = Begin
                        0x375b3035174d8741ab1113f345d6a717
                    End
                End
                Begin Rectangle
                    OverlapFlags =215
                    Left =60
                    Top =5160
                    Width =6240
                    Height =600
                    Name ="Box25"
                    GUID = Begin
                        0x9f30720c58fd6548bd550ecebe9d374b
                    End
                End
                Begin CommandButton
                    OverlapFlags =93
                    Left =180
                    Top =6060
                    Width =2448
                    Height =420
                    TabIndex =11
                    Name ="cmdGroupLinkFile"
                    Caption ="Create Group Link File"
                    OnClick ="[Event Procedure]"
                    FontName ="Tahoma"
                    GUID = Begin
                        0xe1ac43804dac9d48a5ea7fd936943f03
                    End
                End
                Begin Rectangle
                    OverlapFlags =215
                    Left =60
                    Top =5940
                    Width =6240
                    Height =600
                    Name ="Box28"
                    GUID = Begin
                        0x7e5db36e99171f48994a046141bc2089
                    End
                End
                Begin CommandButton
                    OverlapFlags =215
                    Left =180
                    Top =3660
                    Width =2448
                    Height =420
                    TabIndex =12
                    Name ="cmdPrintMissingRates"
                    Caption ="Missing Rates Report"
                    OnClick ="[Event Procedure]"
                    FontName ="Tahoma"
                    GUID = Begin
                        0x4608c1314cf42c41818c66847053e5c9
                    End
                End
            End
        End
    End
End
CodeBehindForm
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Option Compare Database
Option Explicit
Function AddToDB() As Boolean
  ' Comments   :  takes all eligible records
  '               in tblEDI_App_Subscr and commits them
  '               to the database
  ' Parameters :
  ' Returns    :  a boolean value to indicate whether
  '               the process succeeded or failed
  ' Created    : 2/28/2004 1:05:53 PM Admin
  ' Modified   :
  '
  ' --------------------------------------------------------
  On Error GoTo HandleError
        
      Dim fResult As Boolean
      Dim SUBSCRIBER As clsSubscr
      Dim db As DAO.Database
      Dim rst As DAO.Recordset
      Dim strSQL As String
      Dim strGroupID As String
      Dim strSSN As String
      Dim strEIMBRID As String
      
      Dim lngRetval As Long

      lngRetval = MsgBox( _
        "You are about to commit data to the database, are you really ready to do that?", _
        vbYesNo + vbExclamation + vbDefaultButton1, _
        "Warning - Database Commit")

      Select Case lngRetval
      
      Case vbYes
        Set db = CurrentDb()
        fResult = False
        
        DoCmd.Hourglass True
        DoCmd.SetWarnings False
        
        'process deleted subscribers
        'move deleted subscribers from tblEDI_App_Subscr_delete to tblSubscr_delete
        DoCmd.OpenQuery "qappOnlineEnrollment_Sub_delete_db"
        'delete the subscribers and the dependents from the production tables
        strSQL = "SELECT tblEDI_App_Subscr_delete.SubSSN,tblEDI_App_Subscr_delete.SubGroupID " & _
                "FROM tblEDI_App_Subscr_delete;"
        Set rst = db.OpenRecordset(strSQL, dbOpenSnapshot)
        
        Do Until rst.EOF
            Set SUBSCRIBER = New clsSubscr
            strSSN = rst("SubSSN")
            strGroupID = rst("SubGroupID")
            If SUBSCRIBER.LoadFromSSN(strSSN, strGroupID) Then
                If SUBSCRIBER.GROUPid <> "BEXHM" Then
                    SUBSCRIBER.DeleteSub (strSSN)
                ElseIf SUBSCRIBER.GROUPid = "BEXHM" Then
                    SUBSCRIBER.DeleteSub_Bexar (strSSN)
                End If
            End If
            rst.MoveNext
            Set SUBSCRIBER = Nothing
        Loop
        
        Set rst = Nothing
        
        'process the added and changed subscribers
        Set rst = db.OpenRecordset("tblEDI_App_Subscr", dbOpenDynaset)
        Do Until rst.EOF
        Set SUBSCRIBER = New clsSubscr
        'load the object
         With SUBSCRIBER
          .SSN = rst("SubSSN")
          .EIMBRID = rst("EIMBRID")
          .SubID = rst("SubID")
          .Status = rst("SubStatus")
          .GROUPid = rst("SubGroupID")
          .PlanID = rst("PlanID")
          .CoverID = rst("CoverID")
          .RateID = rst("RateID")
          .LUName = rst("Sub_LUName")
          .LastName = rst("SubLastName")
          .FirstName = rst("SubFirstName")
          .MiddleInitial = rst("SubMiddleName")
          .Street1 = rst("SubStreet1")
          .Street2 = rst("SubStreet2")
          .CITY = rst("SubCity")
          .STATE = rst("SubState")
          .ZIP = rst("SubZip")
          .PhoneWork = rst("SubPhoneWork")
          .PhoneHome = rst("SubPhoneHome")
          .DOB = rst("SubDOB")
          .NoOfDeps = rst("SubNoDepent")
          .Gender = rst("SubGender")
          .Age = rst("SubAge")
          .MaritalStatus = rst("SubMaritalStatus")
          .EffectiveDate = rst("SubEffDate")
          .PreexistingDate = rst("PreexistingDate")
          .CardPrt = 0
          .CardPrtDate = Null
          .Notes = rst("SubNotes")
          .TransactionType = rst("TransactionType")
          .DateCreated = rst("DateCreated")
          .DateUpdated = rst("DateUpdated")
          .DateDeleted = rst("DateDeleted")
        End With
        
        strGroupID = SUBSCRIBER.GROUPid
        strSSN = SUBSCRIBER.SSN
        strEIMBRID = rst("EIMBRID")
        
        
        '1. Exists = Yes (in tblSubscr); T-type = Changed
        If SUBSCRIBER.CheckSSN(strSSN) = "Std_Sub" And SUBSCRIBER.TransactionType = "Changed" Then
          'Subscriber is in tblSubscr and t-type = changed
          'run the update procedure
          'from the Subscriber object
          Call SUBSCRIBER.StoreSub("Update", strSSN, strGroupID)
          'delete the corresponding dependents
          If DelDeps(strSSN, strGroupID) Then
              'Nothing
          Else
              MsgBox "An error occurred when updating dependents."
          End If
          
          'add the corresponding dependents if any
          If AddDeps(strSSN, strGroupID) Then
              'Nothing
          Else
              MsgBox "An error occurred when updating dependents."
          End If
          fResult = True
          
        '1a.  Exists in tblSubscr_Bexar (BEXHM); T-type = Changed
        '
        ElseIf SUBSCRIBER.CheckSSN(strSSN) = "Bexar_Sub" And SUBSCRIBER.GROUPid = "BEXHM" And SUBSCRIBER.TransactionType = "Changed" Then
          'Subscriber is in tblSubscr_Bexar and T-type = changed
          'run the update procedure
          'from the Subscriber object
          Call SUBSCRIBER.StoreSub("Update", strSSN, strGroupID)
          'delete the corresponding dependents
          If DelDeps(strSSN, strGroupID) Then
              'Nothing
          Else
              MsgBox "An error occurred when updating dependents."
          End If
          
          'add the corresponding dependents if any
          If AddDeps(strSSN, strGroupID) Then
              'Nothing
          Else
              MsgBox "An error occurred when updating dependents."
          End If
          fResult = True
          
        '1b.  Exists in tblSubscr_Bexar (BEXHM); GroupID in tblEDI_App_Subscr is not 'BEXHM'; T-type = Changed
        '     this is a special instance
        '     the Subscriber is moving from BEXHM, which is in a separate table, to another group, which
        '     is in the production Subscriber table (tblSubscr)
        ElseIf SUBSCRIBER.CheckSSN(strSSN) = "Bexar_Sub" And SUBSCRIBER.GROUPid <> "BEXHM" And SUBSCRIBER.TransactionType = "Changed" Then
          'Subscriber is in tblSubscr_Bexar
          'record in tblEDI_App_Subscr is not GroupID = 'BEXHM'
          '
          
          'drop the sub and deps from tblSubscr_Bexar and tblDependent_Bexar
          Call SUBSCRIBER.DeleteSub_Bexar(strSSN)
          
          'delete the correcponding dependents
          If DelDeps(strSSN, strGroupID) Then
              'Nothing
          Else
              MsgBox "An error occurred when updating dependents."
          End If
          
          '
          'add the sub to the new Group
           Call SUBSCRIBER.StoreSub("Add", strSSN, strGroupID)
          '
          '
          
          'add the corresponding dependents if any
          If AddDeps(strSSN, strGroupID) Then
              'Nothing
          Else
              MsgBox "An error occurred when updating dependents."
          End If
          fResult = True
          
        
        '2. Exists = No; T-type = Added
        ElseIf SUBSCRIBER.CheckSSN(strSSN) = "Not_Found" And SUBSCRIBER.TransactionType = "Added" Then
          'Subscriber is not is the database and t-type = added
          'run the add procedure
          'from the Subscriber object
          Call SUBSCRIBER.StoreSub("Add", strSSN, strGroupID)
          'delete the correcponding dependents
          If DelDeps(strSSN, strGroupID) Then
              'Nothing
          Else
              MsgBox "An error occurred when updating dependents."
          End If
          
          'add the corresponding dependents if any
          If AddDeps(strSSN, strGroupID) Then
              'Nothing
          Else
              MsgBox "An error occurred when updating dependents."
          End If
          fResult = True
          
        '3. Exists = Yes; T-type = Added
        ElseIf SUBSCRIBER.CheckSSN(strSSN) = "Std_Sub" And SUBSCRIBER.TransactionType = "Added" Then
          'Subscriber is in the database and t-type = Added;
          'this is probably a mistake, but this code is here
          'to catch the mistake;
          'treat this condition as an update;
          'run the update procedure
          'from the subscriber object
          Call SUBSCRIBER.StoreSub("Update", strSSN, strGroupID)
          'delete the corresponding dependents
          If DelDeps(strSSN, strGroupID) Then
              'Nothing
          Else
              MsgBox "An error occurred when updating dependents."
          End If
          
          'add the corresponding dependents if any
          If AddDeps(strSSN, strGroupID) Then
              'Nothing
          Else
              MsgBox "An error occurred when updating dependents."
          End If
          fResult = True
          
        End If
        
        rst.MoveNext
        Set SUBSCRIBER = Nothing
        Loop
                
        Set rst = Nothing
        Set db = Nothing
        
        DoCmd.SetWarnings True
        DoCmd.Hourglass False
        fResult = True
        AddToDB = fResult
      
      Case vbNo
       GoTo ExitProc
      End Select
    
ExitProc:
  Exit Function

HandleError:
  If Err.Number = 94 Then
    Resume Next
  Else
    fResult = False
    AddToDB = fResult
    MsgBox "Error: " & Err.DESCRIPTION & _
        " (" & Err.Number & ")", vbExclamation
    GoTo ExitProc
  End If


End Function
Function AddDeps(strSSN As String, strGroupID As String) As Boolean

  ' Comments   :
  ' Parameters :
  ' Created    : 02/06/2009
  ' Modified   :
  '
  ' --------------------------------------------------------
  On Error GoTo HandleError
        
        Dim strSQL As String
        Dim fResult As Boolean
        fResult = False
        
        If strGroupID <> "BEXHM" Then
            strSQL = "INSERT INTO tblDependent (DepSSN, EIMBRID, DepSubID, DepFirstName, DepMiddleName, " & _
                 "DepLastName, DepDOB, DepAge, DepRelationship, DepGender, DepEffDate, PreexistingDate) " & _
                 "SELECT DepSSN, EIMBRID, DepSubID, DepFirstName, " & _
                 "DepMiddleName, DepLastName, DepDOB, DepAge, DepRelationship, DepGender, DepEffDate, PreexistingDate " & _
                 "FROM tblEDI_App_Dep " & _
                 "WHERE (DepSubID = '" & strSSN & "')"
            ExecuteSQL strSQL
        ElseIf strGroupID = "BEXHM" Then
            strSQL = "INSERT INTO tblDependent_Bexar (DepSSN, EIMBRID, DepSubID, DepFirstName, DepMiddleName, " & _
                 "DepLastName, DepDOB, DepAge, DepRelationship, DepGender, DepEffDate) " & _
                 "SELECT DepSSN, EIMBRID, DepSubID, DepFirstName, " & _
                 "DepMiddleName, DepLastName, DepDOB, DepAge, DepRelationship, DepGender, DepEffDate " & _
                 "FROM tblEDI_App_Dep " & _
                 "WHERE (DepSubID = '" & strSSN & "')"
            ExecuteSQL strSQL
        End If
        
        fResult = True
        AddDeps = fResult
        
ExitProc:
  Exit Function

HandleError:
  MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation
     fResult = False
     AddDeps = fResult
  Resume ExitProc
       
End Function
Function DelDeps(strSSN As String, strGroupID As String) As Boolean

' Comments   :
  ' Parameters :
  ' Created    : 02/06/2009
  ' Modified   :
  '
  ' --------------------------------------------------------
  On Error GoTo HandleError

        Dim fResult As Boolean
        Dim strSQL As String
        
        fResult = False
        If strGroupID <> "BEXHM" Then
            strSQL = "DELETE FROM tblDependent WHERE (DepSubID = '" & strSSN & "')"
            ExecuteSQL strSQL
        ElseIf strGroupID = "BEXHM" Then
            strSQL = "DELETE FROM tblDependent_Bexar WHERE (DepSubID = '" & strSSN & "')"
            ExecuteSQL strSQL
        End If
        
        fResult = True
        DelDeps = fResult
        
ExitProc:
  Exit Function

HandleError:
  MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation
     fResult = False
     DelDeps = fResult
  Resume ExitProc

End Function
Private Sub cmdAddToDB_Click()
  ' Comments   :
  ' Parameters :
  ' Created    : 02/06/2009
  ' Modified   :
  '
  ' --------------------------------------------------------
  On Error GoTo HandleError

    Dim fCheck As Boolean
            
    fCheck = AddToDB()
    
    If fCheck = True Then
        Me.txtStatusDataImport = "Database Commit Complete"
    Else
        Me.txtStatusDataImport = "Database Commit Errors!"
    End If

ExitProc:
  Exit Sub

HandleError:
  MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation
  Resume ExitProc
  
End Sub
Private Sub cmdDepFileSelect_Click()

    On Error GoTo Err_cmdDepFileSelect_Click

    Dim strFileName As String
    Dim strFile As String
    Dim intProc As Integer

    strFile = GetOpenFile_TSB("C:\My Documents", "Select Dependent Import File")
  
    If Not IsNull(strFile) Then
        Me.txtDependentFile = strFile
        strFileName = strFile
        intProc = 1
    End If

Exit_cmdDepFileSelect_Click:

    Me.cmdDepFileSelect.SetFocus
    Exit Sub

Err_cmdDepFileSelect_Click:
    MsgBox Err.DESCRIPTION
    Resume Exit_cmdDepFileSelect_Click

End Sub
Function GetGLPlanID(SUBssn As String) As Integer
  ' Comments   :  Retrieves the old PlanID
  '               for the subscriber who
  '               is changing plans
  ' Parameters :
  ' Created    : 03/31/2009
  ' Modified   :
  '
  ' --------------------------------------------------------
      
    On Error GoTo PROC_ERR
    
    Dim dbs As DAO.Database
    Dim rst As DAO.Recordset
    Dim strSQL As String
        
    Set dbs = CurrentDb()
    
    strSQL = "SELECT AA_GroupLink_Subscribers.AA_SSN, AA_GroupLink_Subscribers.PlanID FROM " & _
             "AA_GroupLink_Subscribers WHERE (((AA_GroupLink_Subscribers.AA_SSN)='" & SUBssn & "'));"

    Set rst = dbs.OpenRecordset(strSQL)
    If rst.RecordCount > 0 Then
        GetGLPlanID = rst.Fields("PlanID")
    Else
        GetGLPlanID = 0
    End If

    rst.Close
    Set rst = Nothing
    dbs.Close
    Set dbs = Nothing
    
PROC_EXIT:
    Exit Function

PROC_ERR:
    MsgBox Err.DESCRIPTION
    Resume PROC_EXIT
    
  
End Function
Function SetDates(pDate As Date) As Integer

 Select Case Month(pDate)
  Case 1, 3, 5, 7, 8, 10, 12
   SetDates = 31
  Case 4, 6, 9, 11
   SetDates = 30
  Case 2
   If (Year(pDate) Mod 4) = 0 Then
    SetDates = 29
   Else
    SetDates = 28
   End If
 End Select
 
 End Function
Sub PlanChanges()
  ' Comments   :  Creates all of the necessary transactions
  '               to move a subscriber and dependents
  '               from one plan to another
  ' Parameters :
  ' Created    : 03/31/2009
  ' Modified   :
  '
  ' --------------------------------------------------------
  
    
    On Error GoTo PROC_ERR
    
    Dim dbs As DAO.Database
    Dim rst As DAO.Recordset
    Dim strSQL As String
    Dim strSubSSN As String
    Dim strGLPlanID As String
    Dim strQCDPlanID As String
    Dim intConvCode As Integer
    Dim dteTermDate As Date
    Dim strTermDate As String
    Dim dteEffDate As Date
    Dim strEffDate As String
    
    Set dbs = CurrentDb()
    
    strSQL = "SELECT tblEDI_App_Subscr.SubSSN, tblEDI_App_Subscr.PlanID, tblEDI_App_Subscr.SubEffDate " & _
                "FROM tblGrp INNER JOIN (tblEDI_App_Subscr " & _
                "LEFT JOIN AA_GroupLink_Subscribers ON (tblEDI_App_Subscr.PlanID = AA_GroupLink_Subscribers.PlanID) " & _
                "AND (tblEDI_App_Subscr.SubSSN = AA_GroupLink_Subscribers.AA_SSN)) ON tblGrp.GroupID = " & _
                "tblEDI_App_Subscr.SubGroupID " & _
                "WHERE (((AA_GroupLink_Subscribers.AA_SSN) Is Null) " & _
                "AND ((tblGrp.GroupType)=4) " & _
                "AND ((tblEDI_App_Subscr.TransactionType)='Changed')) " & _
                "OR (((AA_GroupLink_Subscribers.PlanID) Is Null) " & _
                "AND ((tblGrp.GroupType)=4) " & _
                "AND ((tblEDI_App_Subscr.TransactionType)='Changed'));"
    Set rst = dbs.OpenRecordset(strSQL)
    If rst.RecordCount > 0 Then
       
    Do Until rst.EOF
     strSubSSN = rst.Fields("SubSSN")
     
     strGLPlanID = CStr(GetGLPlanID(rst.Fields("SubSSN")))
     strQCDPlanID = CStr(rst.Fields("PlanID"))
     intConvCode = CInt(strGLPlanID & strQCDPlanID)
     
     If Not IsNull(rst.Fields("SubEffDate")) Then
        dteEffDate = rst.Fields("SubEffDate")
        strEffDate = Format(Month(dteEffDate), "00") & Format(Day(dteEffDate), "00") & Year(dteEffDate)
        dteTermDate = PriorEOM(rst.Fields("SubEffDate"))
        strTermDate = Format(Month(dteTermDate), "00") & Format(Day(dteTermDate), "00") & Year(dteTermDate)
     Else
        'get the EffDate from the first day of the current month
        dteEffDate = MonthFirstDay(Month(date), Year(date))
        strEffDate = Format(Month(dteEffDate), "00") & Format(Day(dteEffDate), "00") & Year(dteEffDate)
        'get the coverage terminations date from the last day of the month prior to the effective date
        dteTermDate = PriorEOM(dteEffDate)
        strTermDate = Format(Month(dteTermDate), "00") & Format(Day(dteTermDate), "00") & Year(dteTermDate)
     End If
     
     ' create the move plan transactions
     Select Case intConvCode

        Case 12: ' RED to WHT
            ExecuteSQL "uspRED2WHT '" & strSubSSN & "00', '" & strEffDate & "', '" & strTermDate & "'"
        Case 13: ' RED to BLU
            ExecuteSQL "uspRED2BLU '" & strSubSSN & "00', '" & strEffDate & "', '" & strTermDate & "'"
        Case 14: ' RED to RPL
            ExecuteSQL "uspRED2RPL '" & strSubSSN & "00', '" & strEffDate & "', '" & strTermDate & "'"
        Case 21: ' WHT to RED
            ExecuteSQL "uspWHT2RED '" & strSubSSN & "00', '" & strEffDate & "', '" & strTermDate & "'"
        Case 23: ' WHT to BLU
            ExecuteSQL "uspWHT2BLU '" & strSubSSN & "00', '" & strEffDate & "', '" & strTermDate & "'"
        Case 24: ' WHT to RPL
            ExecuteSQL "uspWHT2RPL '" & strSubSSN & "00', '" & strEffDate & "', '" & strTermDate & "'"
        Case 31: ' BLU to RED
            ExecuteSQL "uspBLU2RED '" & strSubSSN & "00', '" & strEffDate & "', '" & strTermDate & "'"
        Case 32: ' BLU to WHT
            ExecuteSQL "uspBLU2WHT '" & strSubSSN & "00', '" & strEffDate & "', '" & strTermDate & "'"
        Case 34: ' BLU to RPL
            ExecuteSQL "uspBLU2RPL '" & strSubSSN & "00', '" & strEffDate & "', '" & strTermDate & "'"
        Case 41: ' RPL to RED
            ExecuteSQL "uspRPL2RED '" & strSubSSN & "00', '" & strEffDate & "', '" & strTermDate & "'"
        Case 42: ' RPL to WHT
            ExecuteSQL "uspRPL2WHT '" & strSubSSN & "00', '" & strEffDate & "', '" & strTermDate & "'"
        Case 43: ' RPL to BLU
            ExecuteSQL "uspRPL2BLU '" & strSubSSN & "00', '" & strEffDate & "', '" & strTermDate & "'"
        Case Else:
            'nothing
     End Select

    rst.MoveNext
    Loop
    End If

    rst.Close
    Set rst = Nothing
    dbs.Close
    Set dbs = Nothing
  
PROC_EXIT:
    Exit Sub

PROC_ERR:
    MsgBox Err.DESCRIPTION
    Resume PROC_EXIT

End Sub
Sub CorrectSubIDs()

    On Error GoTo PROC_ERR
    
    Dim dbs As DAO.Database
    Dim rst As DAO.Recordset
    Dim strSQL As String
    Dim strSubID As String
    Dim strMbrID As String
        
    Set dbs = CurrentDb()
    
    strSQL = "SELECT DISTINCT tmpExportAllAmerican.EIMBRID, tmpExportAllAmerican.EISBRID " & _
                "FROM tmpExportAllAmerican " & _
                "WHERE (((tmpExportAllAmerican.EISBRID)<>[EIMBRID]) " & _
                "AND ((tmpExportAllAmerican.EIRECID)='P'));"
    Set rst = dbs.OpenRecordset(strSQL, dbOpenSnapshot)
    If rst.RecordCount > 0 Then
        Do Until rst.EOF
            ExecuteSQL "uspCorrectSubIDs" & " '" & rst.Fields("EISBRID") & "', '" & rst.Fields("EIMBRID") & "'"
        rst.MoveNext
        Loop
    End If
    
    Set rst = Nothing
    Set dbs = Nothing
    
PROC_EXIT:
    Exit Sub

PROC_ERR:
    MsgBox Err.DESCRIPTION
    Resume PROC_EXIT
    
    
End Sub
Sub AssignEIMBRID()
  
  ' Comments   :  Assigns MemberID's to
  '               subscribers and dependents
  '               who do not have them
  ' Parameters :
  ' Created    : 04/23/2009
  ' Modified   :
  '
  ' --------------------------------------------------------
    
    On Error GoTo ErrorHandler
    
    Dim dbs As DAO.Database
    Dim rst As DAO.Recordset
    Dim rst2 As DAO.Recordset
    Dim strSQL As String
    Dim strSQL2 As String
    Dim strID As String
    Dim intTID As Integer
    Dim strSSN As String
    Dim intSuffix As Integer
    Dim strSuffix As String
    Dim I As Integer
    
    Set dbs = CurrentDb()

    'assign MemberID's
    '
    '04-1
    'first I need to identify new WHITE and RED PLUS subscribers;
    'they will have no MemberID and two records for each person;
    'assign them a MemberID;
    'identify if they have dependents;
    'if they do have dependents, assign sequential MemberID numbers to them
    strSQL = "SELECT DISTINCT tmpExportAllAmerican.EIRECID, " & _
             "IIf(Left(RTrim(LTrim([EISBRID])),9)<>[EISSN],[EISSN]," & _
             "Left(RTrim(LTrim([EISBRID])),9)) AS SubSSN, " & _
             "tmpExportAllAmerican.EIMBRID, " & _
             "tmpExportAllAmerican.EISBRID, " & _
             "tmpExportAllAmerican.EINAMF, " & _
             "tmpExportAllAmerican.EINAML, " & _
             "tmpExportAllAmerican.EINMPLAN, " & _
             "tmpExportAllAmerican.TID " & _
             "FROM tmpExportAllAmerican " & _
             "WHERE (((tmpExportAllAmerican.EIRECID)='P') " & _
             "AND ((tmpExportAllAmerican.EIMBRID)='' " & _
             "Or (tmpExportAllAmerican.EIMBRID) Is Null) " & _
             "AND ((tmpExportAllAmerican.EINMPLAN)='QCDWHT-MNL' Or " & _
             "(tmpExportAllAmerican.EINMPLAN)='QCDWHT-QCD' Or " & _
             "(tmpExportAllAmerican.EINMPLAN)='QCDRPL-MNL' Or " & _
             "(tmpExportAllAmerican.EINMPLAN)='QCDRPL-QCD'));"
    
    Set rst = dbs.OpenRecordset(strSQL, dbOpenDynaset, dbSeeChanges)
    If rst.RecordCount > 0 Then
        'assign the MemberID from the SubscriberID
        'to primary subscriber
        Do Until rst.EOF
            With rst
            
                strID = rst.Fields("EISBRID")
                
                'update the EIMBRID on tblSubscr
                ExecuteSQL "uspMbrID_Subscr '" & rst.Fields("SubSSN") & "', '" & rst.Fields("EISBRID") & "'"
                                
                'update the EIMBRID on tmpExportAllAmerican
                For I = 1 To 2
                    ExecuteSQL "uspMbrID " & rst.Fields("TID") & ", '" & rst.Fields("EISBRID") & "'"
                    rst.MoveNext
                Next I
                               
                'now process the subscriber's dependents
                strSQL2 = "SELECT tmpExportAllAmerican.EIRECID, tmpExportAllAmerican.EIMBRID, tmpExportAllAmerican.EISBRID, " & _
                        "tmpExportAllAmerican.EISSN, tmpExportAllAmerican.EINAML, tmpExportAllAmerican.EINAMF, " & _
                        "tmpExportAllAmerican.EIGRPID, tmpExportAllAmerican.EINMPLAN, tmpExportAllAmerican.TID, " & _
                        "CDate(Mid([EIDTBR],1,2) & '/' & Mid([EIDTBR],3,2) & '/' & Mid([EIDTBR],5,4)) AS DOB, " & _
                        "tmpExportAllAmerican.DepID " & _
                        "FROM tmpExportAllAmerican " & _
                        "WHERE (((tmpExportAllAmerican.EIRECID)='M') " & _
                        "AND ((tmpExportAllAmerican.EISBRID)='" & strID & "') " & _
                        "AND ((tmpExportAllAmerican.EINMPLAN)='QCDWHT-MNL' Or (tmpExportAllAmerican.EINMPLAN)='QCDWHT-QCD' Or " & _
                        "(tmpExportAllAmerican.EINMPLAN)='QCDRPL-MNL' Or (tmpExportAllAmerican.EINMPLAN)='QCDRPL-QCD')) " & _
                        "ORDER BY tmpExportAllAmerican.EISBRID, tmpExportAllAmerican.EIRECID DESC, " & _
                        "CDate(Mid([EIDTBR],1,2) & '/' & Mid([EIDTBR],3,2) & '/' & Mid([EIDTBR],5,4)), " & _
                        "tmpExportAllAmerican.EINAML, tmpExportAllAmerican.EINAMF; "
                        
                Set rst2 = dbs.OpenRecordset(strSQL2, dbOpenDynaset, dbSeeChanges)
                
                intSuffix = 1
                
                If rst2.RecordCount > 0 Then
                    Do Until rst2.EOF
                       
                       If intSuffix < 10 Then
                          strSuffix = "0" & CStr(intSuffix)
                       Else
                          strSuffix = CStr(intSuffix)
                       End If
                       
                       'update the dependent's EIBMRID on tblDependent
                       ExecuteSQL "uspMbrID_Dependent " & rst2.Fields("DepID") & ", '" & Mid(rst2.Fields("EISBRID"), 1, 9) & strSuffix & "'"
                            
                       'update the dependent's EIMBRID on tmpExportAllAmerican
                       For I = 1 To 2
                          ExecuteSQL "uspMbrID " & rst2.Fields("TID") & ", '" & Mid(rst2.Fields("EISBRID"), 1, 9) & strSuffix & "'"
                          rst2.MoveNext
                       Next I
                            
                    intSuffix = intSuffix + 1
                    Loop
                End If
                
            End With
        Loop
    End If
    
    
    '04-2
    'second need to identify new RED and BLUE subscribers
    'they will have no MemberID and only one record for each person;
    'assign them a MemberID;
    'identify if they have dependents;
    'if they do have dependents, assigned sequential MemberID numbers to dependents
    strSQL = "SELECT DISTINCT tmpExportAllAmerican.EIRECID, " & _
             "IIf(Left(RTrim(LTrim([EISBRID])),9)<>[EISSN],[EISSN]," & _
             "Left(RTrim(LTrim([EISBRID])),9)) AS SubSSN, " & _
             "tmpExportAllAmerican.EIMBRID, " & _
             "tmpExportAllAmerican.EISBRID, tmpExportAllAmerican.EINAMF,  " & _
             "tmpExportAllAmerican.EINAML, tmpExportAllAmerican.EIGRPID, " & _
             "tmpExportAllAmerican.EINMPLAN,  tmpExportAllAmerican.TID " & _
             "FROM tmpExportAllAmerican  " & _
             "WHERE (((tmpExportAllAmerican.EIRECID)='P')  " & _
             "AND ((tmpExportAllAmerican.EIMBRID)='' Or (tmpExportAllAmerican.EIMBRID) Is Null)  " & _
             "AND ((tmpExportAllAmerican.EINMPLAN)='QCDRED-QCD' " & _
             "Or (tmpExportAllAmerican.EINMPLAN)='QCDBLU-MNL'))"
    
    Set rst = dbs.OpenRecordset(strSQL, dbOpenSnapshot)
    
    If rst.RecordCount > 0 Then
        'assign the MemberID based upon the SubscriberID
        'to primary subscriber
        Do Until rst.EOF
            With rst
            
                strID = rst.Fields("EISBRID")
                        
                'update the EIMBRID on tblSubscr
                ExecuteSQL "uspMbrID_Subscr '" & rst.Fields("SubSSN") & "', '" & rst.Fields("EISBRID") & "'"
                
                'update the EIMBRID on tmpExportAllAmerican
                ExecuteSQL "uspMbrID " & rst.Fields("TID") & ", '" & rst.Fields("EISBRID") & "'"
                 
                'now process the subscriber's dependents
                strSQL2 = "SELECT tmpExportAllAmerican.EIRECID, tmpExportAllAmerican.EIMBRID, tmpExportAllAmerican.EISBRID, " & _
                        "tmpExportAllAmerican.EISSN, tmpExportAllAmerican.EINAML, tmpExportAllAmerican.EINAMF, " & _
                        "tmpExportAllAmerican.EIGRPID, tmpExportAllAmerican.EINMPLAN, tmpExportAllAmerican.TID, CDate(Mid(" & _
                        "[EIDTBR],1,2) & '/' & Mid([EIDTBR],3,2) & '/' & Mid([EIDTBR],5,4)) AS DOB, " & _
                        "tmpExportAllAmerican.DepID " & _
                        "FROM tmpExportAllAmerican " & _
                        "WHERE (((tmpExportAllAmerican.EIRECID)='M') " & _
                        "AND ((tmpExportAllAmerican.EISBRID)='" & strID & "') " & _
                        "AND ((tmpExportAllAmerican.EINMPLAN)='QCDRED-QCD' Or (tmpExportAllAmerican.EINMPLAN)='QCDBLU-MNL')) " & _
                        "ORDER BY tmpExportAllAmerican.EISBRID, tmpExportAllAmerican.EIRECID DESC, " & _
                        "CDate(Mid([EIDTBR],1,2) & '/' & Mid([EIDTBR],3,2) & '/' & Mid([EIDTBR],5,4)), " & _
                        "tmpExportAllAmerican.EINAML, tmpExportAllAmerican.EINAMF; "
                        
                Set rst2 = dbs.OpenRecordset(strSQL2, dbOpenSnapshot)
                
                intSuffix = 1
                If rst2.RecordCount > 0 Then
                                        
                    Do Until rst2.EOF
                       If intSuffix < 10 Then
                          strSuffix = "0" & CStr(intSuffix)
                       Else
                          strSuffix = CStr(intSuffix)
                       End If
                       
                       'update the dependent's EIBMRID on tblDependent
                       ExecuteSQL "uspMbrID_Dependent " & rst2.Fields("DepID") & ", '" & Mid(rst2.Fields("EISBRID"), 1, 9) & strSuffix & "'"
                       
                       'update the dependent's EIMBRID on tmpExportAllAmerican
                       ExecuteSQL "uspMbrID " & rst2.Fields("TID") & ", '" & Mid(rst2.Fields("EISBRID"), 1, 9) & strSuffix & "'"
                       
                       rst2.MoveNext
                       intSuffix = intSuffix + 1
                    Loop
                End If
            End With
            rst.MoveNext
        Loop
    End If
      
    '04-3
    'third need to identify existing WHITE and RED PLUS subscribers;
    'they will have a MemberID and two records for each person;
    'do not assign them a MemberID - they already have one;
    'identify if they have dependents who do not have MemberID's;
    'if they do have dependents without MemberID's,
    'assigned sequential MemberID numbers to them;
    'the suffixes for these MemberID numbers must pick
    'up after the last assigned MemberID number
    strSQL = "SELECT DISTINCT tmpExportAllAmerican.EIRECID, tmpExportAllAmerican.EIMBRID, " & _
                "tmpExportAllAmerican.EISBRID, tmpExportAllAmerican.EINAMF, tmpExportAllAmerican.EINAML, " & _
                "tmpExportAllAmerican.EINMPLAN " & _
                "FROM tmpExportAllAmerican " & _
                "WHERE (((tmpExportAllAmerican.EIRECID)='P') " & _
                "AND ((tmpExportAllAmerican.EINMPLAN)='QCDWHT-MNL' " & _
                "Or (tmpExportAllAmerican.EINMPLAN)='QCDWHT-QCD' " & _
                "Or (tmpExportAllAmerican.EINMPLAN)='QCDRPL-MNL' " & _
                "Or (tmpExportAllAmerican.EINMPLAN)='QCDRPL-QCD'));"
    
    Set rst = dbs.OpenRecordset(strSQL, dbOpenDynaset, dbSeeChanges)
    If rst.RecordCount > 0 Then
        
        Do Until rst.EOF
            With rst
            
                strID = rst.Fields("EISBRID")
                
                'now process the subscriber's dependents
                strSQL2 = "SELECT tmpExportAllAmerican.EIRECID, tmpExportAllAmerican.EIMBRID, tmpExportAllAmerican.EISBRID, " & _
                        "tmpExportAllAmerican.EISSN, tmpExportAllAmerican.EINAML, tmpExportAllAmerican.EINAMF, " & _
                        "tmpExportAllAmerican.EIGRPID, tmpExportAllAmerican.EINMPLAN, tmpExportAllAmerican.TID, CDate(Mid(" & _
                        "[EIDTBR],1,2) & '/' & Mid([EIDTBR],3,2) & '/' & Mid([EIDTBR],5,4)) AS DOB, " & _
                        "tmpExportAllAmerican.DepID " & _
                        "FROM tmpExportAllAmerican " & _
                        "WHERE (((tmpExportAllAmerican.EIRECID)='M') " & _
                        "AND ((tmpExportAllAmerican.EISBRID)='" & strID & "') " & _
                        "AND ((tmpExportAllAmerican.EIMBRID) = '' Or tmpExportAllAmerican.EIMBRID Is Null) " & _
                        "AND ((tmpExportAllAmerican.EINMPLAN)='QCDWHT-MNL' Or (tmpExportAllAmerican.EINMPLAN)='QCDWHT-QCD' Or " & _
                        "(tmpExportAllAmerican.EINMPLAN)='QCDRPL-MNL' Or (tmpExportAllAmerican.EINMPLAN)='QCDRPL-QCD')) " & _
                        "ORDER BY tmpExportAllAmerican.EISBRID, tmpExportAllAmerican.EIRECID DESC, " & _
                        "CDate(Mid([EIDTBR],1,2) & '/' & Mid([EIDTBR],3,2) & '/' & Mid([EIDTBR],5,4)), " & _
                        "tmpExportAllAmerican.EINAML, tmpExportAllAmerican.EINAMF; "
                            
                Set rst2 = dbs.OpenRecordset(strSQL2, dbOpenSnapshot)
                
                If rst2.RecordCount > 0 Then
                    intSuffix = HighSuffix(strID) + 1
                    Do Until rst2.EOF
                       If intSuffix < 10 Then
                          strSuffix = "0" & CStr(intSuffix)
                       Else
                          strSuffix = CStr(intSuffix)
                       End If
                       
                       'update the dependent's EIBMRID on tblDependent
                       ExecuteSQL "uspMbrID_Dependent " & rst2.Fields("DepID") & ", '" & Mid(rst2.Fields("EISBRID"), 1, 9) & strSuffix & "'"
                            
                       'update the dependent's EIMBRID on tmpExportAllAmerican
                       For I = 1 To 2
                          ExecuteSQL "uspMbrID " & rst2.Fields("TID") & ", '" & Mid(rst2.Fields("EISBRID"), 1, 9) & strSuffix & "'"
                          rst2.MoveNext
                       Next I
                            
                    intSuffix = intSuffix + 1
                    Loop
                End If
                
            End With
            rst.MoveNext
        Loop
    End If
    
    '04-4
    'fourth I need to identify existing RED and BLUE subscribers
    'they will have a MemberID and only one record for each person
    'do not assign them a MemberID - they already have one
    'identify if they have dependents who do not have MemberID's
    'if they do have dependents without MemberID's
    'assigned sequential MemberID numbers to them
    'the suffixes for these MemberID numbers must pick
    'up after the last assigned MemberID number
    strSQL = "SELECT DISTINCT tmpExportAllAmerican.EIRECID, tmpExportAllAmerican.EIMBRID, " & _
                "tmpExportAllAmerican.EISBRID, tmpExportAllAmerican.EINAMF, tmpExportAllAmerican.EINAML, " & _
                "tmpExportAllAmerican.EINMPLAN " & _
                "FROM tmpExportAllAmerican " & _
                "WHERE (((tmpExportAllAmerican.EIRECID)='P') " & _
                "AND ((tmpExportAllAmerican.EINMPLAN)='QCDRED-QCD' " & _
                "Or (tmpExportAllAmerican.EINMPLAN)='QCDBLU-MNL'));"
    
    Set rst = dbs.OpenRecordset(strSQL, dbOpenDynaset, dbSeeChanges)
    If rst.RecordCount > 0 Then
        
        Do Until rst.EOF
            With rst
                
                strID = rst.Fields("EISBRID")
                
                'now process the subscriber's dependents
                strSQL2 = "SELECT tmpExportAllAmerican.EIRECID, tmpExportAllAmerican.EIMBRID, tmpExportAllAmerican.EISBRID, " & _
                        "tmpExportAllAmerican.EISSN, tmpExportAllAmerican.EINAML, tmpExportAllAmerican.EINAMF, " & _
                        "tmpExportAllAmerican.EIGRPID, tmpExportAllAmerican.EINMPLAN, tmpExportAllAmerican.TID, CDate(Mid(" & _
                        "[EIDTBR],1,2) & '/' & Mid([EIDTBR],3,2) & '/' & Mid([EIDTBR],5,4)) AS DOB, " & _
                        "tmpExportAllAmerican.DepID " & _
                        "FROM tmpExportAllAmerican " & _
                        "WHERE (((tmpExportAllAmerican.EIRECID)='M') " & _
                        "AND ((tmpExportAllAmerican.EISBRID)='" & strID & "') " & _
                        "AND ((tmpExportAllAmerican.EIMBRID) = '' Or tmpExportAllAmerican.EIMBRID Is Null) " & _
                        "AND ((tmpExportAllAmerican.EINMPLAN)='QCDRED-QCD' Or (tmpExportAllAmerican.EINMPLAN)='QCDBLU-MNL')) " & _
                        "ORDER BY tmpExportAllAmerican.EISBRID, tmpExportAllAmerican.EIRECID DESC, " & _
                        "CDate(Mid([EIDTBR],1,2) & '/' & Mid([EIDTBR],3,2) & '/' & Mid([EIDTBR],5,4)), " & _
                        "tmpExportAllAmerican.EINAML, tmpExportAllAmerican.EINAMF;"
                                  
                Set rst2 = dbs.OpenRecordset(strSQL2, dbOpenSnapshot)
                
                If rst2.RecordCount > 0 Then
                    intSuffix = HighSuffix(strID) + 1
                    Do Until rst2.EOF
                       If intSuffix < 10 Then
                          strSuffix = "0" & CStr(intSuffix)
                       Else
                          strSuffix = CStr(intSuffix)
                       End If
                       
                       'update the dependent's EIBMRID on tblDependent
                       ExecuteSQL "uspMbrID_Dependent " & rst2.Fields("DepID") & ", '" & Mid(rst2.Fields("EISBRID"), 1, 9) & strSuffix & "'"
                            
                       'update the dependent's EIMBRID on tmpExportAllAmerican
                       ExecuteSQL "uspMbrID " & rst2.Fields("TID") & ", '" & Mid(rst2.Fields("EISBRID"), 1, 9) & strSuffix & "'"
                       
                       rst2.MoveNext
                            
                    intSuffix = intSuffix + 1
                    Loop
                End If
                
            End With
            rst.MoveNext
        Loop
    End If
    
    Set rst = Nothing
    Set rst2 = Nothing
    Set dbs = Nothing

ExitProc:
  Exit Sub

ErrorHandler:
  MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation
  Resume ExitProc


End Sub
Function CreateExportFile()

  ' Comments   :  Prepares a fixed length file for Group Link
  '               with all of the All American CRUD
  '               that came from the website
  ' Parameters :
  ' Created    : 02/06/2009
  ' Modified   : 02/27/2009
  '
  ' --------------------------------------------------------
    
    On Error GoTo ErrorHandler
    
    Dim FileDialog As clsFileDialog
    Dim fResult As Boolean
    Dim strSpec As String
    Dim strTableName As String
    Dim strFileName As String
    Dim strSQL As String
        
    fResult = False
    
    DoCmd.SetWarnings False
    DoCmd.Hourglass True

    'Export the Group Link (All American)
    'subscribers and dependents to a
    'fixed length file
    '
    'purge the temp table
    ExecuteSQL ("TRUNCATE TABLE tmpExportAllAmerican")

    'upload the subscribers and dependents
    'who have a t-type of Added or Changed
    'DoCmd.OpenQuery "qappOnlineEnrollment_Upload_Subscr"
    'DoCmd.OpenQuery "qappOnlineEnrollment_Upload_Dep"
    DoCmd.OpenQuery "qappOnlineEnrollment_Upload_Subscr_RED"
    DoCmd.OpenQuery "qappOnlineEnrollment_Upload_Subscr_BLU"
    DoCmd.OpenQuery "qappOnlineEnrollment_Upload_Subscr_WHTRPL_MNL"
    DoCmd.OpenQuery "qappOnlineEnrollment_Upload_Subscr_WHTRPL_QCD"
    DoCmd.OpenQuery "qappOnlineEnrollment_Upload_Dep_RED"
    DoCmd.OpenQuery "qappOnlineEnrollment_Upload_Dep_BLU"
    DoCmd.OpenQuery "qappOnlineEnrollment_Upload_Dep_WHTRPL_MNL"
    DoCmd.OpenQuery "qappOnlineEnrollment_Upload_Dep_WHTRPL_QCD"
    
    'process plan changes
    Call PlanChanges

    'upload the subscribers and dependents
    'who have a t-type of Deleted
    DoCmd.OpenQuery "qappOnlineEnrollment_Upload_Subscr_delete"
    DoCmd.OpenQuery "qappOnlineEnrollment_Upload_Dep_delete"

    'flag the subscribers who have just been added to tmpExportAllAmerican,
    'the data in tblSubscr_delete determines who is inserted into
    'tmpExportAllAmerican where Flag = 0
    'switching the Flag to 1 means that they have been added
    'to the Group Link export table and will not be added again
    strSQL = "UPDATE tblSubscr_delete SET tblSubscr_delete.Flag = 1 WHERE (((tblSubscr_delete.Flag)=0));"
    ExecuteSQL strSQL

    'reset the flag field in tblSubscr
    strSQL = "Update tblSubscr Set Flag = Null WHERE Flag Is Not Null;"
    ExecuteSQL strSQL

    'assign MemberID's to subscribers
    'and dependents who do not have them
    Call AssignEIMBRID
        
    'correct SubID's where the primary subscriber's SubID
    'does not match the MbrID - this is a requirement for
    'GroupLink
    Call CorrectSubIDs
    
    'finally - fix any effective date mismatches between QCD and GroupLink
    ExecuteSQL "uspEffDateCleanup"
    
    'create the export file
    strSpec = "ImportAllAmerican"
    strTableName = "qseltmpExportAllAmerican"
    
    Set FileDialog = New clsFileDialog
  
    With FileDialog
        .DefaultExt = "txt"
        .DialogTitle = "Save Group Link Export file"
        .Filter = "Text files (*.txt)|*.txt|All Files (*.*)|*.*"
        .FilterIndex = 0
        'strFileName = "F:\jdcConsulting\Group Link\" & Me.ctlGroupID & "_AA_Export.txt"
        .FileName = "OnlineEnrollment_AA_Export.txt"
        .Flags = FleFileMustExist + FleHideReadOnly + FleCreatePrompt
        .hWndParent = 0 'Use your form's .hwnd property if available
        .MaxFileSize = 255
        
        If .Show(False) Then
            strFileName = .FileName
            DoCmd.TransferText acExportFixed, strSpec, strTableName, strFileName, 0
        Else
            MsgBox "User cancelled"
        End If
      
    End With
    
    Set FileDialog = Nothing
    
    DoCmd.Hourglass False
    DoCmd.SetWarnings True
    
    fResult = True
    CreateExportFile = fResult
    
Exit_Point:
    Exit Function
    
ErrorHandler:
    MsgBox Err.DESCRIPTION & " " & Err.Number
    DoCmd.Hourglass False
    DoCmd.SetWarnings True
    GoTo Exit_Point

End Function
Function HighSuffix(strID As String) As Integer
  ' Comments   :  find the highest suffix used in the family
  ' Parameters :
  ' Created    : 03/26/2009
  ' Modified   :
  '
  ' --------------------------------------------------------
  On Error GoTo HandleError
    
    Dim dbs As DAO.Database
    Dim rst As DAO.Recordset
    Dim strSQL As String
                
    Set dbs = CurrentDb()
                
    strSQL = "SELECT tmpExportAllAmerican.EIMBRID " & _
                "FROM tmpExportAllAmerican " & _
                "WHERE (((tmpExportAllAmerican.EISBRID)='" & strID & "') " & _
                "AND ((tmpExportAllAmerican.EINMPLAN)='QCDWHT-MNL' " & _
                "Or (tmpExportAllAmerican.EINMPLAN)='QCDWHT-QCD' " & _
                "Or (tmpExportAllAmerican.EINMPLAN)='QCDRPL-MNL' " & _
                "Or (tmpExportAllAmerican.EINMPLAN)='QCDRPL-QCD')) " & _
                "GROUP BY tmpExportAllAmerican.EIMBRID " & _
                "ORDER BY tmpExportAllAmerican.EIMBRID DESC;"
    Set rst = dbs.OpenRecordset(strSQL, dbOpenSnapshot)
    If rst.RecordCount > 0 Then
        HighSuffix = CInt(Mid(rst.Fields("EIMBRID"), 10, 2))
    Else
        HighSuffix = 0
    End If
    
    Set rst = Nothing
    Set dbs = Nothing
    
ExitProc:
  Exit Function

HandleError:
  MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation
  Resume ExitProc

End Function
Private Sub cmdGroupLinkFile_Click()
  ' Comments   :
  ' Parameters :
  ' Created    : 02/06/2009
  ' Modified   :
  '
  ' --------------------------------------------------------
  On Error GoTo HandleError

    Dim fCheck As Boolean
            
    fCheck = CreateExportFile
    
    If fCheck = True Then
        Me.txtStatus = "Processing Complete"
    Else
        Me.txtStatus = "Processing Errors!"
    End If

ExitProc:
  Exit Sub

HandleError:
  MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation
  Resume ExitProc
  
End Sub
Private Sub cmdPrintCards_Click()

  ' Comments   :
  ' Parameters :
  ' Created    : 03/16/2009
  ' Modified   :
  '
  ' --------------------------------------------------------
    On Error GoTo HandleError
    
    Dim db As DAO.Database
    Dim rs As DAO.Recordset
    Dim strSQL As String
    Dim strDocName
    Dim intGroupType As Integer
    Dim strGroupID As String
    Dim strUserName As String
    
    
    Set db = CurrentDb()
    
    'select all of the groups that were involved in the CRUD download
    strSQL = "SELECT tblGrp.GroupID, tblGrp.GroupType " & _
                "FROM tblGrp INNER JOIN tblEDI_App_Subscr ON tblGrp.GroupID = tblEDI_App_Subscr.SubGroupID " & _
                "GROUP BY tblGrp.GroupID, tblGrp.GroupType;"
    Set rs = db.OpenRecordset(strSQL, dbOpenSnapshot)

    If rs.RecordCount > 0 Then
        
        DoCmd.SetWarnings False
        DoCmd.Hourglass True
        
        Do Until rs.EOF
                        
            strGroupID = rs.Fields("GroupID")
            intGroupType = rs.Fields("GroupType")
            strUserName = GetCurrentUserName()
            
            'figure out what type of group it is and print the appropriate card
            Select Case intGroupType
                Case 1
                    strDocName = "rptCardMemGrp"
                Case 2
                    strDocName = ""
                Case 3
                    strDocName = ""
                Case 4
                    strDocName = "rptCardMemAA"
            End Select
            
            
            'first, do BEXHM if there are any
            If strGroupID = "BEXHM" Then
            
            'clean up tmpEDI_rpt
            ExecuteSQL "DELETE FROM tmpEDI_rpt"
            
            'populate tmpEDI_rpt
            strSQL = "INSERT INTO tmpEDI_Rpt ( GroupID, SUBssn, SUBfirstNAME, SUBlastNAME, SUBStreet, SUBcity, SUBstate, SUBzip, GRMailCard ) " & _
                        "SELECT tblSubscr_Bexar.SubGroupID, tblSubscr_Bexar.SubSSN, tblSubscr_Bexar.SubFirstName, tblSubscr_Bexar.SubLastName, " & _
                        "[tblSubscr_Bexar].[SubStreet1]+' '+[tblSubscr_Bexar].[SubStreet2] AS Street, tblSubscr_Bexar.SubCity, tblSubscr_Bexar.SubState, tblSubscr_Bexar.SubZip, tblGrp.GRMailCard " & _
                        "FROM (tblSubscr_Bexar INNER JOIN tblEDI_App_Subscr " & _
                        "ON tblSubscr_Bexar.SubSSN = tblEDI_App_Subscr.SubSSN) " & _
                        "INNER JOIN tblGrp " & _
                        "ON tblSubscr_Bexar.SubGroupID = tblGrp.GroupID " & _
                        "WHERE (((tblGrp.GroupType)=" & intGroupType & "));"
            ExecuteSQL strSQL
            
            'run the report that prints the card
            DoCmd.OpenReport strDocName, acViewNormal
            
            'update the subscriber table to indicate that the card was
            'printed, the date it was printed, and who printed it
            strSQL = "UPDATE tblSubscr_Bexar " & _
                       "SET tblSubscr_Bexar.SubCardPrt = 1, tblSubscr_Bexar.SubCardPrtDte = Convert(varchar, GetDate(), 101), " & _
                       "tblSubscr_Bexar.DateUpdated = Convert(varchar, GetDate(), 101), " & _
                       "tblSubscr_Bexar.UserName = 'Access' " & _
                       "FROM tblSubscr_Bexar " & _
                       "INNER JOIN tblEDI_App_Subscr ON " & _
                       "tblSubscr_Bexar.SUBssn = tblEDI_App_Subscr.SUBssn " & _
                       "WHERE tblSubscr_Bexar.SubGroupID = '" & strGroupID & "'"
            ExecuteSQL strSQL
                       
            Else
            
            'clean up tmpEDI_rpt
            ExecuteSQL "DELETE FROM tmpEDI_rpt"
            
            'populate tmpEDI_rpt
            strSQL = "INSERT INTO tmpEDI_Rpt ( GroupID, SUBssn, SUBfirstNAME, SUBlastNAME, SUBStreet, SUBcity, SUBstate, SUBzip, GRMailCard ) " & _
                        "SELECT tblSubscr.SubGroupID, tblSubscr.SubSSN, tblSubscr.SubFirstName, tblSubscr.SubLastName, " & _
                        "[tblSubscr].[SubStreet1]+' '+[tblSubscr].[SubStreet2] AS Street, tblSubscr.SubCity, tblSubscr.SubState, tblSubscr.SubZip, tblGrp.GRMailCard " & _
                        "FROM (tblSubscr INNER JOIN tblEDI_App_Subscr " & _
                        "ON tblSubscr.SubSSN = tblEDI_App_Subscr.SubSSN) " & _
                        "INNER JOIN tblGrp " & _
                        "ON tblSubscr.SubGroupID = tblGrp.GroupID " & _
                        "WHERE (((tblGrp.GroupType)=" & intGroupType & "));"
            ExecuteSQL strSQL
            
            'run the report that prints the card
            DoCmd.OpenReport strDocName, acViewNormal
                        
            'update the subscriber table to indicate that the card was
            'printed, the date it was printed, and who printed it
            strSQL = "UPDATE tblSubscr " & _
                       "SET tblSubscr.SubCardPrt = 1, tblSubscr.SubCardPrtDte = Convert(varchar, GetDate(), 101), " & _
                       "tblSubscr.DateUpdated = Convert(varchar, GetDate(), 101), " & _
                       "tblSubscr.UserName = 'Access' " & _
                       "FROM tblSubscr " & _
                       "INNER JOIN tblEDI_App_Subscr ON " & _
                       "tblSubscr.SUBssn = tblEDI_App_Subscr.SUBssn " & _
                       "WHERE tblSubscr.SubGroupID = '" & strGroupID & "'"
            ExecuteSQL strSQL
            End If
        rs.MoveNext
        Loop
        MsgBox "Cards sent to the printer!", vbExclamation, "Cards Printed"
                
        DoCmd.SetWarnings True
        DoCmd.Hourglass False
            
        
    End If
    
        Set rs = Nothing
        Set db = Nothing
    
    
ExitProc:
  Exit Sub

HandleError:
  MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation
  Resume ExitProc

End Sub

Private Sub cmdPrintMissingRates_Click()

On Error GoTo Err_cmdPrintMissingRates_Click

    Dim stDocName As String

    stDocName = "rptMissingRates"
    DoCmd.OpenReport stDocName, acPreview

Exit_cmdPrintMissingRates_Click:
    Exit Sub

Err_cmdPrintMissingRates_Click:
    MsgBox Err.DESCRIPTION
    Resume Exit_cmdPrintMissingRates_Click


End Sub

Private Sub cmdPrintNewSubscr_Click()
  ' Comments   : Prints a report of new subscribers
  ' Parameters : None
  ' Created    : 2/28/2004 1:31:11 PM Admin
  ' Modified   :  4/23/2009
  '              Used ado instead of dao to
  '              clear temp table
  ' --------------------------------------------------------
  On Error GoTo HandleError
    
    'Dim db As DAO.Database
    'Set db = CurrentDb()
    
    DoCmd.SetWarnings False
    'db.Execute "DELETE FROM tmpEDI_rpt", dbSeeChanges
    ExecuteSQL ("TRUNCATE TABLE tmpEDI_Rpt")

    'insert subscribers into the report temp table
    DoCmd.OpenQuery "qappOnlineEnrollment_SubRpt"
    'insert deleted subscribers into report temp table
    DoCmd.OpenQuery "qappOnlineEnrollment_SubRpt_delete"
    'open the online enrollment report
    DoCmd.OpenReport "rptOnlineEnrollment_Subs", acViewPreview
    
    DoCmd.SetWarnings True
    
    'Set db = Nothing

ExitProc:
  Exit Sub

HandleError:
  MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation
  Resume ExitProc
       
End Sub
Private Sub cmdProcess_Click()
  ' Comments   :
  ' Parameters :
  ' Created    : 02/06/2009
  ' Modified   :
  '
  ' --------------------------------------------------------
  On Error GoTo HandleError

    Dim fCheck As Boolean
            
    fCheck = ProcessOnlineEnrollment
    
    DoCmd.Hourglass True
    DoCmd.SetWarnings False
    
    If fCheck = True Then
        Me.txtStatus = "Processing Complete"
    Else
        Me.txtStatus = "Processing Errors!"
    End If
    
    DoCmd.Hourglass False
    DoCmd.SetWarnings True

ExitProc:
  Exit Sub

HandleError:
  MsgBox "Error: " & Err.DESCRIPTION & _
     " (" & Err.Number & ")", vbExclamation
  Resume ExitProc

End Sub
Private Sub cmdSubFileSelect_Click()

    On Error GoTo Err_cmdSubFileSelect_Click

    Dim strFileName As String
    Dim strFile As String
    Dim intProc As Integer

    strFile = GetOpenFile_TSB("C:\My Documents", "Select Import File")
  
    If Not IsNull(strFile) Then
        Me.txtMainFile = strFile
        strFileName = strFile
        intProc = 1
    End If

Exit_cmdSubFileSelect_Click:
    Me.cmdSubFileSelect.SetFocus
    Exit Sub

Err_cmdSubFileSelect_Click:
    MsgBox Err.DESCRIPTION
    Resume Exit_cmdSubFileSelect_Click
    
End Sub
Public Function RateCheck() As Boolean
  ' Comments   : Checks to see if the rates in the database
  '              will support the process of the groups
  ' Parameters :
  ' Returns    : Boolean value to indicate if rate are
  '              there to assign a rate to every subscriber
  ' Created    : 02/06/2009
  ' Modified   :
  '
  ' --------------------------------------------------------

    
    On Error GoTo PROC_ERR
    
    Dim strSQL As String
    strSQL = "SELECT tblEDI_App_Subscr.SubSSN, tblRates.GroupID, tblRates.PlanID, tblRates.CoverID, " & _
             "tblRates.GroupID, tblRates.PlanID, tblRates.CoverID " & _
             "FROM tblEDI_App_Subscr LEFT JOIN tblRates ON " & _
             "(tblEDI_App_Subscr.CoverID = tblRates.CoverID) " & _
             "AND (tblEDI_App_Subscr.PlanID = tblRates.PlanID) " & _
             "AND (tblEDI_App_Subscr.SubGroupID = tblRates.GroupID) " & _
             "WHERE (((tblRates.GroupID) Is Null)) OR (((tblRates.PlanID) Is Null)) OR (((tblRates.CoverID) Is Null));"
    Call LoadADORecordSet(strSQL)
    
    'Debug.Print strSQL
    
    If g_adoRS.EOF Then
        RateCheck = True
    Else
        RateCheck = False
    End If
    
    g_adoRS.Close
    

    
PROC_EXIT:
    Exit Function

PROC_ERR:
    MsgBox Err.DESCRIPTION
    Resume PROC_EXIT
    

End Function
Private Function ProcessOnlineEnrollment() As Boolean
  ' Comments   : Processes two csv files that
  '              are downloaded from the QCD website
  ' Parameters :
  ' Returns    : Boolean value to indicate if process
  '              succeeded or failed
  ' Created    : 02/06/2009
  ' Modified   :
  '
  ' --------------------------------------------------------

    On Error GoTo Err_ProcessOnlineEnrollment_Click
    
    Dim fResult As Boolean
    Dim fRateCheck As Boolean
    Dim strSQL As String
    Dim varFileName As Variant
    Dim strFileName As String
    Dim strSpec As String
    Dim strTableName As String
    
    fResult = False
    fRateCheck = False
    
    DoCmd.Hourglass True
    DoCmd.SetWarnings False
    
    ' process subscribers
    strSpec = "OnlineEnrollment_Sub"
    strTableName = "tblSubscriber_temp"
    strFileName = Me.txtMainFile
    varFileName = Me.txtMainFile
    
    If varFileName <> Null Or varFileName <> "" Then
        strFileName = varFileName
        
        ' purge temp table
        ExecuteSQL "DELETE FROM tblSubscriber_temp;"
        'move data from text file to temp table
        DoCmd.TransferText acImportDelim, strSpec, strTableName, strFileName, 0
        ' clean junk out of temp table
        ExecuteSQL "DELETE " & _
                   "FROM tblSubscriber_temp " & _
                   "WHERE (((tblSubscriber_temp.SSN) Is Null));"
        
        'process the creates and updates from the file
        '
        'clear out tblEDI_App_Subscr
        ExecuteSQL "DELETE FROM tblEDI_App_Subscr" 'purge next temp table
        'use a querydef to move the creates and updates into tblEDI_App_Subscr
        DoCmd.OpenQuery "qappOnlineEnrollment_Sub"
        'update fields from tblSubscr esp SubID for non BEXHM groups
        strSQL = "UPDATE tblEDI_App_Subscr  SET tblEDI_App_Subscr.SubID = tblSubscr.SubID, " & _
                "tblEDI_App_Subscr.SubCardPrt = tblSubscr.SUBcardPRT,  " & _
                "tblEDI_App_Subscr.SubCardPrtDte = tblSubscr.SUBcardPRTdte, " & _
                "tblEDI_App_Subscr.SubNotes = tblSubscr.SUBnotes " & _
                "FROM tblEDI_App_Subscr INNER JOIN " & _
                "tblSubscr ON tblEDI_App_Subscr.SubSSN = tblSubscr.SubSSN"
        ExecuteSQL strSQL
        
        'update fields from tblSubscr_Bexar esp SubID for BEXHM
        strSQL = "UPDATE tblEDI_App_Subscr  SET tblEDI_App_Subscr.SubID = tblSubscr_Bexar.SubID, " & _
                "tblEDI_App_Subscr.SubCardPrt = tblSubscr_Bexar.SUBcardPRT,  " & _
                "tblEDI_App_Subscr.SubCardPrtDte = tblSubscr_Bexar.SUBcardPRTdte, " & _
                "tblEDI_App_Subscr.SubNotes = tblSubscr_Bexar.SUBnotes " & _
                "FROM tblEDI_App_Subscr INNER JOIN " & _
                "tblSubscr_Bexar ON tblEDI_App_Subscr.SubSSN = tblSubscr_Bexar.SubSSN"
        ExecuteSQL strSQL
        
        'if no SubID and t-type = change then this was meant to be an add
        'change the TransactionType to Added
        '
        'this is for non BEXHM groups
        strSQL = "UPDATE tblEDI_App_Subscr " & _
                    "SET TransactionType = 'Added' " & _
                    "WHERE (SubID IS NULL) " & _
                    "AND (TransactionType = 'Changed') " & _
                    "AND (SubGroupID <> 'BEXHM')"
        ExecuteSQL strSQL
        
        'this is for BEXHM
        strSQL = "UPDATE tblEDI_App_Subscr " & _
                    "SET TransactionType = 'Added' " & _
                    "WHERE (SubID IS NULL) " & _
                    "AND (TransactionType = 'Changed') " & _
                    "AND (SubGroupID = 'BEXHM')"
        ExecuteSQL strSQL
        
        'if the group type is a 1 i.e. QCD Only
        'then change the plan to 5 which is the planid
        'for QCD Only
        strSQL = "UPDATE s SET s.PlanID = 5 FROM tblEDI_App_Subscr As s  " & _
                    "INNER JOIN tblGrp as g ON s.SubGroupID = g.GroupID " & _
                    "WHERE g.GroupType = 1"
        ExecuteSQL strSQL
        
        fRateCheck = RateCheck()
        If fRateCheck Then 'check to see if we have enough rate id's
            'Nothing
        Else
            DoCmd.SetWarnings True
            DoCmd.Hourglass False
            Err.Raise 1, "Process Online Enrollment", "You do not have the rate id's in the database to process the download!  Run the rate report."
            GoTo Err_ProcessOnlineEnrollment_Click
        End If
        
        'update rate id's
        strSQL = "UPDATE tblEDI_App_Subscr " & _
                    "Set tblEDI_App_Subscr.RateID = tblRates.RateID " & _
                    "FROM tblEDI_App_Subscr INNER JOIN tblRates ON tblEDI_App_Subscr.CoverID = tblRates.CoverID " & _
                    "AND tblEDI_App_Subscr.PlanID = tblRates.PlanID " & _
                    "AND tblEDI_App_Subscr.SubGroupID = tblRates.GroupID "
        ExecuteSQL strSQL
        
        'process the deletes
        '
        'clear out tblEDI_App_Subscr_delete
        ExecuteSQL "DELETE FROM tblEDI_App_Subscr_delete"
        'use a querydef to move the deletes into tblEDI_App_Subscr_delete
        DoCmd.OpenQuery "qappOnlineEnrollment_Sub_delete"
        
        'update fields from tblSubscr esp SubID for non BEXHM groups
        strSQL = "UPDATE tblEDI_App_Subscr_delete  SET tblEDI_App_Subscr_delete.SubID = tblSubscr.SubID, " & _
                "tblEDI_App_Subscr_delete.SubCardPrt = tblSubscr.SUBcardPRT,  " & _
                "tblEDI_App_Subscr_delete.SubCardPrtDte = tblSubscr.SUBcardPRTdte, " & _
                "tblEDI_App_Subscr_delete.SubNotes = tblSubscr.SUBnotes " & _
                "FROM tblEDI_App_Subscr_delete INNER JOIN " & _
                "tblSubscr ON tblEDI_App_Subscr_delete.SubSSN = tblSubscr.SubSSN"
        ExecuteSQL strSQL
        
        'update fields from tblSubscr_Bexar esp SubID for BEXHM
        strSQL = "UPDATE tblEDI_App_Subscr_delete  SET tblEDI_App_Subscr_delete.SubID = tblSubscr_Bexar.SubID, " & _
                "tblEDI_App_Subscr_delete.SubCardPrt = tblSubscr_Bexar.SUBcardPRT,  " & _
                "tblEDI_App_Subscr_delete.SubCardPrtDte = tblSubscr_Bexar.SUBcardPRTdte, " & _
                "tblEDI_App_Subscr_delete.SubNotes = tblSubscr_Bexar.SUBnotes " & _
                "FROM tblEDI_App_Subscr_delete INNER JOIN " & _
                "tblSubscr_Bexar ON tblEDI_App_Subscr_delete.SubSSN = tblSubscr_Bexar.SubSSN"
        ExecuteSQL strSQL
        
        'if no SubID, t-type = deleted, and all groups except BEXHM
        'then delete records from temporary table
        'strSQL = "DELETE FROM tblEDI_App_Subscr_delete " & _
                    "WHERE (SubID IS NULL) " & _
                    "AND (TransactionType = 'Deleted') " & _
                    "AND (SubGroupID <> 'BEXHM')"
        'ExecuteSQL strSQL
        
        'if no SubID, t-type = deleted, and group = BEXHM
        'then delete records from temporary table
        'strSQL = "DELETE FROM tblEDI_App_Subscr_delete " & _
                    "WHERE (SubID IS NULL) " & _
                    "AND (TransactionType = 'Deleted') " & _
                    "AND (SubGroupID = 'BEXHM')"
        'ExecuteSQL strSQL
        
        'assign subscriber id to any subscriber who does not have one
        Call PopulateEDISubIDs
       
    End If
    
    ' process dependents
    strSpec = "OnlineEnrollment_Dep"
    strTableName = "tblDependent_temp"
    strFileName = Me.txtDependentFile
    varFileName = Me.txtDependentFile
    
    If varFileName <> Null Or varFileName <> "" Then
    
        strFileName = varFileName
        ' purge temp table
        ExecuteSQL ("DELETE FROM tblDependent_temp;")
        'move data from text file to temp table - tblDependent_temp
        DoCmd.TransferText acImportDelim, strSpec, strTableName, strFileName, 0
        ' clean junk out of temp table
        ExecuteSQL "DELETE " & _
                   "FROM tblDependent_temp " & _
                   "WHERE (((tblDependent_temp.SubSSN) Is Null));"
        'purge next temp table
        ExecuteSQL ("DELETE FROM tblEDI_App_Dep")
        'move data from tblDependent_temp to tblEDI_App_Dep
        'for dependents whose subscribers have been Added or Changed
        DoCmd.OpenQuery "qappOnlineEnrollment_Dep"
        'move data from tblDependent_temp to tblDependent_delete
        'for dependents whose subscribers have been Deleted
        DoCmd.OpenQuery "qappOnlineEnrollment_Dep_delete"
    End If
        
    
    
    DoCmd.Hourglass False
    DoCmd.SetWarnings True
    
    fResult = True
    ProcessOnlineEnrollment = fResult

Exit_ProcessOnlineEnrollment_Click:
    Exit Function

Err_ProcessOnlineEnrollment_Click:
    ProcessOnlineEnrollment = fResult
    DoCmd.Hourglass False
    DoCmd.SetWarnings True
    MsgBox Err.DESCRIPTION
    GoTo Exit_ProcessOnlineEnrollment_Click
    
End Function
Private Sub cmdClose_Click()
On Error GoTo Err_cmdClose_Click


    DoCmd.Close

Exit_cmdClose_Click:
    Exit Sub

Err_cmdClose_Click:
    MsgBox Err.DESCRIPTION
    Resume Exit_cmdClose_Click
    
End Sub
Private Sub Form_Open(Cancel As Integer)
    
    On Error GoTo PROC_ERR
    
    With Me
        .txtMainFile = ""
        .txtDependentFile = ""
        .txtStatus = ""
        .txtStatusDataImport = ""
    End With
    
PROC_EXIT:
    Exit Sub

PROC_ERR:
    MsgBox Err.DESCRIPTION
    Resume PROC_EXIT
    

End Sub